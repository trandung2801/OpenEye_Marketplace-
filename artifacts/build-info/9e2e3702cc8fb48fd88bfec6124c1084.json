{"id":"9e2e3702cc8fb48fd88bfec6124c1084","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/Vault.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\r\n\r\ncontract Vault is Ownable, AccessControlEnumerable {\r\n    using SafeERC20 for IERC20; // Chua bt su dung\r\n\r\n    IERC20 private token;\r\n    uint256 public maxWithdrawAmount;\r\n    bool public withdrawEnable;\r\n    bytes32 public constant WITHDRAWER_ROLE = keccak256(\"WITHDRAWER_ROLE\");\r\n\r\n    constructor(address initOwner)\r\n            Ownable(initOwner)\r\n    {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    function setToken(IERC20 _token) public onlyOwner {\r\n        token = _token;\r\n    }\r\n\r\n    function setMaxWithdrawAmount(uint256 _maxAmount) public onlyOwner {\r\n        maxWithdrawAmount = _maxAmount;\r\n    }\r\n\r\n    function setWithdrawEnable(bool _isEnable) public onlyOwner {\r\n        withdrawEnable = _isEnable;\r\n    }\r\n\r\n    function withdraw(address _to, uint256 _amount) external onlyWithdrawer {\r\n        token.transfer(_to, _amount);\r\n    }\r\n\r\n    function deposit(uint256 _amout) external {\r\n        SafeERC20.safeTransferFrom(token, msg.sender, address(this), _amout);\r\n    }\r\n\r\n    modifier onlyWithdrawer() {\r\n        require(owner() == _msgSender() || hasRole(\"WITHDRAWER_ROLE\", _msgSender()), \"Caller is not a withdrawer\");\r\n        _;\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1381],"ERC165":[1405],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1382,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1406,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1381,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,1405,1417,378,1381],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1404],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1404,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1381],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":1382,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1381,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,1381],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[668],"EnumerableSet":[2030],"IAccessControlEnumerable":[694]},"id":669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:3"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":669,"sourceUnit":695,"src":"155:72:3","symbolAliases":[{"foreign":{"id":529,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"163:24:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":669,"sourceUnit":296,"src":"228:51:3","symbolAliases":[{"foreign":{"id":531,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"236:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":669,"sourceUnit":2031,"src":"280:68:3","symbolAliases":[{"foreign":{"id":533,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"288:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":536,"name":"IAccessControlEnumerable","nameLocations":["490:24:3"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"490:24:3"},"id":537,"nodeType":"InheritanceSpecifier","src":"490:24:3"},{"baseName":{"id":538,"name":"AccessControl","nameLocations":["516:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"516:13:3"},"id":539,"nodeType":"InheritanceSpecifier","src":"516:13:3"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"350:94:3","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":668,"linearizedBaseContracts":[668,295,1405,1417,694,378,1381],"name":"AccessControlEnumerable","nameLocation":"463:23:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":543,"libraryName":{"id":540,"name":"EnumerableSet","nameLocations":["542:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":2030,"src":"542:13:3"},"nodeType":"UsingForDirective","src":"536:49:3","typeName":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:3","574:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"560:24:3"},"referencedDeclaration":1743,"src":"560:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":548,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:3","nodeType":"VariableDeclaration","scope":668,"src":"591:70:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1743_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":547,"keyName":"role","keyNameLocation":"607:4:3","keyType":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1743_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:3","629:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"615:24:3"},"referencedDeclaration":1743,"src":"615:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[62],"body":{"id":569,"nodeType":"Block","src":"820:121:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"837:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":559,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"857:24:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$694_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$694_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"852:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$694","typeString":"type(contract IAccessControlEnumerable)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":565,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"922:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":563,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"898:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$668_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"898:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":556,"id":568,"nodeType":"Return","src":"830:104:3"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"668:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:3","nodeType":"FunctionDefinition","overrides":{"id":553,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:3"},"parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:3","nodeType":"VariableDeclaration","scope":570,"src":"756:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:3"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"814:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:3"},"scope":668,"src":"729:212:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[685],"body":{"id":587,"nodeType":"Block","src":"1616:52:3","statements":[{"expression":{"arguments":[{"id":584,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1655:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":580,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1633:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1743_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":582,"indexExpression":{"id":581,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1646:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"1633:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1743_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1743_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":579,"id":586,"nodeType":"Return","src":"1626:35:3"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"947:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":588,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"role","nameLocation":"1557:4:3","nodeType":"VariableDeclaration","scope":588,"src":"1549:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"index","nameLocation":"1571:5:3","nodeType":"VariableDeclaration","scope":588,"src":"1563:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:3"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"1607:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:3"},"scope":668,"src":"1526:142:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[693],"body":{"id":602,"nodeType":"Block","src":"1916:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":596,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1933:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1743_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":598,"indexExpression":{"id":597,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1946:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:3","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"1933:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1743_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1743_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":595,"id":601,"nodeType":"Return","src":"1926:34:3"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1674:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"role","nameLocation":"1872:4:3","nodeType":"VariableDeclaration","scope":603,"src":"1864:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"1907:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:3"},"scope":668,"src":"1836:131:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[256],"body":{"id":634,"nodeType":"Block","src":"2161:165:3","statements":[{"assignments":[615],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"granted","nameLocation":"2176:7:3","nodeType":"VariableDeclaration","scope":634,"src":"2171:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"2171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[{"id":618,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2203:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":619,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2209:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":616,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2186:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$668_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2192:10:3","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":256,"src":"2186:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2186:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2171:46:3"},{"condition":{"id":622,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2231:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"2227:69:3","trueBody":{"id":630,"nodeType":"Block","src":"2240:56:3","statements":[{"expression":{"arguments":[{"id":627,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2277:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":623,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2254:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1743_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":625,"indexExpression":{"id":624,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2267:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2254:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2273:3:3","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1770,"src":"2254:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1743_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1743_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2254:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"nodeType":"ExpressionStatement","src":"2254:31:3"}]}},{"expression":{"id":632,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2312:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":613,"id":633,"nodeType":"Return","src":"2305:14:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1973:91:3","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":635,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2078:10:3","nodeType":"FunctionDefinition","overrides":{"id":610,"nodeType":"OverrideSpecifier","overrides":[],"src":"2137:8:3"},"parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"role","nameLocation":"2097:4:3","nodeType":"VariableDeclaration","scope":635,"src":"2089:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2089:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"account","nameLocation":"2111:7:3","nodeType":"VariableDeclaration","scope":635,"src":"2103:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"2103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:31:3"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"2155:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":611,"name":"bool","nodeType":"ElementaryTypeName","src":"2155:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2154:6:3"},"scope":668,"src":"2069:257:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[294],"body":{"id":666,"nodeType":"Block","src":"2522:169:3","statements":[{"assignments":[647],"declarations":[{"constant":false,"id":647,"mutability":"mutable","name":"revoked","nameLocation":"2537:7:3","nodeType":"VariableDeclaration","scope":666,"src":"2532:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":646,"name":"bool","nodeType":"ElementaryTypeName","src":"2532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":653,"initialValue":{"arguments":[{"id":650,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"2565:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":651,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2571:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":648,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2547:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$668_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2553:11:3","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":294,"src":"2547:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2532:47:3"},{"condition":{"id":654,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2593:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"2589:72:3","trueBody":{"id":662,"nodeType":"Block","src":"2602:59:3","statements":[{"expression":{"arguments":[{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2642:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":655,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2616:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1743_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":657,"indexExpression":{"id":656,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"2629:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2616:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2635:6:3","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1797,"src":"2616:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1743_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1743_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2616:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"ExpressionStatement","src":"2616:34:3"}]}},{"expression":{"id":664,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2677:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":645,"id":665,"nodeType":"Return","src":"2670:14:3"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"2332:92:3","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2438:11:3","nodeType":"FunctionDefinition","overrides":{"id":642,"nodeType":"OverrideSpecifier","overrides":[],"src":"2498:8:3"},"parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"role","nameLocation":"2458:4:3","nodeType":"VariableDeclaration","scope":667,"src":"2450:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"account","nameLocation":"2472:7:3","nodeType":"VariableDeclaration","scope":667,"src":"2464:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2449:31:3"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"2516:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":643,"name":"bool","nodeType":"ElementaryTypeName","src":"2516:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2515:6:3"},"scope":668,"src":"2429:262:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":669,"src":"445:2248:3","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"129:2565:3"},"id":3},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[378],"IAccessControlEnumerable":[694]},"id":695,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":670,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:4"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":695,"sourceUnit":379,"src":"156:53:4","symbolAliases":[{"foreign":{"id":671,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"164:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":674,"name":"IAccessControl","nameLocations":["349:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"349:14:4"},"id":675,"nodeType":"InheritanceSpecifier","src":"349:14:4"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"211:99:4","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":694,"linearizedBaseContracts":[694,378],"name":"IAccessControlEnumerable","nameLocation":"321:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"370:574:4","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"958:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"role","nameLocation":"980:4:4","nodeType":"VariableDeclaration","scope":685,"src":"972:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"index","nameLocation":"994:5:4","nodeType":"VariableDeclaration","scope":685,"src":"986:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:29:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"1024:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1023:9:4"},"scope":694,"src":"949:84:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1039:157:4","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1210:18:4","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"role","nameLocation":"1237:4:4","nodeType":"VariableDeclaration","scope":693,"src":"1229:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1229:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1228:14:4"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"1266:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:9:4"},"scope":694,"src":"1201:74:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":695,"src":"311:966:4","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"130:1148:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[772]},"id":773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":696,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"132:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":772,"linearizedBaseContracts":[772],"name":"IERC20","nameLocation":"213:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"226:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":706,"name":"Transfer","nameLocation":"395:8:5","nodeType":"EventDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:5","nodeType":"VariableDeclaration","scope":706,"src":"404:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:5","nodeType":"VariableDeclaration","scope":706,"src":"426:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:5","nodeType":"VariableDeclaration","scope":706,"src":"446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:5"},"src":"389:72:5"},{"anonymous":false,"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"467:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":715,"name":"Approval","nameLocation":"626:8:5","nodeType":"EventDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:5","nodeType":"VariableDeclaration","scope":715,"src":"635:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:5","nodeType":"VariableDeclaration","scope":715,"src":"658:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:5","nodeType":"VariableDeclaration","scope":715,"src":"683:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:5"},"src":"620:78:5"},{"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"704:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":721,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":772,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"835:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":729,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:5","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"938:7:5","nodeType":"VariableDeclaration","scope":729,"src":"930:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:5"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":729,"src":"970:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:5"},"scope":772,"src":"911:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"985:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":739,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"to","nameLocation":"1229:2:5","nodeType":"VariableDeclaration","scope":739,"src":"1221:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"value","nameLocation":"1241:5:5","nodeType":"VariableDeclaration","scope":739,"src":"1233:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:5"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"1266:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:5"},"scope":772,"src":"1203:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"1278:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":749,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:5","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"owner","nameLocation":"1574:5:5","nodeType":"VariableDeclaration","scope":749,"src":"1566:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"spender","nameLocation":"1589:7:5","nodeType":"VariableDeclaration","scope":749,"src":"1581:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:5"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"1621:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:5"},"scope":772,"src":"1547:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1636:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":759,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:5","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"spender","nameLocation":"2333:7:5","nodeType":"VariableDeclaration","scope":759,"src":"2325:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":759,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:5"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":756,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":772,"src":"2308:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"2387:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":771,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:5","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"from","nameLocation":"2719:4:5","nodeType":"VariableDeclaration","scope":771,"src":"2711:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"to","nameLocation":"2733:2:5","nodeType":"VariableDeclaration","scope":771,"src":"2725:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"value","nameLocation":"2745:5:5","nodeType":"VariableDeclaration","scope":771,"src":"2737:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:5"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"2770:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":768,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:5"},"scope":772,"src":"2689:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":773,"src":"203:2575:5","usedErrors":[],"usedEvents":[706,715]}],"src":"106:2673:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[808]},"id":809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":774,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"149:1963:6","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":808,"linearizedBaseContracts":[808],"name":"IERC20Permit","nameLocation":"2123:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"2142:850:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":793,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:6","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"3030:5:6","nodeType":"VariableDeclaration","scope":793,"src":"3022:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"3053:7:6","nodeType":"VariableDeclaration","scope":793,"src":"3045:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"3078:5:6","nodeType":"VariableDeclaration","scope":793,"src":"3070:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:6","nodeType":"VariableDeclaration","scope":793,"src":"3093:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"v","nameLocation":"3125:1:6","nodeType":"VariableDeclaration","scope":793,"src":"3119:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":785,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"r","nameLocation":"3144:1:6","nodeType":"VariableDeclaration","scope":793,"src":"3136:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"s","nameLocation":"3163:1:6","nodeType":"VariableDeclaration","scope":793,"src":"3155:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:6"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"3179:0:6"},"scope":808,"src":"2997:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"3186:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:6","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"owner","nameLocation":"3509:5:6","nodeType":"VariableDeclaration","scope":801,"src":"3501:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:6"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"3539:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:6"},"scope":808,"src":"3485:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"3554:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":807,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:6","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"3765:2:6"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":807,"src":"3791:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:6"},"scope":808,"src":"3740:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":809,"src":"2113:1689:6","usedErrors":[],"usedEvents":[]}],"src":"123:3680:6"},"id":6},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1351],"IERC20":[772],"IERC20Permit":[808],"SafeERC20":[1098]},"id":1099,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":810,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1099,"sourceUnit":773,"src":"141:37:7","symbolAliases":[{"foreign":{"id":811,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"149:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1099,"sourceUnit":809,"src":"179:60:7","symbolAliases":[{"foreign":{"id":813,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"187:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1099,"sourceUnit":1352,"src":"240:51:7","symbolAliases":[{"foreign":{"id":815,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"248:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"293:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1098,"linearizedBaseContracts":[1098],"name":"SafeERC20","nameLocation":"759:9:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":820,"libraryName":{"id":818,"name":"Address","nameLocations":["781:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"781:7:7"},"nodeType":"UsingForDirective","src":"775:26:7","typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"807:64:7","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":825,"name":"SafeERC20FailedOperation","nameLocation":"882:24:7","nodeType":"ErrorDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"token","nameLocation":"915:5:7","nodeType":"VariableDeclaration","scope":825,"src":"907:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:7"},"src":"876:46:7"},{"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"928:71:7","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":834,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:7","nodeType":"ErrorDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"spender","nameLocation":"1051:7:7","nodeType":"VariableDeclaration","scope":834,"src":"1043:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:7","nodeType":"VariableDeclaration","scope":834,"src":"1060:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:7","nodeType":"VariableDeclaration","scope":834,"src":"1086:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:7"},"src":"1004:109:7"},{"body":{"id":857,"nodeType":"Block","src":"1375:88:7","statements":[{"expression":{"arguments":[{"id":846,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"1405:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"1427:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":739,"src":"1427:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1444:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1448:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":847,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":845,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1385:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"ExpressionStatement","src":"1385:71:7"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"1119:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:7","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"token","nameLocation":"1332:5:7","nodeType":"VariableDeclaration","scope":858,"src":"1325:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":837,"nodeType":"UserDefinedTypeName","pathNode":{"id":836,"name":"IERC20","nameLocations":["1325:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"1325:6:7"},"referencedDeclaration":772,"src":"1325:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"to","nameLocation":"1347:2:7","nodeType":"VariableDeclaration","scope":858,"src":"1339:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"value","nameLocation":"1359:5:7","nodeType":"VariableDeclaration","scope":858,"src":"1351:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:7"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"1375:0:7"},"scope":1098,"src":"1303:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"1792:98:7","statements":[{"expression":{"arguments":[{"id":872,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"1822:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"1844:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":771,"src":"1844:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"1865:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"1871:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1875:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":873,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":871,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1802:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"1802:81:7"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1469:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:7","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"token","nameLocation":"1735:5:7","nodeType":"VariableDeclaration","scope":885,"src":"1728:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":861,"nodeType":"UserDefinedTypeName","pathNode":{"id":860,"name":"IERC20","nameLocations":["1728:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"1728:6:7"},"referencedDeclaration":772,"src":"1728:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"from","nameLocation":"1750:4:7","nodeType":"VariableDeclaration","scope":885,"src":"1742:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"to","nameLocation":"1764:2:7","nodeType":"VariableDeclaration","scope":885,"src":"1756:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"value","nameLocation":"1776:5:7","nodeType":"VariableDeclaration","scope":885,"src":"1768:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:7"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1792:0:7"},"scope":1098,"src":"1702:188:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":915,"nodeType":"Block","src":"2167:139:7","statements":[{"assignments":[897],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:7","nodeType":"VariableDeclaration","scope":915,"src":"2177:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[{"arguments":[{"id":902,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1098","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1098","typeString":"library SafeERC20"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:7","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2231:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":898,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2200:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":749,"src":"2200:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:7"},{"expression":{"arguments":[{"id":908,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2262:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"id":909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2269:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":910,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"2278:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2293:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"2249:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"2249:50:7"}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"1896:180:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:7","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"token","nameLocation":"2119:5:7","nodeType":"VariableDeclaration","scope":916,"src":"2112:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":888,"nodeType":"UserDefinedTypeName","pathNode":{"id":887,"name":"IERC20","nameLocations":["2112:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"2112:6:7"},"referencedDeclaration":772,"src":"2112:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"spender","nameLocation":"2134:7:7","nodeType":"VariableDeclaration","scope":916,"src":"2126:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"value","nameLocation":"2151:5:7","nodeType":"VariableDeclaration","scope":916,"src":"2143:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:7"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"2167:0:7"},"scope":1098,"src":"2081:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":958,"nodeType":"Block","src":"2607:370:7","statements":[{"id":957,"nodeType":"UncheckedBlock","src":"2617:354:7","statements":[{"assignments":[928],"declarations":[{"constant":false,"id":928,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:7","nodeType":"VariableDeclaration","scope":957,"src":"2641:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[{"arguments":[{"id":933,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1098","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1098","typeString":"library SafeERC20"}],"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:7","typeDescriptions":{}}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2699:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":929,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2668:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":749,"src":"2668:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2725:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":939,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2744:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":948,"nodeType":"IfStatement","src":"2721:160:7","trueBody":{"id":947,"nodeType":"Block","src":"2763:118:7","statements":[{"errorCall":{"arguments":[{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2821:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2830:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":944,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2848:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"2788:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"RevertStatement","src":"2781:85:7"}]}},{"expression":{"arguments":[{"id":950,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2907:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"id":951,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2914:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2923:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":953,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2942:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":949,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"2894:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"2894:66:7"}]}]},"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"2312:192:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:7","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"token","nameLocation":"2547:5:7","nodeType":"VariableDeclaration","scope":959,"src":"2540:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":919,"nodeType":"UserDefinedTypeName","pathNode":{"id":918,"name":"IERC20","nameLocations":["2540:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"2540:6:7"},"referencedDeclaration":772,"src":"2540:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"spender","nameLocation":"2562:7:7","nodeType":"VariableDeclaration","scope":959,"src":"2554:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:7","nodeType":"VariableDeclaration","scope":959,"src":"2571:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:7"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"2607:0:7"},"scope":1098,"src":"2509:468:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"3373:303:7","statements":[{"assignments":[971],"declarations":[{"constant":false,"id":971,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:7","nodeType":"VariableDeclaration","scope":1005,"src":"3383:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":980,"initialValue":{"arguments":[{"expression":{"id":974,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3426:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":759,"src":"3426:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":976,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"3442:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"3451:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":972,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:7"},{"condition":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:7","subExpression":{"arguments":[{"id":982,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3498:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"id":983,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"3505:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"3474:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"3469:201:7","trueBody":{"id":1003,"nodeType":"Block","src":"3520:150:7","statements":[{"expression":{"arguments":[{"id":987,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3554:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":990,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3576:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":759,"src":"3576:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":992,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"3592:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":988,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":986,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3534:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"3534:71:7"},{"expression":{"arguments":[{"id":999,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3639:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"id":1000,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"3646:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":998,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3619:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"3619:40:7"}]}}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"2983:308:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:7","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"token","nameLocation":"3325:5:7","nodeType":"VariableDeclaration","scope":1006,"src":"3318:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":962,"nodeType":"UserDefinedTypeName","pathNode":{"id":961,"name":"IERC20","nameLocations":["3318:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"3318:6:7"},"referencedDeclaration":772,"src":"3318:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"spender","nameLocation":"3340:7:7","nodeType":"VariableDeclaration","scope":1006,"src":"3332:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"value","nameLocation":"3357:5:7","nodeType":"VariableDeclaration","scope":1006,"src":"3349:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:7"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"3373:0:7"},"scope":1098,"src":"3296:380:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"4129:559:7","statements":[{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:7","nodeType":"VariableDeclaration","scope":1047,"src":"4478:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1015,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1024,"initialValue":{"arguments":[{"id":1022,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"4532:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4512:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:7","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:7","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1172,"src":"4504:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1025,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4551:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:7","memberName":"length","nodeType":"MemberAccess","src":"4551:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:7","subExpression":{"arguments":[{"id":1031,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4589:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1032,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:7","typeDescriptions":{}}}],"id":1034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1029,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:7","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"IfStatement","src":"4547:135:7","trueBody":{"id":1045,"nodeType":"Block","src":"4610:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1041,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4664:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}],"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:7","typeDescriptions":{}}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4631:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"RevertStatement","src":"4624:47:7"}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"3682:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:7","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"token","nameLocation":"4095:5:7","nodeType":"VariableDeclaration","scope":1048,"src":"4088:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":1009,"nodeType":"UserDefinedTypeName","pathNode":{"id":1008,"name":"IERC20","nameLocations":["4088:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"4088:6:7"},"referencedDeclaration":772,"src":"4088:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"data","nameLocation":"4115:4:7","nodeType":"VariableDeclaration","scope":1048,"src":"4102:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:7"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"4129:0:7"},"scope":1098,"src":"4059:629:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1096,"nodeType":"Block","src":"5278:489:7","statements":[{"assignments":[1060,1062],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"success","nameLocation":"5579:7:7","nodeType":"VariableDeclaration","scope":1096,"src":"5574:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:7","nodeType":"VariableDeclaration","scope":1096,"src":"5588:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1061,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[{"id":1068,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5635:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1065,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5623:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}],"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:7","typeDescriptions":{}}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:7","memberName":"call","nodeType":"MemberAccess","src":"5615:19:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5657:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1072,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5669:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:7","memberName":"length","nodeType":"MemberAccess","src":"5669:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5706:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:7","typeDescriptions":{}}}],"id":1081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1076,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:7","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1088,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5738:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:7","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:7","memberName":"code","nodeType":"MemberAccess","src":"5730:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:7","memberName":"length","nodeType":"MemberAccess","src":"5730:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1058,"id":1095,"nodeType":"Return","src":"5650:110:7"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"4694:490:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:7","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"token","nameLocation":"5229:5:7","nodeType":"VariableDeclaration","scope":1097,"src":"5222:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":1051,"nodeType":"UserDefinedTypeName","pathNode":{"id":1050,"name":"IERC20","nameLocations":["5222:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"5222:6:7"},"referencedDeclaration":772,"src":"5222:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"data","nameLocation":"5249:4:7","nodeType":"VariableDeclaration","scope":1097,"src":"5236:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:7"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1097,"src":"5272:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1056,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:7"},"scope":1098,"src":"5189:578:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1099,"src":"751:5018:7","usedErrors":[825,834],"usedEvents":[]}],"src":"115:5655:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1351]},"id":1352,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1100,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"127:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1351,"linearizedBaseContracts":[1351],"name":"Address","nameLocation":"203:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"217:94:8","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1106,"name":"AddressInsufficientBalance","nameLocation":"322:26:8","nodeType":"ErrorDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"account","nameLocation":"357:7:8","nodeType":"VariableDeclaration","scope":1106,"src":"349:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:8"},"src":"316:50:8"},{"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"372:75:8","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1111,"name":"AddressEmptyCode","nameLocation":"458:16:8","nodeType":"ErrorDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"target","nameLocation":"483:6:8","nodeType":"VariableDeclaration","scope":1111,"src":"475:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:8"},"src":"452:39:8"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"497:89:8","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1114,"name":"FailedInnerCall","nameLocation":"597:15:8","nodeType":"ErrorDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"612:2:8"},"src":"591:24:8"},{"body":{"id":1154,"nodeType":"Block","src":"1602:260:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1124,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:8","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1127,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"1640:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1137,"nodeType":"IfStatement","src":"1612:109:8","trueBody":{"id":1136,"nodeType":"Block","src":"1648:73:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1132,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:8","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1129,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"1669:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"RevertStatement","src":"1662:48:8"}]}},{"assignments":[1139,null],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"success","nameLocation":"1737:7:8","nodeType":"VariableDeclaration","scope":1154,"src":"1732:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1146,"initialValue":{"arguments":[{"hexValue":"","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1140,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"1750:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:8","memberName":"call","nodeType":"MemberAccess","src":"1750:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"1772:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:8"},{"condition":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:8","subExpression":{"id":1147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1798:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"IfStatement","src":"1793:63:8","trueBody":{"id":1152,"nodeType":"Block","src":"1807:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1149,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"1828:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1151,"nodeType":"RevertStatement","src":"1821:24:8"}]}}]},"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"621:905:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:8","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:8","nodeType":"VariableDeclaration","scope":1155,"src":"1550:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"amount","nameLocation":"1585:6:8","nodeType":"VariableDeclaration","scope":1155,"src":"1577:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:8"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"1602:0:8"},"scope":1351,"src":"1531:331:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1171,"nodeType":"Block","src":"2794:62:8","statements":[{"expression":{"arguments":[{"id":1166,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2833:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2841:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2811:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1164,"id":1170,"nodeType":"Return","src":"2804:45:8"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"1868:832:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1172,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:8","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"target","nameLocation":"2735:6:8","nodeType":"VariableDeclaration","scope":1172,"src":"2727:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"data","nameLocation":"2756:4:8","nodeType":"VariableDeclaration","scope":1172,"src":"2743:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1159,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:8"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1172,"src":"2780:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1162,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:8"},"scope":1351,"src":"2705:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1217,"nodeType":"Block","src":"3293:279:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1186,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:8","typeDescriptions":{}}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3331:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1199,"nodeType":"IfStatement","src":"3303:108:8","trueBody":{"id":1198,"nodeType":"Block","src":"3338:73:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1194,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1351","typeString":"library Address"}],"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:8","typeDescriptions":{}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1191,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"3359:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"RevertStatement","src":"3352:48:8"}]}},{"assignments":[1201,1203],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"success","nameLocation":"3426:7:8","nodeType":"VariableDeclaration","scope":1217,"src":"3421:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:8","nodeType":"VariableDeclaration","scope":1217,"src":"3435:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1210,"initialValue":{"arguments":[{"id":1208,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"3488:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1204,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3462:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:8","memberName":"call","nodeType":"MemberAccess","src":"3462:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3481:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:8"},{"expression":{"arguments":[{"id":1212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3537:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3545:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1214,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3554:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1211,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"3510:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1183,"id":1216,"nodeType":"Return","src":"3503:62:8"}]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"2862:313:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:8","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"target","nameLocation":"3219:6:8","nodeType":"VariableDeclaration","scope":1218,"src":"3211:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"data","nameLocation":"3240:4:8","nodeType":"VariableDeclaration","scope":1218,"src":"3227:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1176,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"value","nameLocation":"3254:5:8","nodeType":"VariableDeclaration","scope":1218,"src":"3246:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:8"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"3279:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:8"},"scope":1351,"src":"3180:392:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"3811:154:8","statements":[{"assignments":[1229,1231],"declarations":[{"constant":false,"id":1229,"mutability":"mutable","name":"success","nameLocation":"3827:7:8","nodeType":"VariableDeclaration","scope":1243,"src":"3822:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1228,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:8","nodeType":"VariableDeclaration","scope":1243,"src":"3836:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1230,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1236,"initialValue":{"arguments":[{"id":1234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3881:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1232,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3863:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:8"},{"expression":{"arguments":[{"id":1238,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3930:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3938:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1240,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3947:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1237,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"3903:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1227,"id":1242,"nodeType":"Return","src":"3896:62:8"}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"3578:128:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:8","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"target","nameLocation":"3747:6:8","nodeType":"VariableDeclaration","scope":1244,"src":"3739:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"data","nameLocation":"3768:4:8","nodeType":"VariableDeclaration","scope":1244,"src":"3755:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:8"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"3797:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1225,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:8"},"scope":1351,"src":"3711:254:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"4203:156:8","statements":[{"assignments":[1255,1257],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"success","nameLocation":"4219:7:8","nodeType":"VariableDeclaration","scope":1269,"src":"4214:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1254,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:8","nodeType":"VariableDeclaration","scope":1269,"src":"4228:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1256,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1262,"initialValue":{"arguments":[{"id":1260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4275:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1258,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4255:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:8"},{"expression":{"arguments":[{"id":1264,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4324:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"4332:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1266,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4341:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1263,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"4297:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1253,"id":1268,"nodeType":"Return","src":"4290:62:8"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"3971:130:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:8","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"target","nameLocation":"4144:6:8","nodeType":"VariableDeclaration","scope":1270,"src":"4136:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"data","nameLocation":"4165:4:8","nodeType":"VariableDeclaration","scope":1270,"src":"4152:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1248,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"4189:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:8"},"scope":1351,"src":"4106:253:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"4783:424:8","statements":[{"condition":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:8","subExpression":{"id":1282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4798:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1307,"nodeType":"Block","src":"4857:344:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1289,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5045:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:8","memberName":"length","nodeType":"MemberAccess","src":"5045:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1293,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5071:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:8","memberName":"code","nodeType":"MemberAccess","src":"5071:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:8","memberName":"length","nodeType":"MemberAccess","src":"5071:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"5041:119:8","trueBody":{"id":1303,"nodeType":"Block","src":"5096:64:8","statements":[{"errorCall":{"arguments":[{"id":1300,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1299,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5121:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"RevertStatement","src":"5114:31:8"}]}},{"expression":{"id":1305,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5180:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1281,"id":1306,"nodeType":"Return","src":"5173:17:8"}]},"id":1308,"nodeType":"IfStatement","src":"4793:408:8","trueBody":{"id":1288,"nodeType":"Block","src":"4807:44:8","statements":[{"expression":{"arguments":[{"id":1285,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4829:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1284,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"4821:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"4821:19:8"}]}}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"4365:255:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:8","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"target","nameLocation":"4678:6:8","nodeType":"VariableDeclaration","scope":1310,"src":"4670:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"success","nameLocation":"4699:7:8","nodeType":"VariableDeclaration","scope":1310,"src":"4694:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1274,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:8","nodeType":"VariableDeclaration","scope":1310,"src":"4716:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1276,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:8"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"4769:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1279,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:8"},"scope":1351,"src":"4625:582:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1331,"nodeType":"Block","src":"5509:122:8","statements":[{"condition":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:8","subExpression":{"id":1320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"5524:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1329,"nodeType":"Block","src":"5583:42:8","statements":[{"expression":{"id":1327,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5604:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1319,"id":1328,"nodeType":"Return","src":"5597:17:8"}]},"id":1330,"nodeType":"IfStatement","src":"5519:106:8","trueBody":{"id":1326,"nodeType":"Block","src":"5533:44:8","statements":[{"expression":{"arguments":[{"id":1323,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5555:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1322,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"5547:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"5547:19:8"}]}}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"5213:189:8","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1332,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:8","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"success","nameLocation":"5438:7:8","nodeType":"VariableDeclaration","scope":1332,"src":"5433:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1312,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:8","nodeType":"VariableDeclaration","scope":1332,"src":"5447:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1314,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:8"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"5495:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1317,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:8"},"scope":1351,"src":"5407:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1349,"nodeType":"Block","src":"5798:461:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1338,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5874:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:8","memberName":"length","nodeType":"MemberAccess","src":"5874:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1347,"nodeType":"Block","src":"6204:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1344,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6225:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"RevertStatement","src":"6218:24:8"}]},"id":1348,"nodeType":"IfStatement","src":"5870:383:8","trueBody":{"id":1343,"nodeType":"Block","src":"5897:301:8","statements":[{"AST":{"nativeSrc":"6055:133:8","nodeType":"YulBlock","src":"6055:133:8","statements":[{"nativeSrc":"6073:40:8","nodeType":"YulVariableDeclaration","src":"6073:40:8","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:8","nodeType":"YulIdentifier","src":"6102:10:8"}],"functionName":{"name":"mload","nativeSrc":"6096:5:8","nodeType":"YulIdentifier","src":"6096:5:8"},"nativeSrc":"6096:17:8","nodeType":"YulFunctionCall","src":"6096:17:8"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:8","nodeType":"YulTypedName","src":"6077:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:8","nodeType":"YulLiteral","src":"6141:2:8","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:8","nodeType":"YulIdentifier","src":"6145:10:8"}],"functionName":{"name":"add","nativeSrc":"6137:3:8","nodeType":"YulIdentifier","src":"6137:3:8"},"nativeSrc":"6137:19:8","nodeType":"YulFunctionCall","src":"6137:19:8"},{"name":"returndata_size","nativeSrc":"6158:15:8","nodeType":"YulIdentifier","src":"6158:15:8"}],"functionName":{"name":"revert","nativeSrc":"6130:6:8","nodeType":"YulIdentifier","src":"6130:6:8"},"nativeSrc":"6130:44:8","nodeType":"YulFunctionCall","src":"6130:44:8"},"nativeSrc":"6130:44:8","nodeType":"YulExpressionStatement","src":"6130:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1335,"isOffset":false,"isSlot":false,"src":"6102:10:8","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"6145:10:8","valueSize":1}],"id":1342,"nodeType":"InlineAssembly","src":"6046:142:8"}]}}]},"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"5637:101:8","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:8","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:8","nodeType":"VariableDeclaration","scope":1350,"src":"5760:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1334,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:8"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"5798:0:8"},"scope":1351,"src":"5743:516:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1352,"src":"195:6066:8","usedErrors":[1106,1111,1114],"usedEvents":[]}],"src":"101:6161:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1381]},"id":1382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1353,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1381,"linearizedBaseContracts":[1381],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1362,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1358,"id":1361,"nodeType":"Return","src":"728:17:9"}]},"id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1363,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1381,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1371,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1367,"id":1370,"nodeType":"Return","src":"835:15:9"}]},"id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1372,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1365,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1381,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1379,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1376,"id":1378,"nodeType":"Return","src":"945:8:9"}]},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1381,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1382,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1405],"IERC165":[1417]},"id":1406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1383,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1406,"sourceUnit":1418,"src":"140:38:10","symbolAliases":[{"foreign":{"id":1384,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1387,"name":"IERC165","nameLocations":["687:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"687:7:10"},"id":1388,"nodeType":"InheritanceSpecifier","src":"687:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"180:478:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1405,"linearizedBaseContracts":[1405,1417],"name":"ERC165","nameLocation":"677:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1416],"body":{"id":1403,"nodeType":"Block","src":"844:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"861:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1398,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"881:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1417_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1417_$","typeString":"type(contract IERC165)"}],"id":1397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1417","typeString":"type(contract IERC165)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1395,"id":1402,"nodeType":"Return","src":"854:47:10"}]},"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"701:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:10","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:10","nodeType":"VariableDeclaration","scope":1404,"src":"789:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1390,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:10"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"838:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1393,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:10"},"scope":1405,"src":"762:146:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1406,"src":"659:251:10","usedErrors":[],"usedEvents":[]}],"src":"114:797:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1417]},"id":1418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1407,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"141:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1417,"linearizedBaseContracts":[1417],"name":"IERC165","nameLocation":"431:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"445:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:11","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:11","nodeType":"VariableDeclaration","scope":1416,"src":"817:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1410,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:11"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"860:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:11"},"scope":1417,"src":"790:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1418,"src":"421:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:754:11"},"id":11},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2030]},"id":2031,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1419,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"231:1098:12","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2030,"linearizedBaseContracts":[2030],"name":"EnumerableSet","nameLocation":"1338:13:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1428,"members":[{"constant":false,"id":1423,"mutability":"mutable","name":"_values","nameLocation":"1862:7:12","nodeType":"VariableDeclaration","scope":1428,"src":"1852:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1422,"nodeType":"ArrayTypeName","src":"1852:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:12","nodeType":"VariableDeclaration","scope":1428,"src":"2020:44:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1426,"keyName":"value","keyNameLocation":"2036:5:12","keyType":{"id":1424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:12","nodeType":"StructDefinition","scope":2030,"src":"1798:273:12","visibility":"public"},{"body":{"id":1469,"nodeType":"Block","src":"2310:337:12","statements":[{"condition":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:12","subExpression":{"arguments":[{"id":1440,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2335:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2340:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1439,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2325:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1467,"nodeType":"Block","src":"2604:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1438,"id":1466,"nodeType":"Return","src":"2618:12:12"}]},"id":1468,"nodeType":"IfStatement","src":"2320:321:12","trueBody":{"id":1464,"nodeType":"Block","src":"2348:250:12","statements":[{"expression":{"arguments":[{"id":1449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2379:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1444,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2362:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"2362:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:12","memberName":"push","nodeType":"MemberAccess","src":"2362:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"2362:23:12"},{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1452,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2520:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"2520:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1456,"indexExpression":{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2535:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1457,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2544:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"2544:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:12","memberName":"length","nodeType":"MemberAccess","src":"2544:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ExpressionStatement","src":"2520:42:12"},{"expression":{"hexValue":"74727565","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1438,"id":1463,"nodeType":"Return","src":"2576:11:12"}]}}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"2077:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:12","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"set","nameLocation":"2267:3:12","nodeType":"VariableDeclaration","scope":1470,"src":"2255:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1431,"nodeType":"UserDefinedTypeName","pathNode":{"id":1430,"name":"Set","nameLocations":["2255:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"2255:3:12"},"referencedDeclaration":1428,"src":"2255:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"value","nameLocation":"2280:5:12","nodeType":"VariableDeclaration","scope":1470,"src":"2272:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:12"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"2304:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1436,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:12"},"scope":2030,"src":"2241:406:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1553,"nodeType":"Block","src":"2887:1296:12","statements":[{"assignments":[1482],"declarations":[{"constant":false,"id":1482,"mutability":"mutable","name":"position","nameLocation":"2999:8:12","nodeType":"VariableDeclaration","scope":1553,"src":"2991:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1487,"initialValue":{"baseExpression":{"expression":{"id":1483,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3010:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"3010:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1486,"indexExpression":{"id":1485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"3025:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3046:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1551,"nodeType":"Block","src":"4140:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1480,"id":1550,"nodeType":"Return","src":"4154:12:12"}]},"id":1552,"nodeType":"IfStatement","src":"3042:1135:12","trueBody":{"id":1548,"nodeType":"Block","src":"3061:1073:12","statements":[{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:12","nodeType":"VariableDeclaration","scope":1548,"src":"3413:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1496,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3434:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:12"},{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:12","nodeType":"VariableDeclaration","scope":1548,"src":"3460:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1504,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1499,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3480:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"3480:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:12","memberName":"length","nodeType":"MemberAccess","src":"3480:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"3521:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1506,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"3535:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"IfStatement","src":"3517:378:12","trueBody":{"id":1531,"nodeType":"Block","src":"3546:349:12","statements":[{"assignments":[1509],"declarations":[{"constant":false,"id":1509,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:12","nodeType":"VariableDeclaration","scope":1531,"src":"3564:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1514,"initialValue":{"baseExpression":{"expression":{"id":1510,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3584:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"3584:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1513,"indexExpression":{"id":1512,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"3596:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:12"},{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1515,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3705:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"3705:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1519,"indexExpression":{"id":1517,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"3717:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1520,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"3731:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1522,"nodeType":"ExpressionStatement","src":"3705:35:12"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1523,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3844:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"3844:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1527,"indexExpression":{"id":1525,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"3859:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1528,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3872:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"3844:36:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1533,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3973:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"3973:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:12","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"3973:17:12"},{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:12","subExpression":{"baseExpression":{"expression":{"id":1540,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"4076:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"4076:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1543,"indexExpression":{"id":1542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"4091:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"4069:28:12"},{"expression":{"hexValue":"74727565","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1480,"id":1547,"nodeType":"Return","src":"4112:11:12"}]}}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"2653:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:12","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"set","nameLocation":"2844:3:12","nodeType":"VariableDeclaration","scope":1554,"src":"2832:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1473,"nodeType":"UserDefinedTypeName","pathNode":{"id":1472,"name":"Set","nameLocations":["2832:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"2832:3:12"},"referencedDeclaration":1428,"src":"2832:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"value","nameLocation":"2857:5:12","nodeType":"VariableDeclaration","scope":1554,"src":"2849:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:12"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1554,"src":"2881:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1478,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:12"},"scope":2030,"src":"2815:1368:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1572,"nodeType":"Block","src":"4343:50:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1565,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"4360:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"4360:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1568,"indexExpression":{"id":1567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4375:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1564,"id":1571,"nodeType":"Return","src":"4353:33:12"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"4189:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:12","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"set","nameLocation":"4295:3:12","nodeType":"VariableDeclaration","scope":1573,"src":"4283:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1557,"nodeType":"UserDefinedTypeName","pathNode":{"id":1556,"name":"Set","nameLocations":["4283:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"4283:3:12"},"referencedDeclaration":1428,"src":"4283:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"value","nameLocation":"4308:5:12","nodeType":"VariableDeclaration","scope":1573,"src":"4300:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:12"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"4337:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1562,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:12"},"scope":2030,"src":"4264:129:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1586,"nodeType":"Block","src":"4539:42:12","statements":[{"expression":{"expression":{"expression":{"id":1582,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4556:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"4556:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:12","memberName":"length","nodeType":"MemberAccess","src":"4556:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1581,"id":1585,"nodeType":"Return","src":"4549:25:12"}]},"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"4399:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:12","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"set","nameLocation":"4503:3:12","nodeType":"VariableDeclaration","scope":1587,"src":"4491:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1576,"nodeType":"UserDefinedTypeName","pathNode":{"id":1575,"name":"Set","nameLocations":["4491:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"4491:3:12"},"referencedDeclaration":1428,"src":"4491:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:12"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"4530:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:12"},"scope":2030,"src":"4474:107:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1603,"nodeType":"Block","src":"4999:42:12","statements":[{"expression":{"baseExpression":{"expression":{"id":1598,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"5016:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"5016:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1601,"indexExpression":{"id":1600,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5028:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1597,"id":1602,"nodeType":"Return","src":"5009:25:12"}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"4587:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:12","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"set","nameLocation":"4948:3:12","nodeType":"VariableDeclaration","scope":1604,"src":"4936:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"Set","nameLocations":["4936:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"4936:3:12"},"referencedDeclaration":1428,"src":"4936:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"index","nameLocation":"4961:5:12","nodeType":"VariableDeclaration","scope":1604,"src":"4953:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:12"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"4990:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:12"},"scope":2030,"src":"4923:118:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1617,"nodeType":"Block","src":"5655:35:12","statements":[{"expression":{"expression":{"id":1614,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"5672:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"5672:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1613,"id":1616,"nodeType":"Return","src":"5665:18:12"}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"5047:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:12","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"set","nameLocation":"5610:3:12","nodeType":"VariableDeclaration","scope":1618,"src":"5598:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1607,"nodeType":"UserDefinedTypeName","pathNode":{"id":1606,"name":"Set","nameLocations":["5598:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"5598:3:12"},"referencedDeclaration":1428,"src":"5598:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:12"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"5637:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1611,"nodeType":"ArrayTypeName","src":"5637:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:12"},"scope":2030,"src":"5581:109:12","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1622,"members":[{"constant":false,"id":1621,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:12","nodeType":"VariableDeclaration","scope":1622,"src":"5743:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1620,"nodeType":"UserDefinedTypeName","pathNode":{"id":1619,"name":"Set","nameLocations":["5743:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"5743:3:12"},"referencedDeclaration":1428,"src":"5743:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:12","nodeType":"StructDefinition","scope":2030,"src":"5715:45:12","visibility":"public"},{"body":{"id":1639,"nodeType":"Block","src":"6006:47:12","statements":[{"expression":{"arguments":[{"expression":{"id":1634,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"6028:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6028:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6040:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1633,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6023:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1632,"id":1638,"nodeType":"Return","src":"6016:30:12"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"5766:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:12","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"set","nameLocation":"5962:3:12","nodeType":"VariableDeclaration","scope":1640,"src":"5943:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1625,"nodeType":"UserDefinedTypeName","pathNode":{"id":1624,"name":"Bytes32Set","nameLocations":["5943:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"5943:10:12"},"referencedDeclaration":1622,"src":"5943:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"value","nameLocation":"5975:5:12","nodeType":"VariableDeclaration","scope":1640,"src":"5967:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:12"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"6000:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1630,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:12"},"scope":2030,"src":"5930:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"6300:50:12","statements":[{"expression":{"arguments":[{"expression":{"id":1652,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"6325:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6325:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"6337:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1651,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"6317:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1650,"id":1656,"nodeType":"Return","src":"6310:33:12"}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"6059:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:12","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"set","nameLocation":"6256:3:12","nodeType":"VariableDeclaration","scope":1658,"src":"6237:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1643,"nodeType":"UserDefinedTypeName","pathNode":{"id":1642,"name":"Bytes32Set","nameLocations":["6237:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"6237:10:12"},"referencedDeclaration":1622,"src":"6237:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"value","nameLocation":"6269:5:12","nodeType":"VariableDeclaration","scope":1658,"src":"6261:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:12"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"6294:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1648,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:12"},"scope":2030,"src":"6221:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"6517:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":1670,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6544:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6544:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"6556:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1669,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"6534:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1668,"id":1674,"nodeType":"Return","src":"6527:35:12"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"6356:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:12","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"set","nameLocation":"6468:3:12","nodeType":"VariableDeclaration","scope":1676,"src":"6449:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1661,"nodeType":"UserDefinedTypeName","pathNode":{"id":1660,"name":"Bytes32Set","nameLocations":["6449:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"6449:10:12"},"referencedDeclaration":1622,"src":"6449:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"value","nameLocation":"6481:5:12","nodeType":"VariableDeclaration","scope":1676,"src":"6473:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:12"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"6511:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1666,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:12"},"scope":2030,"src":"6431:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"6722:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1686,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"6747:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"6747:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1685,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"6739:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1684,"id":1689,"nodeType":"Return","src":"6732:26:12"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"6575:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:12","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"set","nameLocation":"6685:3:12","nodeType":"VariableDeclaration","scope":1691,"src":"6666:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1679,"nodeType":"UserDefinedTypeName","pathNode":{"id":1678,"name":"Bytes32Set","nameLocations":["6666:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"6666:10:12"},"referencedDeclaration":1622,"src":"6666:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:12"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"6713:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:12"},"scope":2030,"src":"6650:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"7190:46:12","statements":[{"expression":{"arguments":[{"expression":{"id":1703,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"7211:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"7211:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1705,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7223:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"7207:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1701,"id":1707,"nodeType":"Return","src":"7200:29:12"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"6771:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:12","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"set","nameLocation":"7138:3:12","nodeType":"VariableDeclaration","scope":1709,"src":"7119:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1694,"nodeType":"UserDefinedTypeName","pathNode":{"id":1693,"name":"Bytes32Set","nameLocations":["7119:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"7119:10:12"},"referencedDeclaration":1622,"src":"7119:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"index","nameLocation":"7151:5:12","nodeType":"VariableDeclaration","scope":1709,"src":"7143:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:12"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"7181:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:12"},"scope":2030,"src":"7107:129:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"7857:219:12","statements":[{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"store","nameLocation":"7884:5:12","nodeType":"VariableDeclaration","scope":1738,"src":"7867:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1722,"nodeType":"ArrayTypeName","src":"7867:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1728,"initialValue":{"arguments":[{"expression":{"id":1725,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"7900:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"7900:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1724,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7892:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:12"},{"assignments":[1733],"declarations":[{"constant":false,"id":1733,"mutability":"mutable","name":"result","nameLocation":"7938:6:12","nodeType":"VariableDeclaration","scope":1738,"src":"7921:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1732,"nodeType":"ArrayTypeName","src":"7921:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1734,"nodeType":"VariableDeclarationStatement","src":"7921:23:12"},{"AST":{"nativeSrc":"8007:39:12","nodeType":"YulBlock","src":"8007:39:12","statements":[{"nativeSrc":"8021:15:12","nodeType":"YulAssignment","src":"8021:15:12","value":{"name":"store","nativeSrc":"8031:5:12","nodeType":"YulIdentifier","src":"8031:5:12"},"variableNames":[{"name":"result","nativeSrc":"8021:6:12","nodeType":"YulIdentifier","src":"8021:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1733,"isOffset":false,"isSlot":false,"src":"8021:6:12","valueSize":1},{"declaration":1723,"isOffset":false,"isSlot":false,"src":"8031:5:12","valueSize":1}],"id":1735,"nodeType":"InlineAssembly","src":"7998:48:12"},{"expression":{"id":1736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8063:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1718,"id":1737,"nodeType":"Return","src":"8056:13:12"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"7242:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:12","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"set","nameLocation":"7811:3:12","nodeType":"VariableDeclaration","scope":1739,"src":"7792:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1712,"nodeType":"UserDefinedTypeName","pathNode":{"id":1711,"name":"Bytes32Set","nameLocations":["7792:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1622,"src":"7792:10:12"},"referencedDeclaration":1622,"src":"7792:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1622_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:12"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"7839:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1716,"nodeType":"ArrayTypeName","src":"7839:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:12"},"scope":2030,"src":"7776:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1743,"members":[{"constant":false,"id":1742,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:12","nodeType":"VariableDeclaration","scope":1743,"src":"8129:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1741,"nodeType":"UserDefinedTypeName","pathNode":{"id":1740,"name":"Set","nameLocations":["8129:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"8129:3:12"},"referencedDeclaration":1428,"src":"8129:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:12","nodeType":"StructDefinition","scope":2030,"src":"8101:45:12","visibility":"public"},{"body":{"id":1769,"nodeType":"Block","src":"8392:74:12","statements":[{"expression":{"arguments":[{"expression":{"id":1755,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"8414:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8414:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8450:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1761,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:12","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:12","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:12","typeDescriptions":{}}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1754,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8409:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1753,"id":1768,"nodeType":"Return","src":"8402:57:12"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"8152:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:12","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"set","nameLocation":"8348:3:12","nodeType":"VariableDeclaration","scope":1770,"src":"8329:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1746,"nodeType":"UserDefinedTypeName","pathNode":{"id":1745,"name":"AddressSet","nameLocations":["8329:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"8329:10:12"},"referencedDeclaration":1743,"src":"8329:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"value","nameLocation":"8361:5:12","nodeType":"VariableDeclaration","scope":1770,"src":"8353:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:12"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1770,"src":"8386:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:12"},"scope":2030,"src":"8316:150:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"8713:77:12","statements":[{"expression":{"arguments":[{"expression":{"id":1782,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"8738:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8738:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"8774:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1788,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:12","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:12","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:12","typeDescriptions":{}}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1781,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8730:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1780,"id":1795,"nodeType":"Return","src":"8723:60:12"}]},"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"8472:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:12","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"set","nameLocation":"8669:3:12","nodeType":"VariableDeclaration","scope":1797,"src":"8650:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1773,"nodeType":"UserDefinedTypeName","pathNode":{"id":1772,"name":"AddressSet","nameLocations":["8650:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"8650:10:12"},"referencedDeclaration":1743,"src":"8650:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"value","nameLocation":"8682:5:12","nodeType":"VariableDeclaration","scope":1797,"src":"8674:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:12"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"8707:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1778,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:12"},"scope":2030,"src":"8634:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1823,"nodeType":"Block","src":"8957:79:12","statements":[{"expression":{"arguments":[{"expression":{"id":1809,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8984:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8984:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9020:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1815,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:12","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:12","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:12","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1808,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"8974:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1807,"id":1822,"nodeType":"Return","src":"8967:62:12"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"8796:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:12","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"set","nameLocation":"8908:3:12","nodeType":"VariableDeclaration","scope":1824,"src":"8889:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1800,"nodeType":"UserDefinedTypeName","pathNode":{"id":1799,"name":"AddressSet","nameLocations":["8889:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"8889:10:12"},"referencedDeclaration":1743,"src":"8889:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"value","nameLocation":"8921:5:12","nodeType":"VariableDeclaration","scope":1824,"src":"8913:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:12"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"8951:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1805,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:12"},"scope":2030,"src":"8871:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"9189:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1834,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"9214:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"9214:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1833,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"9206:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1832,"id":1837,"nodeType":"Return","src":"9199:26:12"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"9042:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:12","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"set","nameLocation":"9152:3:12","nodeType":"VariableDeclaration","scope":1839,"src":"9133:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1827,"nodeType":"UserDefinedTypeName","pathNode":{"id":1826,"name":"AddressSet","nameLocations":["9133:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"9133:10:12"},"referencedDeclaration":1743,"src":"9133:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:12"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"9180:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:12"},"scope":2030,"src":"9117:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1865,"nodeType":"Block","src":"9657:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1857,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"9702:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"9702:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1859,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"9714:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1856,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"9698:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:12","typeDescriptions":{}}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1852,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:12","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:12","typeDescriptions":{}}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1849,"id":1864,"nodeType":"Return","src":"9667:56:12"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"9238:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1866,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:12","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"set","nameLocation":"9605:3:12","nodeType":"VariableDeclaration","scope":1866,"src":"9586:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1842,"nodeType":"UserDefinedTypeName","pathNode":{"id":1841,"name":"AddressSet","nameLocations":["9586:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"9586:10:12"},"referencedDeclaration":1743,"src":"9586:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"index","nameLocation":"9618:5:12","nodeType":"VariableDeclaration","scope":1866,"src":"9610:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:12"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1866,"src":"9648:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:12"},"scope":2030,"src":"9574:156:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1895,"nodeType":"Block","src":"10351:219:12","statements":[{"assignments":[1880],"declarations":[{"constant":false,"id":1880,"mutability":"mutable","name":"store","nameLocation":"10378:5:12","nodeType":"VariableDeclaration","scope":1895,"src":"10361:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1879,"nodeType":"ArrayTypeName","src":"10361:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1885,"initialValue":{"arguments":[{"expression":{"id":1882,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"10394:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"10394:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1881,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"10386:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:12"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"result","nameLocation":"10432:6:12","nodeType":"VariableDeclaration","scope":1895,"src":"10415:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1889,"nodeType":"ArrayTypeName","src":"10415:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1891,"nodeType":"VariableDeclarationStatement","src":"10415:23:12"},{"AST":{"nativeSrc":"10501:39:12","nodeType":"YulBlock","src":"10501:39:12","statements":[{"nativeSrc":"10515:15:12","nodeType":"YulAssignment","src":"10515:15:12","value":{"name":"store","nativeSrc":"10525:5:12","nodeType":"YulIdentifier","src":"10525:5:12"},"variableNames":[{"name":"result","nativeSrc":"10515:6:12","nodeType":"YulIdentifier","src":"10515:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1890,"isOffset":false,"isSlot":false,"src":"10515:6:12","valueSize":1},{"declaration":1880,"isOffset":false,"isSlot":false,"src":"10525:5:12","valueSize":1}],"id":1892,"nodeType":"InlineAssembly","src":"10492:48:12"},{"expression":{"id":1893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"10557:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1875,"id":1894,"nodeType":"Return","src":"10550:13:12"}]},"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"9736:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:12","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"set","nameLocation":"10305:3:12","nodeType":"VariableDeclaration","scope":1896,"src":"10286:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1869,"nodeType":"UserDefinedTypeName","pathNode":{"id":1868,"name":"AddressSet","nameLocations":["10286:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"10286:10:12"},"referencedDeclaration":1743,"src":"10286:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1743_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:12"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"10333:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1873,"nodeType":"ArrayTypeName","src":"10333:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:12"},"scope":2030,"src":"10270:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":1900,"members":[{"constant":false,"id":1899,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:12","nodeType":"VariableDeclaration","scope":1900,"src":"10617:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1898,"nodeType":"UserDefinedTypeName","pathNode":{"id":1897,"name":"Set","nameLocations":["10617:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"10617:3:12"},"referencedDeclaration":1428,"src":"10617:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:12","nodeType":"StructDefinition","scope":2030,"src":"10592:42:12","visibility":"public"},{"body":{"id":1920,"nodeType":"Block","src":"10877:56:12","statements":[{"expression":{"arguments":[{"expression":{"id":1912,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"10899:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"10899:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10919:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:12","typeDescriptions":{}}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1911,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"10894:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1910,"id":1919,"nodeType":"Return","src":"10887:39:12"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"10640:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:12","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"set","nameLocation":"10833:3:12","nodeType":"VariableDeclaration","scope":1921,"src":"10817:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1903,"nodeType":"UserDefinedTypeName","pathNode":{"id":1902,"name":"UintSet","nameLocations":["10817:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1900,"src":"10817:7:12"},"referencedDeclaration":1900,"src":"10817:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"value","nameLocation":"10846:5:12","nodeType":"VariableDeclaration","scope":1921,"src":"10838:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"10871:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:12"},"scope":2030,"src":"10804:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"11177:59:12","statements":[{"expression":{"arguments":[{"expression":{"id":1933,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"11202:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"11202:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"11222:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:12","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1932,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"11194:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1931,"id":1940,"nodeType":"Return","src":"11187:42:12"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"10939:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:12","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"set","nameLocation":"11133:3:12","nodeType":"VariableDeclaration","scope":1942,"src":"11117:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1924,"nodeType":"UserDefinedTypeName","pathNode":{"id":1923,"name":"UintSet","nameLocations":["11117:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1900,"src":"11117:7:12"},"referencedDeclaration":1900,"src":"11117:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"value","nameLocation":"11146:5:12","nodeType":"VariableDeclaration","scope":1942,"src":"11138:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:12"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"11171:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1929,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:12"},"scope":2030,"src":"11101:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"11400:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":1954,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"11427:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"11427:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"11447:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:12","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1953,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11417:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1952,"id":1961,"nodeType":"Return","src":"11410:44:12"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"11242:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1963,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:12","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"set","nameLocation":"11351:3:12","nodeType":"VariableDeclaration","scope":1963,"src":"11335:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1945,"nodeType":"UserDefinedTypeName","pathNode":{"id":1944,"name":"UintSet","nameLocations":["11335:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1900,"src":"11335:7:12"},"referencedDeclaration":1900,"src":"11335:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"value","nameLocation":"11364:5:12","nodeType":"VariableDeclaration","scope":1963,"src":"11356:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:12"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"11394:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1950,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:12"},"scope":2030,"src":"11317:144:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1977,"nodeType":"Block","src":"11611:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1973,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"11636:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"11636:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1972,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"11628:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1971,"id":1976,"nodeType":"Return","src":"11621:26:12"}]},"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"11467:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:12","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"set","nameLocation":"11574:3:12","nodeType":"VariableDeclaration","scope":1978,"src":"11558:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1966,"nodeType":"UserDefinedTypeName","pathNode":{"id":1965,"name":"UintSet","nameLocations":["11558:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1900,"src":"11558:7:12"},"referencedDeclaration":1900,"src":"11558:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:12"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"11602:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:12"},"scope":2030,"src":"11542:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"12076:55:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1992,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12105:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"12105:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1994,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"12117:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1991,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12101:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:12","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1988,"id":1997,"nodeType":"Return","src":"12086:38:12"}]},"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"11660:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:12","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"set","nameLocation":"12024:3:12","nodeType":"VariableDeclaration","scope":1999,"src":"12008:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"UintSet","nameLocations":["12008:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1900,"src":"12008:7:12"},"referencedDeclaration":1900,"src":"12008:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"index","nameLocation":"12037:5:12","nodeType":"VariableDeclaration","scope":1999,"src":"12029:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:12"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"12067:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:12"},"scope":2030,"src":"11996:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"12749:219:12","statements":[{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"store","nameLocation":"12776:5:12","nodeType":"VariableDeclaration","scope":2028,"src":"12759:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2012,"nodeType":"ArrayTypeName","src":"12759:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2018,"initialValue":{"arguments":[{"expression":{"id":2015,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"12792:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"12792:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1428_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2014,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"12784:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1428_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:12"},{"assignments":[2023],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"result","nameLocation":"12830:6:12","nodeType":"VariableDeclaration","scope":2028,"src":"12813:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2022,"nodeType":"ArrayTypeName","src":"12813:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2024,"nodeType":"VariableDeclarationStatement","src":"12813:23:12"},{"AST":{"nativeSrc":"12899:39:12","nodeType":"YulBlock","src":"12899:39:12","statements":[{"nativeSrc":"12913:15:12","nodeType":"YulAssignment","src":"12913:15:12","value":{"name":"store","nativeSrc":"12923:5:12","nodeType":"YulIdentifier","src":"12923:5:12"},"variableNames":[{"name":"result","nativeSrc":"12913:6:12","nodeType":"YulIdentifier","src":"12913:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2023,"isOffset":false,"isSlot":false,"src":"12913:6:12","valueSize":1},{"declaration":2013,"isOffset":false,"isSlot":false,"src":"12923:5:12","valueSize":1}],"id":2025,"nodeType":"InlineAssembly","src":"12890:48:12"},{"expression":{"id":2026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"12955:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2008,"id":2027,"nodeType":"Return","src":"12948:13:12"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"12137:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:12","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"set","nameLocation":"12703:3:12","nodeType":"VariableDeclaration","scope":2029,"src":"12687:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2002,"nodeType":"UserDefinedTypeName","pathNode":{"id":2001,"name":"UintSet","nameLocations":["12687:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1900,"src":"12687:7:12"},"referencedDeclaration":1900,"src":"12687:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1900_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:12"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"12731:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2006,"nodeType":"ArrayTypeName","src":"12731:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:12"},"scope":2030,"src":"12671:297:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2031,"src":"1330:11640:12","usedErrors":[],"usedEvents":[]}],"src":"205:12766:12"},"id":12},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[668],"Address":[1351],"Context":[1381],"EnumerableSet":[2030],"IAccessControlEnumerable":[694],"IERC20":[772],"IERC20Permit":[808],"Ownable":[526],"SafeERC20":[1098],"Vault":[2164]},"id":2165,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2032,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"90:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2165,"sourceUnit":773,"src":"117:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2165,"sourceUnit":1099,"src":"175:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2165,"sourceUnit":527,"src":"242:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":2036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2165,"sourceUnit":669,"src":"296:79:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2037,"name":"Ownable","nameLocations":["397:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"397:7:13"},"id":2038,"nodeType":"InheritanceSpecifier","src":"397:7:13"},{"baseName":{"id":2039,"name":"AccessControlEnumerable","nameLocations":["406:23:13"],"nodeType":"IdentifierPath","referencedDeclaration":668,"src":"406:23:13"},"id":2040,"nodeType":"InheritanceSpecifier","src":"406:23:13"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2164,"linearizedBaseContracts":[2164,668,295,1405,1417,694,378,526,1381],"name":"Vault","nameLocation":"388:5:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2044,"libraryName":{"id":2041,"name":"SafeERC20","nameLocations":["443:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1098,"src":"443:9:13"},"nodeType":"UsingForDirective","src":"437:27:13","typeName":{"id":2043,"nodeType":"UserDefinedTypeName","pathNode":{"id":2042,"name":"IERC20","nameLocations":["457:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"457:6:13"},"referencedDeclaration":772,"src":"457:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}}},{"constant":false,"id":2047,"mutability":"mutable","name":"token","nameLocation":"506:5:13","nodeType":"VariableDeclaration","scope":2164,"src":"491:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":2046,"nodeType":"UserDefinedTypeName","pathNode":{"id":2045,"name":"IERC20","nameLocations":["491:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"491:6:13"},"referencedDeclaration":772,"src":"491:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"functionSelector":"f516440c","id":2049,"mutability":"mutable","name":"maxWithdrawAmount","nameLocation":"533:17:13","nodeType":"VariableDeclaration","scope":2164,"src":"518:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"518:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b5b68afe","id":2051,"mutability":"mutable","name":"withdrawEnable","nameLocation":"569:14:13","nodeType":"VariableDeclaration","scope":2164,"src":"557:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2050,"name":"bool","nodeType":"ElementaryTypeName","src":"557:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":true,"functionSelector":"85f438c1","id":2056,"mutability":"constant","name":"WITHDRAWER_ROLE","nameLocation":"614:15:13","nodeType":"VariableDeclaration","scope":2164,"src":"590:70:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"590:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"574954484452415745525f524f4c45","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"642:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""},"value":"WITHDRAWER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""}],"id":2053,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"632:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"632:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":2070,"nodeType":"Block","src":"737:63:13","statements":[{"expression":{"arguments":[{"id":2065,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"759:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2066,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"779:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"779:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2064,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[635],"referencedDeclaration":635,"src":"748:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"748:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"ExpressionStatement","src":"748:44:13"}]},"id":2071,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2061,"name":"initOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"721:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2062,"kind":"baseConstructorSpecifier","modifierName":{"id":2060,"name":"Ownable","nameLocations":["713:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"713:7:13"},"nodeType":"ModifierInvocation","src":"713:18:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"initOwner","nameLocation":"689:9:13","nodeType":"VariableDeclaration","scope":2071,"src":"681:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:19:13"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[],"src":"737:0:13"},"scope":2164,"src":"669:131:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2083,"nodeType":"Block","src":"858:33:13","statements":[{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"869:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2080,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"877:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"src":"869:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":2082,"nodeType":"ExpressionStatement","src":"869:14:13"}]},"functionSelector":"144fa6d7","id":2084,"implemented":true,"kind":"function","modifiers":[{"id":2077,"kind":"modifierInvocation","modifierName":{"id":2076,"name":"onlyOwner","nameLocations":["848:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"848:9:13"},"nodeType":"ModifierInvocation","src":"848:9:13"}],"name":"setToken","nameLocation":"817:8:13","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"_token","nameLocation":"833:6:13","nodeType":"VariableDeclaration","scope":2084,"src":"826:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},"typeName":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"IERC20","nameLocations":["826:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"826:6:13"},"referencedDeclaration":772,"src":"826:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"825:15:13"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"858:0:13"},"scope":2164,"src":"808:83:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2095,"nodeType":"Block","src":"966:49:13","statements":[{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2091,"name":"maxWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"977:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2092,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"997:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"977:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"977:30:13"}]},"functionSelector":"df74e028","id":2096,"implemented":true,"kind":"function","modifiers":[{"id":2089,"kind":"modifierInvocation","modifierName":{"id":2088,"name":"onlyOwner","nameLocations":["956:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"956:9:13"},"nodeType":"ModifierInvocation","src":"956:9:13"}],"name":"setMaxWithdrawAmount","nameLocation":"908:20:13","nodeType":"FunctionDefinition","parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"_maxAmount","nameLocation":"937:10:13","nodeType":"VariableDeclaration","scope":2096,"src":"929:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:20:13"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"966:0:13"},"scope":2164,"src":"899:116:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2107,"nodeType":"Block","src":"1083:45:13","statements":[{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2103,"name":"withdrawEnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1094:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2104,"name":"_isEnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1111:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1094:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2106,"nodeType":"ExpressionStatement","src":"1094:26:13"}]},"functionSelector":"827a560b","id":2108,"implemented":true,"kind":"function","modifiers":[{"id":2101,"kind":"modifierInvocation","modifierName":{"id":2100,"name":"onlyOwner","nameLocations":["1073:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1073:9:13"},"nodeType":"ModifierInvocation","src":"1073:9:13"}],"name":"setWithdrawEnable","nameLocation":"1032:17:13","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"_isEnable","nameLocation":"1055:9:13","nodeType":"VariableDeclaration","scope":2108,"src":"1050:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2097,"name":"bool","nodeType":"ElementaryTypeName","src":"1050:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1049:16:13"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"1083:0:13"},"scope":2164,"src":"1023:105:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2124,"nodeType":"Block","src":"1208:47:13","statements":[{"expression":{"arguments":[{"id":2120,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"1234:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2121,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1239:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2117,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1219:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1225:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":739,"src":"1219:14:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2123,"nodeType":"ExpressionStatement","src":"1219:28:13"}]},"functionSelector":"f3fef3a3","id":2125,"implemented":true,"kind":"function","modifiers":[{"id":2115,"kind":"modifierInvocation","modifierName":{"id":2114,"name":"onlyWithdrawer","nameLocations":["1193:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2163,"src":"1193:14:13"},"nodeType":"ModifierInvocation","src":"1193:14:13"}],"name":"withdraw","nameLocation":"1145:8:13","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"_to","nameLocation":"1162:3:13","nodeType":"VariableDeclaration","scope":2125,"src":"1154:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"_amount","nameLocation":"1175:7:13","nodeType":"VariableDeclaration","scope":2125,"src":"1167:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1153:30:13"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"1208:0:13"},"scope":2164,"src":"1136:119:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2143,"nodeType":"Block","src":"1305:87:13","statements":[{"expression":{"arguments":[{"id":2133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1343:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"}},{"expression":{"id":2134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1350:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1354:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1350:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2138,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1370:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2164","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2164","typeString":"contract Vault"}],"id":2137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1362:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:13","typeDescriptions":{}}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1362:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2140,"name":"_amout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1377:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$772","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2130,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1316:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1098_$","typeString":"type(library SafeERC20)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1326:16:13","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":885,"src":"1316:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$772_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1316:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2142,"nodeType":"ExpressionStatement","src":"1316:68:13"}]},"functionSelector":"b6b55f25","id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1272:7:13","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"_amout","nameLocation":"1288:6:13","nodeType":"VariableDeclaration","scope":2144,"src":"1280:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:16:13"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[],"src":"1305:0:13"},"scope":2164,"src":"1263:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2162,"nodeType":"Block","src":"1426:137:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2147,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1445:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1456:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1456:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1445:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"hexValue":"574954484452415745525f524f4c45","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1480:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""},"value":"WITHDRAWER_ROLE"},{"arguments":[],"expression":{"argumentTypes":[],"id":2154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1499:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":2152,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1472:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1472:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1445:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420612077697468647261776572","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1514:28:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","typeString":"literal_string \"Caller is not a withdrawer\""},"value":"Caller is not a withdrawer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","typeString":"literal_string \"Caller is not a withdrawer\""}],"id":2146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1437:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"ExpressionStatement","src":"1437:106:13"},{"id":2161,"nodeType":"PlaceholderStatement","src":"1554:1:13"}]},"id":2163,"name":"onlyWithdrawer","nameLocation":"1409:14:13","nodeType":"ModifierDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"1423:2:13"},"src":"1400:163:13","virtual":false,"visibility":"internal"}],"scope":2165,"src":"379:1187:13","usedErrors":[305,308,392,397,825,1106,1111,1114],"usedEvents":[317,326,335,403]}],"src":"90:1476:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb1c906fcd870fc8dfedb63bfb1bc58b4d2a7469bc13cc44d996fda430693850a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd98c7779af61b220166cf952a05f6aca82ec859744d407d29043f8100adfb9c\",\"dweb:/ipfs/Qmd6ftRk6cJgdooybM6F1X26R4SSUeNksv6Gni2NwEnKDw\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/Vault.sol":{"Vault":{"abi":[{"inputs":[{"internalType":"address","name":"initOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAWER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amout","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxWithdrawAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxAmount","type":"uint256"}],"name":"setMaxWithdrawAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isEnable","type":"bool"}],"name":"setWithdrawEnable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEnable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2071":{"entryPoint":null,"id":2071,"parameterSlots":1,"returnSlots":0},"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_add_1470":{"entryPoint":942,"id":1470,"parameterSlots":2,"returnSlots":1},"@_contains_1573":{"entryPoint":1064,"id":1573,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":520,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_635":{"entryPoint":439,"id":635,"parameterSlots":2,"returnSlots":1},"@_msgSender_1363":{"entryPoint":431,"id":1363,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":235,"id":525,"parameterSlots":1,"returnSlots":0},"@add_1770":{"entryPoint":779,"id":1770,"parameterSlots":2,"returnSlots":1},"@hasRole_80":{"entryPoint":835,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1255,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":1136,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1104,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1099,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1156,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1551:14","nodeType":"YulBlock","src":"0:1551:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"379:81:14","nodeType":"YulBlock","src":"379:81:14","statements":[{"nativeSrc":"389:65:14","nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nativeSrc":"404:5:14","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nativeSrc":"411:42:14","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:14","nodeType":"YulIdentifier","src":"400:3:14"},"nativeSrc":"400:54:14","nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:14","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:14","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:14","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nativeSrc":"511:51:14","nodeType":"YulBlock","src":"511:51:14","statements":[{"nativeSrc":"521:35:14","nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nativeSrc":"550:5:14","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:14","nodeType":"YulIdentifier","src":"532:17:14"},"nativeSrc":"532:24:14","nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:14","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:14","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:14","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nativeSrc":"611:79:14","nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nativeSrc":"668:16:14","nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:14","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:14","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:14","nodeType":"YulIdentifier","src":"670:6:14"},"nativeSrc":"670:12:14","nodeType":"YulFunctionCall","src":"670:12:14"},"nativeSrc":"670:12:14","nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:14","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nativeSrc":"659:5:14","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:14","nodeType":"YulIdentifier","src":"641:17:14"},"nativeSrc":"641:24:14","nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nativeSrc":"631:2:14","nodeType":"YulIdentifier","src":"631:2:14"},"nativeSrc":"631:35:14","nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nativeSrc":"624:6:14","nodeType":"YulIdentifier","src":"624:6:14"},"nativeSrc":"624:43:14","nodeType":"YulFunctionCall","src":"624:43:14"},"nativeSrc":"621:63:14","nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:14","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nativeSrc":"759:80:14","nodeType":"YulBlock","src":"759:80:14","statements":[{"nativeSrc":"769:22:14","nodeType":"YulAssignment","src":"769:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:14","nodeType":"YulIdentifier","src":"784:6:14"}],"functionName":{"name":"mload","nativeSrc":"778:5:14","nodeType":"YulIdentifier","src":"778:5:14"},"nativeSrc":"778:13:14","nodeType":"YulFunctionCall","src":"778:13:14"},"variableNames":[{"name":"value","nativeSrc":"769:5:14","nodeType":"YulIdentifier","src":"769:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:14","nodeType":"YulIdentifier","src":"827:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:14","nodeType":"YulIdentifier","src":"800:26:14"},"nativeSrc":"800:33:14","nodeType":"YulFunctionCall","src":"800:33:14"},"nativeSrc":"800:33:14","nodeType":"YulExpressionStatement","src":"800:33:14"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:14","nodeType":"YulTypedName","src":"737:6:14","type":""},{"name":"end","nativeSrc":"745:3:14","nodeType":"YulTypedName","src":"745:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:14","nodeType":"YulTypedName","src":"753:5:14","type":""}],"src":"696:143:14"},{"body":{"nativeSrc":"922:274:14","nodeType":"YulBlock","src":"922:274:14","statements":[{"body":{"nativeSrc":"968:83:14","nodeType":"YulBlock","src":"968:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:14","nodeType":"YulIdentifier","src":"970:77:14"},"nativeSrc":"970:79:14","nodeType":"YulFunctionCall","src":"970:79:14"},"nativeSrc":"970:79:14","nodeType":"YulExpressionStatement","src":"970:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:14","nodeType":"YulIdentifier","src":"943:7:14"},{"name":"headStart","nativeSrc":"952:9:14","nodeType":"YulIdentifier","src":"952:9:14"}],"functionName":{"name":"sub","nativeSrc":"939:3:14","nodeType":"YulIdentifier","src":"939:3:14"},"nativeSrc":"939:23:14","nodeType":"YulFunctionCall","src":"939:23:14"},{"kind":"number","nativeSrc":"964:2:14","nodeType":"YulLiteral","src":"964:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:14","nodeType":"YulIdentifier","src":"935:3:14"},"nativeSrc":"935:32:14","nodeType":"YulFunctionCall","src":"935:32:14"},"nativeSrc":"932:119:14","nodeType":"YulIf","src":"932:119:14"},{"nativeSrc":"1061:128:14","nodeType":"YulBlock","src":"1061:128:14","statements":[{"nativeSrc":"1076:15:14","nodeType":"YulVariableDeclaration","src":"1076:15:14","value":{"kind":"number","nativeSrc":"1090:1:14","nodeType":"YulLiteral","src":"1090:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:14","nodeType":"YulTypedName","src":"1080:6:14","type":""}]},{"nativeSrc":"1105:74:14","nodeType":"YulAssignment","src":"1105:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:14","nodeType":"YulIdentifier","src":"1151:9:14"},{"name":"offset","nativeSrc":"1162:6:14","nodeType":"YulIdentifier","src":"1162:6:14"}],"functionName":{"name":"add","nativeSrc":"1147:3:14","nodeType":"YulIdentifier","src":"1147:3:14"},"nativeSrc":"1147:22:14","nodeType":"YulFunctionCall","src":"1147:22:14"},{"name":"dataEnd","nativeSrc":"1171:7:14","nodeType":"YulIdentifier","src":"1171:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:14","nodeType":"YulIdentifier","src":"1115:31:14"},"nativeSrc":"1115:64:14","nodeType":"YulFunctionCall","src":"1115:64:14"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:14","nodeType":"YulIdentifier","src":"1105:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:14","nodeType":"YulTypedName","src":"892:9:14","type":""},{"name":"dataEnd","nativeSrc":"903:7:14","nodeType":"YulTypedName","src":"903:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:14","nodeType":"YulTypedName","src":"915:6:14","type":""}],"src":"845:351:14"},{"body":{"nativeSrc":"1267:53:14","nodeType":"YulBlock","src":"1267:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1284:3:14","nodeType":"YulIdentifier","src":"1284:3:14"},{"arguments":[{"name":"value","nativeSrc":"1307:5:14","nodeType":"YulIdentifier","src":"1307:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1289:17:14","nodeType":"YulIdentifier","src":"1289:17:14"},"nativeSrc":"1289:24:14","nodeType":"YulFunctionCall","src":"1289:24:14"}],"functionName":{"name":"mstore","nativeSrc":"1277:6:14","nodeType":"YulIdentifier","src":"1277:6:14"},"nativeSrc":"1277:37:14","nodeType":"YulFunctionCall","src":"1277:37:14"},"nativeSrc":"1277:37:14","nodeType":"YulExpressionStatement","src":"1277:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1202:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1255:5:14","nodeType":"YulTypedName","src":"1255:5:14","type":""},{"name":"pos","nativeSrc":"1262:3:14","nodeType":"YulTypedName","src":"1262:3:14","type":""}],"src":"1202:118:14"},{"body":{"nativeSrc":"1424:124:14","nodeType":"YulBlock","src":"1424:124:14","statements":[{"nativeSrc":"1434:26:14","nodeType":"YulAssignment","src":"1434:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1446:9:14","nodeType":"YulIdentifier","src":"1446:9:14"},{"kind":"number","nativeSrc":"1457:2:14","nodeType":"YulLiteral","src":"1457:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1442:3:14","nodeType":"YulIdentifier","src":"1442:3:14"},"nativeSrc":"1442:18:14","nodeType":"YulFunctionCall","src":"1442:18:14"},"variableNames":[{"name":"tail","nativeSrc":"1434:4:14","nodeType":"YulIdentifier","src":"1434:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1514:6:14","nodeType":"YulIdentifier","src":"1514:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"1527:9:14","nodeType":"YulIdentifier","src":"1527:9:14"},{"kind":"number","nativeSrc":"1538:1:14","nodeType":"YulLiteral","src":"1538:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1523:3:14","nodeType":"YulIdentifier","src":"1523:3:14"},"nativeSrc":"1523:17:14","nodeType":"YulFunctionCall","src":"1523:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1470:43:14","nodeType":"YulIdentifier","src":"1470:43:14"},"nativeSrc":"1470:71:14","nodeType":"YulFunctionCall","src":"1470:71:14"},"nativeSrc":"1470:71:14","nodeType":"YulExpressionStatement","src":"1470:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1326:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1396:9:14","nodeType":"YulTypedName","src":"1396:9:14","type":""},{"name":"value0","nativeSrc":"1408:6:14","nodeType":"YulTypedName","src":"1408:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1419:4:14","nodeType":"YulTypedName","src":"1419:4:14","type":""}],"src":"1326:222:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001f3538038062001f358339818101604052810190620000379190620004b5565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620004f8565b60405180910390fd5b620000be81620000eb60201b60201c565b50620000e36000801b620000d7620001af60201b60201c565b620001b760201b60201c565b505062000515565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080620001cc84846200020860201b60201c565b90508015620001fe57620001fc83600260008781526020019081526020016000206200030b60201b90919060201c565b505b8091505092915050565b60006200021c83836200034360201b60201c565b6200030057600180600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200029c620001af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000305565b600090505b92915050565b60006200033b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620003ae60201b60201c565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000620003c283836200042860201b60201c565b6200041d57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000422565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200047d8262000450565b9050919050565b6200048f8162000470565b81146200049b57600080fd5b50565b600081519050620004af8162000484565b92915050565b600060208284031215620004ce57620004cd6200044b565b5b6000620004de848285016200049e565b91505092915050565b620004f28162000470565b82525050565b60006020820190506200050f6000830184620004e7565b92915050565b611a1080620005256000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806391d14854116100ad578063d547741f11610071578063d547741f1461032f578063df74e0281461034b578063f2fde38b14610367578063f3fef3a314610383578063f516440c1461039f5761012c565b806391d1485414610277578063a217fddf146102a7578063b5b68afe146102c5578063b6b55f25146102e3578063ca15c873146102ff5761012c565b8063715018a6116100f4578063715018a6146101e5578063827a560b146101ef57806385f438c11461020b5780638da5cb5b146102295780639010d07c146102475761012c565b806301ffc9a714610131578063144fa6d714610161578063248a9ca31461017d5780632f2ff15d146101ad57806336568abe146101c9575b600080fd5b61014b60048036038101906101469190611393565b6103bd565b60405161015891906113db565b60405180910390f35b61017b60048036038101906101769190611466565b610437565b005b610197600480360381019061019291906114c9565b610483565b6040516101a49190611505565b60405180910390f35b6101c760048036038101906101c2919061154c565b6104a3565b005b6101e360048036038101906101de919061154c565b6104c5565b005b6101ed610540565b005b610209600480360381019061020491906115b8565b610554565b005b610213610579565b6040516102209190611505565b60405180910390f35b61023161059d565b60405161023e91906115f4565b60405180910390f35b610261600480360381019061025c9190611645565b6105c6565b60405161026e91906115f4565b60405180910390f35b610291600480360381019061028c919061154c565b6105f5565b60405161029e91906113db565b60405180910390f35b6102af610660565b6040516102bc9190611505565b60405180910390f35b6102cd610667565b6040516102da91906113db565b60405180910390f35b6102fd60048036038101906102f89190611685565b61067a565b005b610319600480360381019061031491906114c9565b6106ab565b60405161032691906116c1565b60405180910390f35b6103496004803603810190610344919061154c565b6106cf565b005b61036560048036038101906103609190611685565b6106f1565b005b610381600480360381019061037c91906116dc565b610703565b005b61039d60048036038101906103989190611709565b610789565b005b6103a76108e2565b6040516103b491906116c1565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610430575061042f826108e8565b5b9050919050565b61043f610962565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060016000838152602001908152602001600020600101549050919050565b6104ac82610483565b6104b5816109e9565b6104bf83836109fd565b50505050565b6104cd610a43565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610531576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053b8282610a4b565b505050565b610548610962565b6105526000610a91565b565b61055c610962565b80600560006101000a81548160ff02191690831515021790555050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105ed8260026000868152602001908152602001600020610b5590919063ffffffff16565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600560009054906101000a900460ff1681565b6106a8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610b6f565b50565b60006106c860026000848152602001908152602001600020610bf1565b9050919050565b6106d882610483565b6106e1816109e9565b6106eb8383610a4b565b50505050565b6106f9610962565b8060048190555050565b61070b610962565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077d5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161077491906115f4565b60405180910390fd5b61078681610a91565b50565b610791610a43565b73ffffffffffffffffffffffffffffffffffffffff166107af61059d565b73ffffffffffffffffffffffffffffffffffffffff1614806107fe57506107fd7f574954484452415745525f524f4c4500000000000000000000000000000000006107f8610a43565b6105f5565b5b61083d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610834906117a6565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161089a9291906117c6565b6020604051808303816000875af11580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611804565b505050565b60045481565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061095b575061095a82610c06565b5b9050919050565b61096a610a43565b73ffffffffffffffffffffffffffffffffffffffff1661098861059d565b73ffffffffffffffffffffffffffffffffffffffff16146109e7576109ab610a43565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109de91906115f4565b60405180910390fd5b565b6109fa816109f5610a43565b610c70565b50565b600080610a0a8484610cc1565b90508015610a3957610a378360026000878152602001908152602001600020610db290919063ffffffff16565b505b8091505092915050565b600033905090565b600080610a588484610de2565b90508015610a8757610a858360026000878152602001908152602001600020610ed590919063ffffffff16565b505b8091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610b648360000183610f05565b60001c905092915050565b610beb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610ba493929190611831565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f30565b50505050565b6000610bff82600001610fc7565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c7a82826105f5565b610cbd5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610cb4929190611868565b60405180910390fd5b5050565b6000610ccd83836105f5565b610da757600180600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d44610a43565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610dac565b600090505b92915050565b6000610dda836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610fd8565b905092915050565b6000610dee83836105f5565b15610eca5760006001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e67610a43565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610ecf565b600090505b92915050565b6000610efd836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611048565b905092915050565b6000826000018281548110610f1d57610f1c611891565b5b9060005260206000200154905092915050565b6000610f5b828473ffffffffffffffffffffffffffffffffffffffff1661115c90919063ffffffff16565b90506000815114158015610f80575080806020019051810190610f7e9190611804565b155b15610fc257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fb991906115f4565b60405180910390fd5b505050565b600081600001805490509050919050565b6000610fe48383611172565b61103d578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611042565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461115057600060018261107a91906118ef565b905060006001866000018054905061109291906118ef565b90508082146111015760008660000182815481106110b3576110b2611891565b5b90600052602060002001549050808760000184815481106110d7576110d6611891565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061111557611114611923565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611156565b60009150505b92915050565b606061116a83836000611195565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6060814710156111dc57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016111d391906115f4565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161120591906119c3565b60006040518083038185875af1925050503d8060008114611242576040519150601f19603f3d011682016040523d82523d6000602084013e611247565b606091505b5091509150611257868383611262565b925050509392505050565b60608261127757611272826112f1565b6112e9565b6000825114801561129f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156112e157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016112d891906115f4565b60405180910390fd5b8190506112ea565b5b9392505050565b6000815111156113045780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113708161133b565b811461137b57600080fd5b50565b60008135905061138d81611367565b92915050565b6000602082840312156113a9576113a8611336565b5b60006113b78482850161137e565b91505092915050565b60008115159050919050565b6113d5816113c0565b82525050565b60006020820190506113f060008301846113cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611421826113f6565b9050919050565b600061143382611416565b9050919050565b61144381611428565b811461144e57600080fd5b50565b6000813590506114608161143a565b92915050565b60006020828403121561147c5761147b611336565b5b600061148a84828501611451565b91505092915050565b6000819050919050565b6114a681611493565b81146114b157600080fd5b50565b6000813590506114c38161149d565b92915050565b6000602082840312156114df576114de611336565b5b60006114ed848285016114b4565b91505092915050565b6114ff81611493565b82525050565b600060208201905061151a60008301846114f6565b92915050565b61152981611416565b811461153457600080fd5b50565b60008135905061154681611520565b92915050565b6000806040838503121561156357611562611336565b5b6000611571858286016114b4565b925050602061158285828601611537565b9150509250929050565b611595816113c0565b81146115a057600080fd5b50565b6000813590506115b28161158c565b92915050565b6000602082840312156115ce576115cd611336565b5b60006115dc848285016115a3565b91505092915050565b6115ee81611416565b82525050565b600060208201905061160960008301846115e5565b92915050565b6000819050919050565b6116228161160f565b811461162d57600080fd5b50565b60008135905061163f81611619565b92915050565b6000806040838503121561165c5761165b611336565b5b600061166a858286016114b4565b925050602061167b85828601611630565b9150509250929050565b60006020828403121561169b5761169a611336565b5b60006116a984828501611630565b91505092915050565b6116bb8161160f565b82525050565b60006020820190506116d660008301846116b2565b92915050565b6000602082840312156116f2576116f1611336565b5b600061170084828501611537565b91505092915050565b600080604083850312156117205761171f611336565b5b600061172e85828601611537565b925050602061173f85828601611630565b9150509250929050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420612077697468647261776572000000000000600082015250565b6000611790601a83611749565b915061179b8261175a565b602082019050919050565b600060208201905081810360008301526117bf81611783565b9050919050565b60006040820190506117db60008301856115e5565b6117e860208301846116b2565b9392505050565b6000815190506117fe8161158c565b92915050565b60006020828403121561181a57611819611336565b5b6000611828848285016117ef565b91505092915050565b600060608201905061184660008301866115e5565b61185360208301856115e5565b61186060408301846116b2565b949350505050565b600060408201905061187d60008301856115e5565b61188a60208301846114f6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118fa8261160f565b91506119058361160f565b925082820390508181111561191d5761191c6118c0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561198657808201518184015260208101905061196b565b60008484015250505050565b600061199d82611952565b6119a7818561195d565b93506119b7818560208601611968565b80840191505092915050565b60006119cf8284611992565b91508190509291505056fea26469706673582212204b5b1bae369780cb1612dcd8a510d28ee85bff4fca1cb07ba25c7bd4d14c67ca64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F35 CODESIZE SUB DUP1 PUSH3 0x1F35 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4B5 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xEB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xE3 PUSH1 0x0 DUP1 SHL PUSH3 0xD7 PUSH3 0x1AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x515 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1CC DUP5 DUP5 PUSH3 0x208 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1FE JUMPI PUSH3 0x1FC DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x30B PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21C DUP4 DUP4 PUSH3 0x343 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x300 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x29C PUSH3 0x1AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33B DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x3AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C2 DUP4 DUP4 PUSH3 0x428 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x41D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x422 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x47D DUP3 PUSH3 0x450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x48F DUP2 PUSH3 0x470 JUMP JUMPDEST DUP2 EQ PUSH3 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4AF DUP2 PUSH3 0x484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4CE JUMPI PUSH3 0x4CD PUSH3 0x44B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x4DE DUP5 DUP3 DUP6 ADD PUSH3 0x49E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4F2 DUP2 PUSH3 0x470 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x50F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A10 DUP1 PUSH3 0x525 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDF74E028 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xF516440C EQ PUSH2 0x39F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xB5B68AFE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2FF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x827A560B EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x85F438C1 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x247 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x430 JUMPI POP PUSH2 0x42F DUP3 PUSH2 0x8E8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43F PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AC DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x4B5 DUP2 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x4BF DUP4 DUP4 PUSH2 0x9FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4CD PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53B DUP3 DUP3 PUSH2 0xA4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x552 PUSH1 0x0 PUSH2 0xA91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x55C PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xB55 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A8 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xB6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D8 DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x6E1 DUP2 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0xA4B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6F9 PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x70B PUSH2 0x962 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x786 DUP2 PUSH2 0xA91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x791 PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AF PUSH2 0x59D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7FE JUMPI POP PUSH2 0x7FD PUSH32 0x574954484452415745525F524F4C450000000000000000000000000000000000 PUSH2 0x7F8 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST JUMPDEST PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP3 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x95B JUMPI POP PUSH2 0x95A DUP3 PUSH2 0xC06 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96A PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x988 PUSH2 0x59D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E7 JUMPI PUSH2 0x9AB PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x9F5 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0xC70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0A DUP5 DUP5 PUSH2 0xCC1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA39 JUMPI PUSH2 0xA37 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xDB2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA58 DUP5 DUP5 PUSH2 0xDE2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA85 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xED5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBEB DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBA4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF30 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF DUP3 PUSH1 0x0 ADD PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP3 DUP3 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0xCBD JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB4 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCD DUP4 DUP4 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0xDA7 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD44 PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDA DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEE DUP4 DUP4 PUSH2 0x5F5 JUMP JUMPDEST ISZERO PUSH2 0xECA JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE67 PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFD DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1048 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x115C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xF80 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFC2 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE4 DUP4 DUP4 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x103D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1150 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1101 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x116A DUP4 DUP4 PUSH1 0x0 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11DC JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1205 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1242 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1257 DUP7 DUP4 DUP4 PUSH2 0x1262 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1277 JUMPI PUSH2 0x1272 DUP3 PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x129F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x12E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x12EA JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1304 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1370 DUP2 PUSH2 0x133B JUMP JUMPDEST DUP2 EQ PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138D DUP2 PUSH2 0x1367 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x13A8 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B7 DUP5 DUP3 DUP6 ADD PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D5 DUP2 PUSH2 0x13C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1421 DUP3 PUSH2 0x13F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1433 DUP3 PUSH2 0x1416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1443 DUP2 PUSH2 0x1428 JUMP JUMPDEST DUP2 EQ PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1460 DUP2 PUSH2 0x143A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147B PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A6 DUP2 PUSH2 0x1493 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C3 DUP2 PUSH2 0x149D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH2 0x14DE PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14ED DUP5 DUP3 DUP6 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FF DUP2 PUSH2 0x1493 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP2 EQ PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1546 DUP2 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1571 DUP6 DUP3 DUP7 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1582 DUP6 DUP3 DUP7 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1595 DUP2 PUSH2 0x13C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B2 DUP2 PUSH2 0x158C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DC DUP5 DUP3 DUP6 ADD PUSH2 0x15A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EE DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1609 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1622 DUP2 PUSH2 0x160F JUMP JUMPDEST DUP2 EQ PUSH2 0x162D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x163F DUP2 PUSH2 0x1619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166A DUP6 DUP3 DUP7 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167B DUP6 DUP3 DUP7 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A9 DUP5 DUP3 DUP6 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16BB DUP2 PUSH2 0x160F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1700 DUP5 DUP3 DUP6 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x171F PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172E DUP6 DUP3 DUP7 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173F DUP6 DUP3 DUP7 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612077697468647261776572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1790 PUSH1 0x1A DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH2 0x179B DUP3 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17BF DUP2 PUSH2 0x1783 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17DB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x17E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17FE DUP2 PUSH2 0x158C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1828 DUP5 DUP3 DUP6 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1846 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x1853 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x1860 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x187D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x188A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18FA DUP3 PUSH2 0x160F JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP4 PUSH2 0x160F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x18C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1986 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP3 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x19A7 DUP2 DUP6 PUSH2 0x195D JUMP JUMPDEST SWAP4 POP PUSH2 0x19B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1968 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CF DUP3 DUP5 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B JUMPDEST SHL 0xAE CALLDATASIZE SWAP8 DUP1 0xCB AND SLT 0xDC 0xD8 0xA5 LT 0xD2 DUP15 0xE8 JUMPDEST SELFDESTRUCT 0x4F 0xCA SHR 0xB0 PUSH28 0xA25C7BD4D14C67CA64736F6C63430008180033000000000000000000 ","sourceMap":"379:1187:13:-:0;;;669:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:9;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;748:44:13::1;2232:4:0;759:18:13::0;::::1;779:12;:10;;;:12;;:::i;:::-;748:10;;;:44;;:::i;:::-;;669:131:::0;379:1187;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;2069:257:3:-;2155:4;2171:12;2186:31;2203:4;2209:7;2186:16;;;:31;;:::i;:::-;2171:46;;2231:7;2227:69;;;2254:31;2277:7;2254:12;:18;2267:4;2254:18;;;;;;;;;;;:22;;;;:31;;;;:::i;:::-;;2227:69;2312:7;2305:14;;;2069:257;;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;8316:150:12:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;;;:50;;:::i;:::-;8402:57;;8316:150;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2241:406:12:-;2304:4;2325:21;2335:3;2340:5;2325:9;;;:21;;:::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;4264:129::-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;379:1187:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":1632,"id":29,"parameterSlots":0,"returnSlots":0},"@WITHDRAWER_ROLE_2056":{"entryPoint":1401,"id":2056,"parameterSlots":0,"returnSlots":0},"@_add_1470":{"entryPoint":4056,"id":1470,"parameterSlots":2,"returnSlots":1},"@_at_1604":{"entryPoint":3845,"id":1604,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_1048":{"entryPoint":3888,"id":1048,"parameterSlots":2,"returnSlots":0},"@_checkOwner_463":{"entryPoint":2402,"id":463,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":3184,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2537,"id":93,"parameterSlots":1,"returnSlots":0},"@_contains_1573":{"entryPoint":4466,"id":1573,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":3265,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_635":{"entryPoint":2557,"id":635,"parameterSlots":2,"returnSlots":1},"@_length_1587":{"entryPoint":4039,"id":1587,"parameterSlots":1,"returnSlots":1},"@_msgSender_1363":{"entryPoint":2627,"id":1363,"parameterSlots":0,"returnSlots":1},"@_remove_1554":{"entryPoint":4168,"id":1554,"parameterSlots":2,"returnSlots":1},"@_revert_1350":{"entryPoint":4849,"id":1350,"parameterSlots":1,"returnSlots":0},"@_revokeRole_294":{"entryPoint":3554,"id":294,"parameterSlots":2,"returnSlots":1},"@_revokeRole_667":{"entryPoint":2635,"id":667,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":2705,"id":525,"parameterSlots":1,"returnSlots":0},"@add_1770":{"entryPoint":3506,"id":1770,"parameterSlots":2,"returnSlots":1},"@at_1866":{"entryPoint":2901,"id":1866,"parameterSlots":2,"returnSlots":1},"@deposit_2144":{"entryPoint":1658,"id":2144,"parameterSlots":1,"returnSlots":0},"@functionCallWithValue_1218":{"entryPoint":4501,"id":1218,"parameterSlots":3,"returnSlots":1},"@functionCall_1172":{"entryPoint":4444,"id":1172,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":1155,"id":128,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_603":{"entryPoint":1707,"id":603,"parameterSlots":1,"returnSlots":1},"@getRoleMember_588":{"entryPoint":1478,"id":588,"parameterSlots":2,"returnSlots":1},"@grantRole_147":{"entryPoint":1187,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1525,"id":80,"parameterSlots":2,"returnSlots":1},"@length_1839":{"entryPoint":3057,"id":1839,"parameterSlots":1,"returnSlots":1},"@maxWithdrawAmount_2049":{"entryPoint":2274,"id":2049,"parameterSlots":0,"returnSlots":0},"@owner_446":{"entryPoint":1437,"id":446,"parameterSlots":0,"returnSlots":1},"@remove_1797":{"entryPoint":3797,"id":1797,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1344,"id":477,"parameterSlots":0,"returnSlots":0},"@renounceRole_189":{"entryPoint":1221,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":1743,"id":166,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_885":{"entryPoint":2927,"id":885,"parameterSlots":4,"returnSlots":0},"@setMaxWithdrawAmount_2096":{"entryPoint":1777,"id":2096,"parameterSlots":1,"returnSlots":0},"@setToken_2084":{"entryPoint":1079,"id":2084,"parameterSlots":1,"returnSlots":0},"@setWithdrawEnable_2108":{"entryPoint":1364,"id":2108,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1404":{"entryPoint":3078,"id":1404,"parameterSlots":1,"returnSlots":1},"@supportsInterface_570":{"entryPoint":957,"id":570,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":2280,"id":62,"parameterSlots":1,"returnSlots":1},"@transferOwnership_505":{"entryPoint":1795,"id":505,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1310":{"entryPoint":4706,"id":1310,"parameterSlots":3,"returnSlots":1},"@withdrawEnable_2051":{"entryPoint":1639,"id":2051,"parameterSlots":0,"returnSlots":0},"@withdraw_2125":{"entryPoint":1929,"id":2125,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":4990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$772":{"entryPoint":5201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5897,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":5560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":5321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5452,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":5701,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$772":{"entryPoint":5222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5605,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5068,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5366,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack":{"entryPoint":6019,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5810,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6193,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":6248,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6086,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6054,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5825,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6482,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6493,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5961,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6383,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5142,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5056,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5267,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4923,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$772":{"entryPoint":5160,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5110,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5647,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6504,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":6336,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":6435,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6289,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4918,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73":{"entryPoint":5978,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5408,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5516,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5277,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4967,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$772":{"entryPoint":5178,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5657,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12341:14","nodeType":"YulBlock","src":"0:12341:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"378:105:14","nodeType":"YulBlock","src":"378:105:14","statements":[{"nativeSrc":"388:89:14","nodeType":"YulAssignment","src":"388:89:14","value":{"arguments":[{"name":"value","nativeSrc":"403:5:14","nodeType":"YulIdentifier","src":"403:5:14"},{"kind":"number","nativeSrc":"410:66:14","nodeType":"YulLiteral","src":"410:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:14","nodeType":"YulIdentifier","src":"399:3:14"},"nativeSrc":"399:78:14","nodeType":"YulFunctionCall","src":"399:78:14"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:14","nodeType":"YulIdentifier","src":"388:7:14"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:14","nodeType":"YulTypedName","src":"360:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:14","nodeType":"YulTypedName","src":"370:7:14","type":""}],"src":"334:149:14"},{"body":{"nativeSrc":"531:78:14","nodeType":"YulBlock","src":"531:78:14","statements":[{"body":{"nativeSrc":"587:16:14","nodeType":"YulBlock","src":"587:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:14","nodeType":"YulLiteral","src":"596:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:14","nodeType":"YulLiteral","src":"599:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:14","nodeType":"YulIdentifier","src":"589:6:14"},"nativeSrc":"589:12:14","nodeType":"YulFunctionCall","src":"589:12:14"},"nativeSrc":"589:12:14","nodeType":"YulExpressionStatement","src":"589:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:14","nodeType":"YulIdentifier","src":"554:5:14"},{"arguments":[{"name":"value","nativeSrc":"578:5:14","nodeType":"YulIdentifier","src":"578:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:14","nodeType":"YulIdentifier","src":"561:16:14"},"nativeSrc":"561:23:14","nodeType":"YulFunctionCall","src":"561:23:14"}],"functionName":{"name":"eq","nativeSrc":"551:2:14","nodeType":"YulIdentifier","src":"551:2:14"},"nativeSrc":"551:34:14","nodeType":"YulFunctionCall","src":"551:34:14"}],"functionName":{"name":"iszero","nativeSrc":"544:6:14","nodeType":"YulIdentifier","src":"544:6:14"},"nativeSrc":"544:42:14","nodeType":"YulFunctionCall","src":"544:42:14"},"nativeSrc":"541:62:14","nodeType":"YulIf","src":"541:62:14"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:14","nodeType":"YulTypedName","src":"524:5:14","type":""}],"src":"489:120:14"},{"body":{"nativeSrc":"666:86:14","nodeType":"YulBlock","src":"666:86:14","statements":[{"nativeSrc":"676:29:14","nodeType":"YulAssignment","src":"676:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:14","nodeType":"YulIdentifier","src":"698:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:14","nodeType":"YulIdentifier","src":"685:12:14"},"nativeSrc":"685:20:14","nodeType":"YulFunctionCall","src":"685:20:14"},"variableNames":[{"name":"value","nativeSrc":"676:5:14","nodeType":"YulIdentifier","src":"676:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:14","nodeType":"YulIdentifier","src":"740:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:14","nodeType":"YulIdentifier","src":"714:25:14"},"nativeSrc":"714:32:14","nodeType":"YulFunctionCall","src":"714:32:14"},"nativeSrc":"714:32:14","nodeType":"YulExpressionStatement","src":"714:32:14"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:14","nodeType":"YulTypedName","src":"644:6:14","type":""},{"name":"end","nativeSrc":"652:3:14","nodeType":"YulTypedName","src":"652:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:14","nodeType":"YulTypedName","src":"660:5:14","type":""}],"src":"615:137:14"},{"body":{"nativeSrc":"823:262:14","nodeType":"YulBlock","src":"823:262:14","statements":[{"body":{"nativeSrc":"869:83:14","nodeType":"YulBlock","src":"869:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:14","nodeType":"YulIdentifier","src":"871:77:14"},"nativeSrc":"871:79:14","nodeType":"YulFunctionCall","src":"871:79:14"},"nativeSrc":"871:79:14","nodeType":"YulExpressionStatement","src":"871:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:14","nodeType":"YulIdentifier","src":"844:7:14"},{"name":"headStart","nativeSrc":"853:9:14","nodeType":"YulIdentifier","src":"853:9:14"}],"functionName":{"name":"sub","nativeSrc":"840:3:14","nodeType":"YulIdentifier","src":"840:3:14"},"nativeSrc":"840:23:14","nodeType":"YulFunctionCall","src":"840:23:14"},{"kind":"number","nativeSrc":"865:2:14","nodeType":"YulLiteral","src":"865:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:14","nodeType":"YulIdentifier","src":"836:3:14"},"nativeSrc":"836:32:14","nodeType":"YulFunctionCall","src":"836:32:14"},"nativeSrc":"833:119:14","nodeType":"YulIf","src":"833:119:14"},{"nativeSrc":"962:116:14","nodeType":"YulBlock","src":"962:116:14","statements":[{"nativeSrc":"977:15:14","nodeType":"YulVariableDeclaration","src":"977:15:14","value":{"kind":"number","nativeSrc":"991:1:14","nodeType":"YulLiteral","src":"991:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:14","nodeType":"YulTypedName","src":"981:6:14","type":""}]},{"nativeSrc":"1006:62:14","nodeType":"YulAssignment","src":"1006:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:14","nodeType":"YulIdentifier","src":"1040:9:14"},{"name":"offset","nativeSrc":"1051:6:14","nodeType":"YulIdentifier","src":"1051:6:14"}],"functionName":{"name":"add","nativeSrc":"1036:3:14","nodeType":"YulIdentifier","src":"1036:3:14"},"nativeSrc":"1036:22:14","nodeType":"YulFunctionCall","src":"1036:22:14"},{"name":"dataEnd","nativeSrc":"1060:7:14","nodeType":"YulIdentifier","src":"1060:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:14","nodeType":"YulIdentifier","src":"1016:19:14"},"nativeSrc":"1016:52:14","nodeType":"YulFunctionCall","src":"1016:52:14"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:14","nodeType":"YulIdentifier","src":"1006:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:14","nodeType":"YulTypedName","src":"793:9:14","type":""},{"name":"dataEnd","nativeSrc":"804:7:14","nodeType":"YulTypedName","src":"804:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:14","nodeType":"YulTypedName","src":"816:6:14","type":""}],"src":"758:327:14"},{"body":{"nativeSrc":"1133:48:14","nodeType":"YulBlock","src":"1133:48:14","statements":[{"nativeSrc":"1143:32:14","nodeType":"YulAssignment","src":"1143:32:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:14","nodeType":"YulIdentifier","src":"1168:5:14"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:14","nodeType":"YulIdentifier","src":"1161:6:14"},"nativeSrc":"1161:13:14","nodeType":"YulFunctionCall","src":"1161:13:14"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:14","nodeType":"YulIdentifier","src":"1154:6:14"},"nativeSrc":"1154:21:14","nodeType":"YulFunctionCall","src":"1154:21:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:14","nodeType":"YulIdentifier","src":"1143:7:14"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:14","nodeType":"YulTypedName","src":"1115:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:14","nodeType":"YulTypedName","src":"1125:7:14","type":""}],"src":"1091:90:14"},{"body":{"nativeSrc":"1246:50:14","nodeType":"YulBlock","src":"1246:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:14","nodeType":"YulIdentifier","src":"1263:3:14"},{"arguments":[{"name":"value","nativeSrc":"1283:5:14","nodeType":"YulIdentifier","src":"1283:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:14","nodeType":"YulIdentifier","src":"1268:14:14"},"nativeSrc":"1268:21:14","nodeType":"YulFunctionCall","src":"1268:21:14"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:14","nodeType":"YulIdentifier","src":"1256:6:14"},"nativeSrc":"1256:34:14","nodeType":"YulFunctionCall","src":"1256:34:14"},"nativeSrc":"1256:34:14","nodeType":"YulExpressionStatement","src":"1256:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:14","nodeType":"YulTypedName","src":"1234:5:14","type":""},{"name":"pos","nativeSrc":"1241:3:14","nodeType":"YulTypedName","src":"1241:3:14","type":""}],"src":"1187:109:14"},{"body":{"nativeSrc":"1394:118:14","nodeType":"YulBlock","src":"1394:118:14","statements":[{"nativeSrc":"1404:26:14","nodeType":"YulAssignment","src":"1404:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:14","nodeType":"YulIdentifier","src":"1416:9:14"},{"kind":"number","nativeSrc":"1427:2:14","nodeType":"YulLiteral","src":"1427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:14","nodeType":"YulIdentifier","src":"1412:3:14"},"nativeSrc":"1412:18:14","nodeType":"YulFunctionCall","src":"1412:18:14"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:14","nodeType":"YulIdentifier","src":"1404:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:14","nodeType":"YulIdentifier","src":"1478:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:14","nodeType":"YulIdentifier","src":"1491:9:14"},{"kind":"number","nativeSrc":"1502:1:14","nodeType":"YulLiteral","src":"1502:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:14","nodeType":"YulIdentifier","src":"1487:3:14"},"nativeSrc":"1487:17:14","nodeType":"YulFunctionCall","src":"1487:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:14","nodeType":"YulIdentifier","src":"1440:37:14"},"nativeSrc":"1440:65:14","nodeType":"YulFunctionCall","src":"1440:65:14"},"nativeSrc":"1440:65:14","nodeType":"YulExpressionStatement","src":"1440:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:14","nodeType":"YulTypedName","src":"1366:9:14","type":""},{"name":"value0","nativeSrc":"1378:6:14","nodeType":"YulTypedName","src":"1378:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:14","nodeType":"YulTypedName","src":"1389:4:14","type":""}],"src":"1302:210:14"},{"body":{"nativeSrc":"1563:81:14","nodeType":"YulBlock","src":"1563:81:14","statements":[{"nativeSrc":"1573:65:14","nodeType":"YulAssignment","src":"1573:65:14","value":{"arguments":[{"name":"value","nativeSrc":"1588:5:14","nodeType":"YulIdentifier","src":"1588:5:14"},{"kind":"number","nativeSrc":"1595:42:14","nodeType":"YulLiteral","src":"1595:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1584:3:14","nodeType":"YulIdentifier","src":"1584:3:14"},"nativeSrc":"1584:54:14","nodeType":"YulFunctionCall","src":"1584:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1573:7:14","nodeType":"YulIdentifier","src":"1573:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1518:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1545:5:14","nodeType":"YulTypedName","src":"1545:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1555:7:14","nodeType":"YulTypedName","src":"1555:7:14","type":""}],"src":"1518:126:14"},{"body":{"nativeSrc":"1695:51:14","nodeType":"YulBlock","src":"1695:51:14","statements":[{"nativeSrc":"1705:35:14","nodeType":"YulAssignment","src":"1705:35:14","value":{"arguments":[{"name":"value","nativeSrc":"1734:5:14","nodeType":"YulIdentifier","src":"1734:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1716:17:14","nodeType":"YulIdentifier","src":"1716:17:14"},"nativeSrc":"1716:24:14","nodeType":"YulFunctionCall","src":"1716:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1705:7:14","nodeType":"YulIdentifier","src":"1705:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"1650:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1677:5:14","nodeType":"YulTypedName","src":"1677:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1687:7:14","nodeType":"YulTypedName","src":"1687:7:14","type":""}],"src":"1650:96:14"},{"body":{"nativeSrc":"1811:51:14","nodeType":"YulBlock","src":"1811:51:14","statements":[{"nativeSrc":"1821:35:14","nodeType":"YulAssignment","src":"1821:35:14","value":{"arguments":[{"name":"value","nativeSrc":"1850:5:14","nodeType":"YulIdentifier","src":"1850:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1832:17:14","nodeType":"YulIdentifier","src":"1832:17:14"},"nativeSrc":"1832:24:14","nodeType":"YulFunctionCall","src":"1832:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1821:7:14","nodeType":"YulIdentifier","src":"1821:7:14"}]}]},"name":"cleanup_t_contract$_IERC20_$772","nativeSrc":"1752:110:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1793:5:14","nodeType":"YulTypedName","src":"1793:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1803:7:14","nodeType":"YulTypedName","src":"1803:7:14","type":""}],"src":"1752:110:14"},{"body":{"nativeSrc":"1925:93:14","nodeType":"YulBlock","src":"1925:93:14","statements":[{"body":{"nativeSrc":"1996:16:14","nodeType":"YulBlock","src":"1996:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2005:1:14","nodeType":"YulLiteral","src":"2005:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2008:1:14","nodeType":"YulLiteral","src":"2008:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1998:6:14","nodeType":"YulIdentifier","src":"1998:6:14"},"nativeSrc":"1998:12:14","nodeType":"YulFunctionCall","src":"1998:12:14"},"nativeSrc":"1998:12:14","nodeType":"YulExpressionStatement","src":"1998:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1948:5:14","nodeType":"YulIdentifier","src":"1948:5:14"},{"arguments":[{"name":"value","nativeSrc":"1987:5:14","nodeType":"YulIdentifier","src":"1987:5:14"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$772","nativeSrc":"1955:31:14","nodeType":"YulIdentifier","src":"1955:31:14"},"nativeSrc":"1955:38:14","nodeType":"YulFunctionCall","src":"1955:38:14"}],"functionName":{"name":"eq","nativeSrc":"1945:2:14","nodeType":"YulIdentifier","src":"1945:2:14"},"nativeSrc":"1945:49:14","nodeType":"YulFunctionCall","src":"1945:49:14"}],"functionName":{"name":"iszero","nativeSrc":"1938:6:14","nodeType":"YulIdentifier","src":"1938:6:14"},"nativeSrc":"1938:57:14","nodeType":"YulFunctionCall","src":"1938:57:14"},"nativeSrc":"1935:77:14","nodeType":"YulIf","src":"1935:77:14"}]},"name":"validator_revert_t_contract$_IERC20_$772","nativeSrc":"1868:150:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1918:5:14","nodeType":"YulTypedName","src":"1918:5:14","type":""}],"src":"1868:150:14"},{"body":{"nativeSrc":"2090:101:14","nodeType":"YulBlock","src":"2090:101:14","statements":[{"nativeSrc":"2100:29:14","nodeType":"YulAssignment","src":"2100:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:14","nodeType":"YulIdentifier","src":"2122:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:14","nodeType":"YulIdentifier","src":"2109:12:14"},"nativeSrc":"2109:20:14","nodeType":"YulFunctionCall","src":"2109:20:14"},"variableNames":[{"name":"value","nativeSrc":"2100:5:14","nodeType":"YulIdentifier","src":"2100:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2179:5:14","nodeType":"YulIdentifier","src":"2179:5:14"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$772","nativeSrc":"2138:40:14","nodeType":"YulIdentifier","src":"2138:40:14"},"nativeSrc":"2138:47:14","nodeType":"YulFunctionCall","src":"2138:47:14"},"nativeSrc":"2138:47:14","nodeType":"YulExpressionStatement","src":"2138:47:14"}]},"name":"abi_decode_t_contract$_IERC20_$772","nativeSrc":"2024:167:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:14","nodeType":"YulTypedName","src":"2068:6:14","type":""},{"name":"end","nativeSrc":"2076:3:14","nodeType":"YulTypedName","src":"2076:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:14","nodeType":"YulTypedName","src":"2084:5:14","type":""}],"src":"2024:167:14"},{"body":{"nativeSrc":"2277:277:14","nodeType":"YulBlock","src":"2277:277:14","statements":[{"body":{"nativeSrc":"2323:83:14","nodeType":"YulBlock","src":"2323:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2325:77:14","nodeType":"YulIdentifier","src":"2325:77:14"},"nativeSrc":"2325:79:14","nodeType":"YulFunctionCall","src":"2325:79:14"},"nativeSrc":"2325:79:14","nodeType":"YulExpressionStatement","src":"2325:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2298:7:14","nodeType":"YulIdentifier","src":"2298:7:14"},{"name":"headStart","nativeSrc":"2307:9:14","nodeType":"YulIdentifier","src":"2307:9:14"}],"functionName":{"name":"sub","nativeSrc":"2294:3:14","nodeType":"YulIdentifier","src":"2294:3:14"},"nativeSrc":"2294:23:14","nodeType":"YulFunctionCall","src":"2294:23:14"},{"kind":"number","nativeSrc":"2319:2:14","nodeType":"YulLiteral","src":"2319:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2290:3:14","nodeType":"YulIdentifier","src":"2290:3:14"},"nativeSrc":"2290:32:14","nodeType":"YulFunctionCall","src":"2290:32:14"},"nativeSrc":"2287:119:14","nodeType":"YulIf","src":"2287:119:14"},{"nativeSrc":"2416:131:14","nodeType":"YulBlock","src":"2416:131:14","statements":[{"nativeSrc":"2431:15:14","nodeType":"YulVariableDeclaration","src":"2431:15:14","value":{"kind":"number","nativeSrc":"2445:1:14","nodeType":"YulLiteral","src":"2445:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2435:6:14","nodeType":"YulTypedName","src":"2435:6:14","type":""}]},{"nativeSrc":"2460:77:14","nodeType":"YulAssignment","src":"2460:77:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2509:9:14","nodeType":"YulIdentifier","src":"2509:9:14"},{"name":"offset","nativeSrc":"2520:6:14","nodeType":"YulIdentifier","src":"2520:6:14"}],"functionName":{"name":"add","nativeSrc":"2505:3:14","nodeType":"YulIdentifier","src":"2505:3:14"},"nativeSrc":"2505:22:14","nodeType":"YulFunctionCall","src":"2505:22:14"},{"name":"dataEnd","nativeSrc":"2529:7:14","nodeType":"YulIdentifier","src":"2529:7:14"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$772","nativeSrc":"2470:34:14","nodeType":"YulIdentifier","src":"2470:34:14"},"nativeSrc":"2470:67:14","nodeType":"YulFunctionCall","src":"2470:67:14"},"variableNames":[{"name":"value0","nativeSrc":"2460:6:14","nodeType":"YulIdentifier","src":"2460:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$772","nativeSrc":"2197:357:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2247:9:14","nodeType":"YulTypedName","src":"2247:9:14","type":""},{"name":"dataEnd","nativeSrc":"2258:7:14","nodeType":"YulTypedName","src":"2258:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2270:6:14","nodeType":"YulTypedName","src":"2270:6:14","type":""}],"src":"2197:357:14"},{"body":{"nativeSrc":"2605:32:14","nodeType":"YulBlock","src":"2605:32:14","statements":[{"nativeSrc":"2615:16:14","nodeType":"YulAssignment","src":"2615:16:14","value":{"name":"value","nativeSrc":"2626:5:14","nodeType":"YulIdentifier","src":"2626:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"2615:7:14","nodeType":"YulIdentifier","src":"2615:7:14"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"2560:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2587:5:14","nodeType":"YulTypedName","src":"2587:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2597:7:14","nodeType":"YulTypedName","src":"2597:7:14","type":""}],"src":"2560:77:14"},{"body":{"nativeSrc":"2686:79:14","nodeType":"YulBlock","src":"2686:79:14","statements":[{"body":{"nativeSrc":"2743:16:14","nodeType":"YulBlock","src":"2743:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2752:1:14","nodeType":"YulLiteral","src":"2752:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2755:1:14","nodeType":"YulLiteral","src":"2755:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2745:6:14","nodeType":"YulIdentifier","src":"2745:6:14"},"nativeSrc":"2745:12:14","nodeType":"YulFunctionCall","src":"2745:12:14"},"nativeSrc":"2745:12:14","nodeType":"YulExpressionStatement","src":"2745:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2709:5:14","nodeType":"YulIdentifier","src":"2709:5:14"},{"arguments":[{"name":"value","nativeSrc":"2734:5:14","nodeType":"YulIdentifier","src":"2734:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"2716:17:14","nodeType":"YulIdentifier","src":"2716:17:14"},"nativeSrc":"2716:24:14","nodeType":"YulFunctionCall","src":"2716:24:14"}],"functionName":{"name":"eq","nativeSrc":"2706:2:14","nodeType":"YulIdentifier","src":"2706:2:14"},"nativeSrc":"2706:35:14","nodeType":"YulFunctionCall","src":"2706:35:14"}],"functionName":{"name":"iszero","nativeSrc":"2699:6:14","nodeType":"YulIdentifier","src":"2699:6:14"},"nativeSrc":"2699:43:14","nodeType":"YulFunctionCall","src":"2699:43:14"},"nativeSrc":"2696:63:14","nodeType":"YulIf","src":"2696:63:14"}]},"name":"validator_revert_t_bytes32","nativeSrc":"2643:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2679:5:14","nodeType":"YulTypedName","src":"2679:5:14","type":""}],"src":"2643:122:14"},{"body":{"nativeSrc":"2823:87:14","nodeType":"YulBlock","src":"2823:87:14","statements":[{"nativeSrc":"2833:29:14","nodeType":"YulAssignment","src":"2833:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"2855:6:14","nodeType":"YulIdentifier","src":"2855:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"2842:12:14","nodeType":"YulIdentifier","src":"2842:12:14"},"nativeSrc":"2842:20:14","nodeType":"YulFunctionCall","src":"2842:20:14"},"variableNames":[{"name":"value","nativeSrc":"2833:5:14","nodeType":"YulIdentifier","src":"2833:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2898:5:14","nodeType":"YulIdentifier","src":"2898:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"2871:26:14","nodeType":"YulIdentifier","src":"2871:26:14"},"nativeSrc":"2871:33:14","nodeType":"YulFunctionCall","src":"2871:33:14"},"nativeSrc":"2871:33:14","nodeType":"YulExpressionStatement","src":"2871:33:14"}]},"name":"abi_decode_t_bytes32","nativeSrc":"2771:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2801:6:14","nodeType":"YulTypedName","src":"2801:6:14","type":""},{"name":"end","nativeSrc":"2809:3:14","nodeType":"YulTypedName","src":"2809:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2817:5:14","nodeType":"YulTypedName","src":"2817:5:14","type":""}],"src":"2771:139:14"},{"body":{"nativeSrc":"2982:263:14","nodeType":"YulBlock","src":"2982:263:14","statements":[{"body":{"nativeSrc":"3028:83:14","nodeType":"YulBlock","src":"3028:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3030:77:14","nodeType":"YulIdentifier","src":"3030:77:14"},"nativeSrc":"3030:79:14","nodeType":"YulFunctionCall","src":"3030:79:14"},"nativeSrc":"3030:79:14","nodeType":"YulExpressionStatement","src":"3030:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3003:7:14","nodeType":"YulIdentifier","src":"3003:7:14"},{"name":"headStart","nativeSrc":"3012:9:14","nodeType":"YulIdentifier","src":"3012:9:14"}],"functionName":{"name":"sub","nativeSrc":"2999:3:14","nodeType":"YulIdentifier","src":"2999:3:14"},"nativeSrc":"2999:23:14","nodeType":"YulFunctionCall","src":"2999:23:14"},{"kind":"number","nativeSrc":"3024:2:14","nodeType":"YulLiteral","src":"3024:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2995:3:14","nodeType":"YulIdentifier","src":"2995:3:14"},"nativeSrc":"2995:32:14","nodeType":"YulFunctionCall","src":"2995:32:14"},"nativeSrc":"2992:119:14","nodeType":"YulIf","src":"2992:119:14"},{"nativeSrc":"3121:117:14","nodeType":"YulBlock","src":"3121:117:14","statements":[{"nativeSrc":"3136:15:14","nodeType":"YulVariableDeclaration","src":"3136:15:14","value":{"kind":"number","nativeSrc":"3150:1:14","nodeType":"YulLiteral","src":"3150:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3140:6:14","nodeType":"YulTypedName","src":"3140:6:14","type":""}]},{"nativeSrc":"3165:63:14","nodeType":"YulAssignment","src":"3165:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3200:9:14","nodeType":"YulIdentifier","src":"3200:9:14"},{"name":"offset","nativeSrc":"3211:6:14","nodeType":"YulIdentifier","src":"3211:6:14"}],"functionName":{"name":"add","nativeSrc":"3196:3:14","nodeType":"YulIdentifier","src":"3196:3:14"},"nativeSrc":"3196:22:14","nodeType":"YulFunctionCall","src":"3196:22:14"},{"name":"dataEnd","nativeSrc":"3220:7:14","nodeType":"YulIdentifier","src":"3220:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"3175:20:14","nodeType":"YulIdentifier","src":"3175:20:14"},"nativeSrc":"3175:53:14","nodeType":"YulFunctionCall","src":"3175:53:14"},"variableNames":[{"name":"value0","nativeSrc":"3165:6:14","nodeType":"YulIdentifier","src":"3165:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2916:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2952:9:14","nodeType":"YulTypedName","src":"2952:9:14","type":""},{"name":"dataEnd","nativeSrc":"2963:7:14","nodeType":"YulTypedName","src":"2963:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2975:6:14","nodeType":"YulTypedName","src":"2975:6:14","type":""}],"src":"2916:329:14"},{"body":{"nativeSrc":"3316:53:14","nodeType":"YulBlock","src":"3316:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3333:3:14","nodeType":"YulIdentifier","src":"3333:3:14"},{"arguments":[{"name":"value","nativeSrc":"3356:5:14","nodeType":"YulIdentifier","src":"3356:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"3338:17:14","nodeType":"YulIdentifier","src":"3338:17:14"},"nativeSrc":"3338:24:14","nodeType":"YulFunctionCall","src":"3338:24:14"}],"functionName":{"name":"mstore","nativeSrc":"3326:6:14","nodeType":"YulIdentifier","src":"3326:6:14"},"nativeSrc":"3326:37:14","nodeType":"YulFunctionCall","src":"3326:37:14"},"nativeSrc":"3326:37:14","nodeType":"YulExpressionStatement","src":"3326:37:14"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"3251:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3304:5:14","nodeType":"YulTypedName","src":"3304:5:14","type":""},{"name":"pos","nativeSrc":"3311:3:14","nodeType":"YulTypedName","src":"3311:3:14","type":""}],"src":"3251:118:14"},{"body":{"nativeSrc":"3473:124:14","nodeType":"YulBlock","src":"3473:124:14","statements":[{"nativeSrc":"3483:26:14","nodeType":"YulAssignment","src":"3483:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3495:9:14","nodeType":"YulIdentifier","src":"3495:9:14"},{"kind":"number","nativeSrc":"3506:2:14","nodeType":"YulLiteral","src":"3506:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3491:3:14","nodeType":"YulIdentifier","src":"3491:3:14"},"nativeSrc":"3491:18:14","nodeType":"YulFunctionCall","src":"3491:18:14"},"variableNames":[{"name":"tail","nativeSrc":"3483:4:14","nodeType":"YulIdentifier","src":"3483:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3563:6:14","nodeType":"YulIdentifier","src":"3563:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"3576:9:14","nodeType":"YulIdentifier","src":"3576:9:14"},{"kind":"number","nativeSrc":"3587:1:14","nodeType":"YulLiteral","src":"3587:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3572:3:14","nodeType":"YulIdentifier","src":"3572:3:14"},"nativeSrc":"3572:17:14","nodeType":"YulFunctionCall","src":"3572:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"3519:43:14","nodeType":"YulIdentifier","src":"3519:43:14"},"nativeSrc":"3519:71:14","nodeType":"YulFunctionCall","src":"3519:71:14"},"nativeSrc":"3519:71:14","nodeType":"YulExpressionStatement","src":"3519:71:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3375:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3445:9:14","nodeType":"YulTypedName","src":"3445:9:14","type":""},{"name":"value0","nativeSrc":"3457:6:14","nodeType":"YulTypedName","src":"3457:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3468:4:14","nodeType":"YulTypedName","src":"3468:4:14","type":""}],"src":"3375:222:14"},{"body":{"nativeSrc":"3646:79:14","nodeType":"YulBlock","src":"3646:79:14","statements":[{"body":{"nativeSrc":"3703:16:14","nodeType":"YulBlock","src":"3703:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3712:1:14","nodeType":"YulLiteral","src":"3712:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"3715:1:14","nodeType":"YulLiteral","src":"3715:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3705:6:14","nodeType":"YulIdentifier","src":"3705:6:14"},"nativeSrc":"3705:12:14","nodeType":"YulFunctionCall","src":"3705:12:14"},"nativeSrc":"3705:12:14","nodeType":"YulExpressionStatement","src":"3705:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3669:5:14","nodeType":"YulIdentifier","src":"3669:5:14"},{"arguments":[{"name":"value","nativeSrc":"3694:5:14","nodeType":"YulIdentifier","src":"3694:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3676:17:14","nodeType":"YulIdentifier","src":"3676:17:14"},"nativeSrc":"3676:24:14","nodeType":"YulFunctionCall","src":"3676:24:14"}],"functionName":{"name":"eq","nativeSrc":"3666:2:14","nodeType":"YulIdentifier","src":"3666:2:14"},"nativeSrc":"3666:35:14","nodeType":"YulFunctionCall","src":"3666:35:14"}],"functionName":{"name":"iszero","nativeSrc":"3659:6:14","nodeType":"YulIdentifier","src":"3659:6:14"},"nativeSrc":"3659:43:14","nodeType":"YulFunctionCall","src":"3659:43:14"},"nativeSrc":"3656:63:14","nodeType":"YulIf","src":"3656:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"3603:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3639:5:14","nodeType":"YulTypedName","src":"3639:5:14","type":""}],"src":"3603:122:14"},{"body":{"nativeSrc":"3783:87:14","nodeType":"YulBlock","src":"3783:87:14","statements":[{"nativeSrc":"3793:29:14","nodeType":"YulAssignment","src":"3793:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"3815:6:14","nodeType":"YulIdentifier","src":"3815:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"3802:12:14","nodeType":"YulIdentifier","src":"3802:12:14"},"nativeSrc":"3802:20:14","nodeType":"YulFunctionCall","src":"3802:20:14"},"variableNames":[{"name":"value","nativeSrc":"3793:5:14","nodeType":"YulIdentifier","src":"3793:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3858:5:14","nodeType":"YulIdentifier","src":"3858:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3831:26:14","nodeType":"YulIdentifier","src":"3831:26:14"},"nativeSrc":"3831:33:14","nodeType":"YulFunctionCall","src":"3831:33:14"},"nativeSrc":"3831:33:14","nodeType":"YulExpressionStatement","src":"3831:33:14"}]},"name":"abi_decode_t_address","nativeSrc":"3731:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3761:6:14","nodeType":"YulTypedName","src":"3761:6:14","type":""},{"name":"end","nativeSrc":"3769:3:14","nodeType":"YulTypedName","src":"3769:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3777:5:14","nodeType":"YulTypedName","src":"3777:5:14","type":""}],"src":"3731:139:14"},{"body":{"nativeSrc":"3959:391:14","nodeType":"YulBlock","src":"3959:391:14","statements":[{"body":{"nativeSrc":"4005:83:14","nodeType":"YulBlock","src":"4005:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4007:77:14","nodeType":"YulIdentifier","src":"4007:77:14"},"nativeSrc":"4007:79:14","nodeType":"YulFunctionCall","src":"4007:79:14"},"nativeSrc":"4007:79:14","nodeType":"YulExpressionStatement","src":"4007:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3980:7:14","nodeType":"YulIdentifier","src":"3980:7:14"},{"name":"headStart","nativeSrc":"3989:9:14","nodeType":"YulIdentifier","src":"3989:9:14"}],"functionName":{"name":"sub","nativeSrc":"3976:3:14","nodeType":"YulIdentifier","src":"3976:3:14"},"nativeSrc":"3976:23:14","nodeType":"YulFunctionCall","src":"3976:23:14"},{"kind":"number","nativeSrc":"4001:2:14","nodeType":"YulLiteral","src":"4001:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3972:3:14","nodeType":"YulIdentifier","src":"3972:3:14"},"nativeSrc":"3972:32:14","nodeType":"YulFunctionCall","src":"3972:32:14"},"nativeSrc":"3969:119:14","nodeType":"YulIf","src":"3969:119:14"},{"nativeSrc":"4098:117:14","nodeType":"YulBlock","src":"4098:117:14","statements":[{"nativeSrc":"4113:15:14","nodeType":"YulVariableDeclaration","src":"4113:15:14","value":{"kind":"number","nativeSrc":"4127:1:14","nodeType":"YulLiteral","src":"4127:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4117:6:14","nodeType":"YulTypedName","src":"4117:6:14","type":""}]},{"nativeSrc":"4142:63:14","nodeType":"YulAssignment","src":"4142:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4177:9:14","nodeType":"YulIdentifier","src":"4177:9:14"},{"name":"offset","nativeSrc":"4188:6:14","nodeType":"YulIdentifier","src":"4188:6:14"}],"functionName":{"name":"add","nativeSrc":"4173:3:14","nodeType":"YulIdentifier","src":"4173:3:14"},"nativeSrc":"4173:22:14","nodeType":"YulFunctionCall","src":"4173:22:14"},{"name":"dataEnd","nativeSrc":"4197:7:14","nodeType":"YulIdentifier","src":"4197:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"4152:20:14","nodeType":"YulIdentifier","src":"4152:20:14"},"nativeSrc":"4152:53:14","nodeType":"YulFunctionCall","src":"4152:53:14"},"variableNames":[{"name":"value0","nativeSrc":"4142:6:14","nodeType":"YulIdentifier","src":"4142:6:14"}]}]},{"nativeSrc":"4225:118:14","nodeType":"YulBlock","src":"4225:118:14","statements":[{"nativeSrc":"4240:16:14","nodeType":"YulVariableDeclaration","src":"4240:16:14","value":{"kind":"number","nativeSrc":"4254:2:14","nodeType":"YulLiteral","src":"4254:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4244:6:14","nodeType":"YulTypedName","src":"4244:6:14","type":""}]},{"nativeSrc":"4270:63:14","nodeType":"YulAssignment","src":"4270:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4305:9:14","nodeType":"YulIdentifier","src":"4305:9:14"},{"name":"offset","nativeSrc":"4316:6:14","nodeType":"YulIdentifier","src":"4316:6:14"}],"functionName":{"name":"add","nativeSrc":"4301:3:14","nodeType":"YulIdentifier","src":"4301:3:14"},"nativeSrc":"4301:22:14","nodeType":"YulFunctionCall","src":"4301:22:14"},{"name":"dataEnd","nativeSrc":"4325:7:14","nodeType":"YulIdentifier","src":"4325:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4280:20:14","nodeType":"YulIdentifier","src":"4280:20:14"},"nativeSrc":"4280:53:14","nodeType":"YulFunctionCall","src":"4280:53:14"},"variableNames":[{"name":"value1","nativeSrc":"4270:6:14","nodeType":"YulIdentifier","src":"4270:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"3876:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3921:9:14","nodeType":"YulTypedName","src":"3921:9:14","type":""},{"name":"dataEnd","nativeSrc":"3932:7:14","nodeType":"YulTypedName","src":"3932:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3944:6:14","nodeType":"YulTypedName","src":"3944:6:14","type":""},{"name":"value1","nativeSrc":"3952:6:14","nodeType":"YulTypedName","src":"3952:6:14","type":""}],"src":"3876:474:14"},{"body":{"nativeSrc":"4396:76:14","nodeType":"YulBlock","src":"4396:76:14","statements":[{"body":{"nativeSrc":"4450:16:14","nodeType":"YulBlock","src":"4450:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4459:1:14","nodeType":"YulLiteral","src":"4459:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4462:1:14","nodeType":"YulLiteral","src":"4462:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4452:6:14","nodeType":"YulIdentifier","src":"4452:6:14"},"nativeSrc":"4452:12:14","nodeType":"YulFunctionCall","src":"4452:12:14"},"nativeSrc":"4452:12:14","nodeType":"YulExpressionStatement","src":"4452:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4419:5:14","nodeType":"YulIdentifier","src":"4419:5:14"},{"arguments":[{"name":"value","nativeSrc":"4441:5:14","nodeType":"YulIdentifier","src":"4441:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4426:14:14","nodeType":"YulIdentifier","src":"4426:14:14"},"nativeSrc":"4426:21:14","nodeType":"YulFunctionCall","src":"4426:21:14"}],"functionName":{"name":"eq","nativeSrc":"4416:2:14","nodeType":"YulIdentifier","src":"4416:2:14"},"nativeSrc":"4416:32:14","nodeType":"YulFunctionCall","src":"4416:32:14"}],"functionName":{"name":"iszero","nativeSrc":"4409:6:14","nodeType":"YulIdentifier","src":"4409:6:14"},"nativeSrc":"4409:40:14","nodeType":"YulFunctionCall","src":"4409:40:14"},"nativeSrc":"4406:60:14","nodeType":"YulIf","src":"4406:60:14"}]},"name":"validator_revert_t_bool","nativeSrc":"4356:116:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4389:5:14","nodeType":"YulTypedName","src":"4389:5:14","type":""}],"src":"4356:116:14"},{"body":{"nativeSrc":"4527:84:14","nodeType":"YulBlock","src":"4527:84:14","statements":[{"nativeSrc":"4537:29:14","nodeType":"YulAssignment","src":"4537:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"4559:6:14","nodeType":"YulIdentifier","src":"4559:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"4546:12:14","nodeType":"YulIdentifier","src":"4546:12:14"},"nativeSrc":"4546:20:14","nodeType":"YulFunctionCall","src":"4546:20:14"},"variableNames":[{"name":"value","nativeSrc":"4537:5:14","nodeType":"YulIdentifier","src":"4537:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4599:5:14","nodeType":"YulIdentifier","src":"4599:5:14"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"4575:23:14","nodeType":"YulIdentifier","src":"4575:23:14"},"nativeSrc":"4575:30:14","nodeType":"YulFunctionCall","src":"4575:30:14"},"nativeSrc":"4575:30:14","nodeType":"YulExpressionStatement","src":"4575:30:14"}]},"name":"abi_decode_t_bool","nativeSrc":"4478:133:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4505:6:14","nodeType":"YulTypedName","src":"4505:6:14","type":""},{"name":"end","nativeSrc":"4513:3:14","nodeType":"YulTypedName","src":"4513:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4521:5:14","nodeType":"YulTypedName","src":"4521:5:14","type":""}],"src":"4478:133:14"},{"body":{"nativeSrc":"4680:260:14","nodeType":"YulBlock","src":"4680:260:14","statements":[{"body":{"nativeSrc":"4726:83:14","nodeType":"YulBlock","src":"4726:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4728:77:14","nodeType":"YulIdentifier","src":"4728:77:14"},"nativeSrc":"4728:79:14","nodeType":"YulFunctionCall","src":"4728:79:14"},"nativeSrc":"4728:79:14","nodeType":"YulExpressionStatement","src":"4728:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4701:7:14","nodeType":"YulIdentifier","src":"4701:7:14"},{"name":"headStart","nativeSrc":"4710:9:14","nodeType":"YulIdentifier","src":"4710:9:14"}],"functionName":{"name":"sub","nativeSrc":"4697:3:14","nodeType":"YulIdentifier","src":"4697:3:14"},"nativeSrc":"4697:23:14","nodeType":"YulFunctionCall","src":"4697:23:14"},{"kind":"number","nativeSrc":"4722:2:14","nodeType":"YulLiteral","src":"4722:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4693:3:14","nodeType":"YulIdentifier","src":"4693:3:14"},"nativeSrc":"4693:32:14","nodeType":"YulFunctionCall","src":"4693:32:14"},"nativeSrc":"4690:119:14","nodeType":"YulIf","src":"4690:119:14"},{"nativeSrc":"4819:114:14","nodeType":"YulBlock","src":"4819:114:14","statements":[{"nativeSrc":"4834:15:14","nodeType":"YulVariableDeclaration","src":"4834:15:14","value":{"kind":"number","nativeSrc":"4848:1:14","nodeType":"YulLiteral","src":"4848:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4838:6:14","nodeType":"YulTypedName","src":"4838:6:14","type":""}]},{"nativeSrc":"4863:60:14","nodeType":"YulAssignment","src":"4863:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4895:9:14","nodeType":"YulIdentifier","src":"4895:9:14"},{"name":"offset","nativeSrc":"4906:6:14","nodeType":"YulIdentifier","src":"4906:6:14"}],"functionName":{"name":"add","nativeSrc":"4891:3:14","nodeType":"YulIdentifier","src":"4891:3:14"},"nativeSrc":"4891:22:14","nodeType":"YulFunctionCall","src":"4891:22:14"},{"name":"dataEnd","nativeSrc":"4915:7:14","nodeType":"YulIdentifier","src":"4915:7:14"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"4873:17:14","nodeType":"YulIdentifier","src":"4873:17:14"},"nativeSrc":"4873:50:14","nodeType":"YulFunctionCall","src":"4873:50:14"},"variableNames":[{"name":"value0","nativeSrc":"4863:6:14","nodeType":"YulIdentifier","src":"4863:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool","nativeSrc":"4617:323:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4650:9:14","nodeType":"YulTypedName","src":"4650:9:14","type":""},{"name":"dataEnd","nativeSrc":"4661:7:14","nodeType":"YulTypedName","src":"4661:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4673:6:14","nodeType":"YulTypedName","src":"4673:6:14","type":""}],"src":"4617:323:14"},{"body":{"nativeSrc":"5011:53:14","nodeType":"YulBlock","src":"5011:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5028:3:14","nodeType":"YulIdentifier","src":"5028:3:14"},{"arguments":[{"name":"value","nativeSrc":"5051:5:14","nodeType":"YulIdentifier","src":"5051:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5033:17:14","nodeType":"YulIdentifier","src":"5033:17:14"},"nativeSrc":"5033:24:14","nodeType":"YulFunctionCall","src":"5033:24:14"}],"functionName":{"name":"mstore","nativeSrc":"5021:6:14","nodeType":"YulIdentifier","src":"5021:6:14"},"nativeSrc":"5021:37:14","nodeType":"YulFunctionCall","src":"5021:37:14"},"nativeSrc":"5021:37:14","nodeType":"YulExpressionStatement","src":"5021:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4946:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4999:5:14","nodeType":"YulTypedName","src":"4999:5:14","type":""},{"name":"pos","nativeSrc":"5006:3:14","nodeType":"YulTypedName","src":"5006:3:14","type":""}],"src":"4946:118:14"},{"body":{"nativeSrc":"5168:124:14","nodeType":"YulBlock","src":"5168:124:14","statements":[{"nativeSrc":"5178:26:14","nodeType":"YulAssignment","src":"5178:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"5190:9:14","nodeType":"YulIdentifier","src":"5190:9:14"},{"kind":"number","nativeSrc":"5201:2:14","nodeType":"YulLiteral","src":"5201:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5186:3:14","nodeType":"YulIdentifier","src":"5186:3:14"},"nativeSrc":"5186:18:14","nodeType":"YulFunctionCall","src":"5186:18:14"},"variableNames":[{"name":"tail","nativeSrc":"5178:4:14","nodeType":"YulIdentifier","src":"5178:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5258:6:14","nodeType":"YulIdentifier","src":"5258:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"5271:9:14","nodeType":"YulIdentifier","src":"5271:9:14"},{"kind":"number","nativeSrc":"5282:1:14","nodeType":"YulLiteral","src":"5282:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5267:3:14","nodeType":"YulIdentifier","src":"5267:3:14"},"nativeSrc":"5267:17:14","nodeType":"YulFunctionCall","src":"5267:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5214:43:14","nodeType":"YulIdentifier","src":"5214:43:14"},"nativeSrc":"5214:71:14","nodeType":"YulFunctionCall","src":"5214:71:14"},"nativeSrc":"5214:71:14","nodeType":"YulExpressionStatement","src":"5214:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5070:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5140:9:14","nodeType":"YulTypedName","src":"5140:9:14","type":""},{"name":"value0","nativeSrc":"5152:6:14","nodeType":"YulTypedName","src":"5152:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5163:4:14","nodeType":"YulTypedName","src":"5163:4:14","type":""}],"src":"5070:222:14"},{"body":{"nativeSrc":"5343:32:14","nodeType":"YulBlock","src":"5343:32:14","statements":[{"nativeSrc":"5353:16:14","nodeType":"YulAssignment","src":"5353:16:14","value":{"name":"value","nativeSrc":"5364:5:14","nodeType":"YulIdentifier","src":"5364:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"5353:7:14","nodeType":"YulIdentifier","src":"5353:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5298:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5325:5:14","nodeType":"YulTypedName","src":"5325:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5335:7:14","nodeType":"YulTypedName","src":"5335:7:14","type":""}],"src":"5298:77:14"},{"body":{"nativeSrc":"5424:79:14","nodeType":"YulBlock","src":"5424:79:14","statements":[{"body":{"nativeSrc":"5481:16:14","nodeType":"YulBlock","src":"5481:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5490:1:14","nodeType":"YulLiteral","src":"5490:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5493:1:14","nodeType":"YulLiteral","src":"5493:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5483:6:14","nodeType":"YulIdentifier","src":"5483:6:14"},"nativeSrc":"5483:12:14","nodeType":"YulFunctionCall","src":"5483:12:14"},"nativeSrc":"5483:12:14","nodeType":"YulExpressionStatement","src":"5483:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5447:5:14","nodeType":"YulIdentifier","src":"5447:5:14"},{"arguments":[{"name":"value","nativeSrc":"5472:5:14","nodeType":"YulIdentifier","src":"5472:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5454:17:14","nodeType":"YulIdentifier","src":"5454:17:14"},"nativeSrc":"5454:24:14","nodeType":"YulFunctionCall","src":"5454:24:14"}],"functionName":{"name":"eq","nativeSrc":"5444:2:14","nodeType":"YulIdentifier","src":"5444:2:14"},"nativeSrc":"5444:35:14","nodeType":"YulFunctionCall","src":"5444:35:14"}],"functionName":{"name":"iszero","nativeSrc":"5437:6:14","nodeType":"YulIdentifier","src":"5437:6:14"},"nativeSrc":"5437:43:14","nodeType":"YulFunctionCall","src":"5437:43:14"},"nativeSrc":"5434:63:14","nodeType":"YulIf","src":"5434:63:14"}]},"name":"validator_revert_t_uint256","nativeSrc":"5381:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5417:5:14","nodeType":"YulTypedName","src":"5417:5:14","type":""}],"src":"5381:122:14"},{"body":{"nativeSrc":"5561:87:14","nodeType":"YulBlock","src":"5561:87:14","statements":[{"nativeSrc":"5571:29:14","nodeType":"YulAssignment","src":"5571:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"5593:6:14","nodeType":"YulIdentifier","src":"5593:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"5580:12:14","nodeType":"YulIdentifier","src":"5580:12:14"},"nativeSrc":"5580:20:14","nodeType":"YulFunctionCall","src":"5580:20:14"},"variableNames":[{"name":"value","nativeSrc":"5571:5:14","nodeType":"YulIdentifier","src":"5571:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5636:5:14","nodeType":"YulIdentifier","src":"5636:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5609:26:14","nodeType":"YulIdentifier","src":"5609:26:14"},"nativeSrc":"5609:33:14","nodeType":"YulFunctionCall","src":"5609:33:14"},"nativeSrc":"5609:33:14","nodeType":"YulExpressionStatement","src":"5609:33:14"}]},"name":"abi_decode_t_uint256","nativeSrc":"5509:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5539:6:14","nodeType":"YulTypedName","src":"5539:6:14","type":""},{"name":"end","nativeSrc":"5547:3:14","nodeType":"YulTypedName","src":"5547:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5555:5:14","nodeType":"YulTypedName","src":"5555:5:14","type":""}],"src":"5509:139:14"},{"body":{"nativeSrc":"5737:391:14","nodeType":"YulBlock","src":"5737:391:14","statements":[{"body":{"nativeSrc":"5783:83:14","nodeType":"YulBlock","src":"5783:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5785:77:14","nodeType":"YulIdentifier","src":"5785:77:14"},"nativeSrc":"5785:79:14","nodeType":"YulFunctionCall","src":"5785:79:14"},"nativeSrc":"5785:79:14","nodeType":"YulExpressionStatement","src":"5785:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5758:7:14","nodeType":"YulIdentifier","src":"5758:7:14"},{"name":"headStart","nativeSrc":"5767:9:14","nodeType":"YulIdentifier","src":"5767:9:14"}],"functionName":{"name":"sub","nativeSrc":"5754:3:14","nodeType":"YulIdentifier","src":"5754:3:14"},"nativeSrc":"5754:23:14","nodeType":"YulFunctionCall","src":"5754:23:14"},{"kind":"number","nativeSrc":"5779:2:14","nodeType":"YulLiteral","src":"5779:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5750:3:14","nodeType":"YulIdentifier","src":"5750:3:14"},"nativeSrc":"5750:32:14","nodeType":"YulFunctionCall","src":"5750:32:14"},"nativeSrc":"5747:119:14","nodeType":"YulIf","src":"5747:119:14"},{"nativeSrc":"5876:117:14","nodeType":"YulBlock","src":"5876:117:14","statements":[{"nativeSrc":"5891:15:14","nodeType":"YulVariableDeclaration","src":"5891:15:14","value":{"kind":"number","nativeSrc":"5905:1:14","nodeType":"YulLiteral","src":"5905:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5895:6:14","nodeType":"YulTypedName","src":"5895:6:14","type":""}]},{"nativeSrc":"5920:63:14","nodeType":"YulAssignment","src":"5920:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5955:9:14","nodeType":"YulIdentifier","src":"5955:9:14"},{"name":"offset","nativeSrc":"5966:6:14","nodeType":"YulIdentifier","src":"5966:6:14"}],"functionName":{"name":"add","nativeSrc":"5951:3:14","nodeType":"YulIdentifier","src":"5951:3:14"},"nativeSrc":"5951:22:14","nodeType":"YulFunctionCall","src":"5951:22:14"},{"name":"dataEnd","nativeSrc":"5975:7:14","nodeType":"YulIdentifier","src":"5975:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5930:20:14","nodeType":"YulIdentifier","src":"5930:20:14"},"nativeSrc":"5930:53:14","nodeType":"YulFunctionCall","src":"5930:53:14"},"variableNames":[{"name":"value0","nativeSrc":"5920:6:14","nodeType":"YulIdentifier","src":"5920:6:14"}]}]},{"nativeSrc":"6003:118:14","nodeType":"YulBlock","src":"6003:118:14","statements":[{"nativeSrc":"6018:16:14","nodeType":"YulVariableDeclaration","src":"6018:16:14","value":{"kind":"number","nativeSrc":"6032:2:14","nodeType":"YulLiteral","src":"6032:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6022:6:14","nodeType":"YulTypedName","src":"6022:6:14","type":""}]},{"nativeSrc":"6048:63:14","nodeType":"YulAssignment","src":"6048:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6083:9:14","nodeType":"YulIdentifier","src":"6083:9:14"},{"name":"offset","nativeSrc":"6094:6:14","nodeType":"YulIdentifier","src":"6094:6:14"}],"functionName":{"name":"add","nativeSrc":"6079:3:14","nodeType":"YulIdentifier","src":"6079:3:14"},"nativeSrc":"6079:22:14","nodeType":"YulFunctionCall","src":"6079:22:14"},{"name":"dataEnd","nativeSrc":"6103:7:14","nodeType":"YulIdentifier","src":"6103:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6058:20:14","nodeType":"YulIdentifier","src":"6058:20:14"},"nativeSrc":"6058:53:14","nodeType":"YulFunctionCall","src":"6058:53:14"},"variableNames":[{"name":"value1","nativeSrc":"6048:6:14","nodeType":"YulIdentifier","src":"6048:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nativeSrc":"5654:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5699:9:14","nodeType":"YulTypedName","src":"5699:9:14","type":""},{"name":"dataEnd","nativeSrc":"5710:7:14","nodeType":"YulTypedName","src":"5710:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5722:6:14","nodeType":"YulTypedName","src":"5722:6:14","type":""},{"name":"value1","nativeSrc":"5730:6:14","nodeType":"YulTypedName","src":"5730:6:14","type":""}],"src":"5654:474:14"},{"body":{"nativeSrc":"6200:263:14","nodeType":"YulBlock","src":"6200:263:14","statements":[{"body":{"nativeSrc":"6246:83:14","nodeType":"YulBlock","src":"6246:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6248:77:14","nodeType":"YulIdentifier","src":"6248:77:14"},"nativeSrc":"6248:79:14","nodeType":"YulFunctionCall","src":"6248:79:14"},"nativeSrc":"6248:79:14","nodeType":"YulExpressionStatement","src":"6248:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6221:7:14","nodeType":"YulIdentifier","src":"6221:7:14"},{"name":"headStart","nativeSrc":"6230:9:14","nodeType":"YulIdentifier","src":"6230:9:14"}],"functionName":{"name":"sub","nativeSrc":"6217:3:14","nodeType":"YulIdentifier","src":"6217:3:14"},"nativeSrc":"6217:23:14","nodeType":"YulFunctionCall","src":"6217:23:14"},{"kind":"number","nativeSrc":"6242:2:14","nodeType":"YulLiteral","src":"6242:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6213:3:14","nodeType":"YulIdentifier","src":"6213:3:14"},"nativeSrc":"6213:32:14","nodeType":"YulFunctionCall","src":"6213:32:14"},"nativeSrc":"6210:119:14","nodeType":"YulIf","src":"6210:119:14"},{"nativeSrc":"6339:117:14","nodeType":"YulBlock","src":"6339:117:14","statements":[{"nativeSrc":"6354:15:14","nodeType":"YulVariableDeclaration","src":"6354:15:14","value":{"kind":"number","nativeSrc":"6368:1:14","nodeType":"YulLiteral","src":"6368:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6358:6:14","nodeType":"YulTypedName","src":"6358:6:14","type":""}]},{"nativeSrc":"6383:63:14","nodeType":"YulAssignment","src":"6383:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6418:9:14","nodeType":"YulIdentifier","src":"6418:9:14"},{"name":"offset","nativeSrc":"6429:6:14","nodeType":"YulIdentifier","src":"6429:6:14"}],"functionName":{"name":"add","nativeSrc":"6414:3:14","nodeType":"YulIdentifier","src":"6414:3:14"},"nativeSrc":"6414:22:14","nodeType":"YulFunctionCall","src":"6414:22:14"},{"name":"dataEnd","nativeSrc":"6438:7:14","nodeType":"YulIdentifier","src":"6438:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6393:20:14","nodeType":"YulIdentifier","src":"6393:20:14"},"nativeSrc":"6393:53:14","nodeType":"YulFunctionCall","src":"6393:53:14"},"variableNames":[{"name":"value0","nativeSrc":"6383:6:14","nodeType":"YulIdentifier","src":"6383:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"6134:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6170:9:14","nodeType":"YulTypedName","src":"6170:9:14","type":""},{"name":"dataEnd","nativeSrc":"6181:7:14","nodeType":"YulTypedName","src":"6181:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6193:6:14","nodeType":"YulTypedName","src":"6193:6:14","type":""}],"src":"6134:329:14"},{"body":{"nativeSrc":"6534:53:14","nodeType":"YulBlock","src":"6534:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6551:3:14","nodeType":"YulIdentifier","src":"6551:3:14"},{"arguments":[{"name":"value","nativeSrc":"6574:5:14","nodeType":"YulIdentifier","src":"6574:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6556:17:14","nodeType":"YulIdentifier","src":"6556:17:14"},"nativeSrc":"6556:24:14","nodeType":"YulFunctionCall","src":"6556:24:14"}],"functionName":{"name":"mstore","nativeSrc":"6544:6:14","nodeType":"YulIdentifier","src":"6544:6:14"},"nativeSrc":"6544:37:14","nodeType":"YulFunctionCall","src":"6544:37:14"},"nativeSrc":"6544:37:14","nodeType":"YulExpressionStatement","src":"6544:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6469:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6522:5:14","nodeType":"YulTypedName","src":"6522:5:14","type":""},{"name":"pos","nativeSrc":"6529:3:14","nodeType":"YulTypedName","src":"6529:3:14","type":""}],"src":"6469:118:14"},{"body":{"nativeSrc":"6691:124:14","nodeType":"YulBlock","src":"6691:124:14","statements":[{"nativeSrc":"6701:26:14","nodeType":"YulAssignment","src":"6701:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"6713:9:14","nodeType":"YulIdentifier","src":"6713:9:14"},{"kind":"number","nativeSrc":"6724:2:14","nodeType":"YulLiteral","src":"6724:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6709:3:14","nodeType":"YulIdentifier","src":"6709:3:14"},"nativeSrc":"6709:18:14","nodeType":"YulFunctionCall","src":"6709:18:14"},"variableNames":[{"name":"tail","nativeSrc":"6701:4:14","nodeType":"YulIdentifier","src":"6701:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6781:6:14","nodeType":"YulIdentifier","src":"6781:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"6794:9:14","nodeType":"YulIdentifier","src":"6794:9:14"},{"kind":"number","nativeSrc":"6805:1:14","nodeType":"YulLiteral","src":"6805:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6790:3:14","nodeType":"YulIdentifier","src":"6790:3:14"},"nativeSrc":"6790:17:14","nodeType":"YulFunctionCall","src":"6790:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6737:43:14","nodeType":"YulIdentifier","src":"6737:43:14"},"nativeSrc":"6737:71:14","nodeType":"YulFunctionCall","src":"6737:71:14"},"nativeSrc":"6737:71:14","nodeType":"YulExpressionStatement","src":"6737:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6593:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6663:9:14","nodeType":"YulTypedName","src":"6663:9:14","type":""},{"name":"value0","nativeSrc":"6675:6:14","nodeType":"YulTypedName","src":"6675:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6686:4:14","nodeType":"YulTypedName","src":"6686:4:14","type":""}],"src":"6593:222:14"},{"body":{"nativeSrc":"6887:263:14","nodeType":"YulBlock","src":"6887:263:14","statements":[{"body":{"nativeSrc":"6933:83:14","nodeType":"YulBlock","src":"6933:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6935:77:14","nodeType":"YulIdentifier","src":"6935:77:14"},"nativeSrc":"6935:79:14","nodeType":"YulFunctionCall","src":"6935:79:14"},"nativeSrc":"6935:79:14","nodeType":"YulExpressionStatement","src":"6935:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6908:7:14","nodeType":"YulIdentifier","src":"6908:7:14"},{"name":"headStart","nativeSrc":"6917:9:14","nodeType":"YulIdentifier","src":"6917:9:14"}],"functionName":{"name":"sub","nativeSrc":"6904:3:14","nodeType":"YulIdentifier","src":"6904:3:14"},"nativeSrc":"6904:23:14","nodeType":"YulFunctionCall","src":"6904:23:14"},{"kind":"number","nativeSrc":"6929:2:14","nodeType":"YulLiteral","src":"6929:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6900:3:14","nodeType":"YulIdentifier","src":"6900:3:14"},"nativeSrc":"6900:32:14","nodeType":"YulFunctionCall","src":"6900:32:14"},"nativeSrc":"6897:119:14","nodeType":"YulIf","src":"6897:119:14"},{"nativeSrc":"7026:117:14","nodeType":"YulBlock","src":"7026:117:14","statements":[{"nativeSrc":"7041:15:14","nodeType":"YulVariableDeclaration","src":"7041:15:14","value":{"kind":"number","nativeSrc":"7055:1:14","nodeType":"YulLiteral","src":"7055:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7045:6:14","nodeType":"YulTypedName","src":"7045:6:14","type":""}]},{"nativeSrc":"7070:63:14","nodeType":"YulAssignment","src":"7070:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7105:9:14","nodeType":"YulIdentifier","src":"7105:9:14"},{"name":"offset","nativeSrc":"7116:6:14","nodeType":"YulIdentifier","src":"7116:6:14"}],"functionName":{"name":"add","nativeSrc":"7101:3:14","nodeType":"YulIdentifier","src":"7101:3:14"},"nativeSrc":"7101:22:14","nodeType":"YulFunctionCall","src":"7101:22:14"},{"name":"dataEnd","nativeSrc":"7125:7:14","nodeType":"YulIdentifier","src":"7125:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7080:20:14","nodeType":"YulIdentifier","src":"7080:20:14"},"nativeSrc":"7080:53:14","nodeType":"YulFunctionCall","src":"7080:53:14"},"variableNames":[{"name":"value0","nativeSrc":"7070:6:14","nodeType":"YulIdentifier","src":"7070:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"6821:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6857:9:14","nodeType":"YulTypedName","src":"6857:9:14","type":""},{"name":"dataEnd","nativeSrc":"6868:7:14","nodeType":"YulTypedName","src":"6868:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6880:6:14","nodeType":"YulTypedName","src":"6880:6:14","type":""}],"src":"6821:329:14"},{"body":{"nativeSrc":"7239:391:14","nodeType":"YulBlock","src":"7239:391:14","statements":[{"body":{"nativeSrc":"7285:83:14","nodeType":"YulBlock","src":"7285:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7287:77:14","nodeType":"YulIdentifier","src":"7287:77:14"},"nativeSrc":"7287:79:14","nodeType":"YulFunctionCall","src":"7287:79:14"},"nativeSrc":"7287:79:14","nodeType":"YulExpressionStatement","src":"7287:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7260:7:14","nodeType":"YulIdentifier","src":"7260:7:14"},{"name":"headStart","nativeSrc":"7269:9:14","nodeType":"YulIdentifier","src":"7269:9:14"}],"functionName":{"name":"sub","nativeSrc":"7256:3:14","nodeType":"YulIdentifier","src":"7256:3:14"},"nativeSrc":"7256:23:14","nodeType":"YulFunctionCall","src":"7256:23:14"},{"kind":"number","nativeSrc":"7281:2:14","nodeType":"YulLiteral","src":"7281:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7252:3:14","nodeType":"YulIdentifier","src":"7252:3:14"},"nativeSrc":"7252:32:14","nodeType":"YulFunctionCall","src":"7252:32:14"},"nativeSrc":"7249:119:14","nodeType":"YulIf","src":"7249:119:14"},{"nativeSrc":"7378:117:14","nodeType":"YulBlock","src":"7378:117:14","statements":[{"nativeSrc":"7393:15:14","nodeType":"YulVariableDeclaration","src":"7393:15:14","value":{"kind":"number","nativeSrc":"7407:1:14","nodeType":"YulLiteral","src":"7407:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7397:6:14","nodeType":"YulTypedName","src":"7397:6:14","type":""}]},{"nativeSrc":"7422:63:14","nodeType":"YulAssignment","src":"7422:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7457:9:14","nodeType":"YulIdentifier","src":"7457:9:14"},{"name":"offset","nativeSrc":"7468:6:14","nodeType":"YulIdentifier","src":"7468:6:14"}],"functionName":{"name":"add","nativeSrc":"7453:3:14","nodeType":"YulIdentifier","src":"7453:3:14"},"nativeSrc":"7453:22:14","nodeType":"YulFunctionCall","src":"7453:22:14"},{"name":"dataEnd","nativeSrc":"7477:7:14","nodeType":"YulIdentifier","src":"7477:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7432:20:14","nodeType":"YulIdentifier","src":"7432:20:14"},"nativeSrc":"7432:53:14","nodeType":"YulFunctionCall","src":"7432:53:14"},"variableNames":[{"name":"value0","nativeSrc":"7422:6:14","nodeType":"YulIdentifier","src":"7422:6:14"}]}]},{"nativeSrc":"7505:118:14","nodeType":"YulBlock","src":"7505:118:14","statements":[{"nativeSrc":"7520:16:14","nodeType":"YulVariableDeclaration","src":"7520:16:14","value":{"kind":"number","nativeSrc":"7534:2:14","nodeType":"YulLiteral","src":"7534:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7524:6:14","nodeType":"YulTypedName","src":"7524:6:14","type":""}]},{"nativeSrc":"7550:63:14","nodeType":"YulAssignment","src":"7550:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7585:9:14","nodeType":"YulIdentifier","src":"7585:9:14"},{"name":"offset","nativeSrc":"7596:6:14","nodeType":"YulIdentifier","src":"7596:6:14"}],"functionName":{"name":"add","nativeSrc":"7581:3:14","nodeType":"YulIdentifier","src":"7581:3:14"},"nativeSrc":"7581:22:14","nodeType":"YulFunctionCall","src":"7581:22:14"},{"name":"dataEnd","nativeSrc":"7605:7:14","nodeType":"YulIdentifier","src":"7605:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7560:20:14","nodeType":"YulIdentifier","src":"7560:20:14"},"nativeSrc":"7560:53:14","nodeType":"YulFunctionCall","src":"7560:53:14"},"variableNames":[{"name":"value1","nativeSrc":"7550:6:14","nodeType":"YulIdentifier","src":"7550:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"7156:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7201:9:14","nodeType":"YulTypedName","src":"7201:9:14","type":""},{"name":"dataEnd","nativeSrc":"7212:7:14","nodeType":"YulTypedName","src":"7212:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7224:6:14","nodeType":"YulTypedName","src":"7224:6:14","type":""},{"name":"value1","nativeSrc":"7232:6:14","nodeType":"YulTypedName","src":"7232:6:14","type":""}],"src":"7156:474:14"},{"body":{"nativeSrc":"7732:73:14","nodeType":"YulBlock","src":"7732:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7749:3:14","nodeType":"YulIdentifier","src":"7749:3:14"},{"name":"length","nativeSrc":"7754:6:14","nodeType":"YulIdentifier","src":"7754:6:14"}],"functionName":{"name":"mstore","nativeSrc":"7742:6:14","nodeType":"YulIdentifier","src":"7742:6:14"},"nativeSrc":"7742:19:14","nodeType":"YulFunctionCall","src":"7742:19:14"},"nativeSrc":"7742:19:14","nodeType":"YulExpressionStatement","src":"7742:19:14"},{"nativeSrc":"7770:29:14","nodeType":"YulAssignment","src":"7770:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"7789:3:14","nodeType":"YulIdentifier","src":"7789:3:14"},{"kind":"number","nativeSrc":"7794:4:14","nodeType":"YulLiteral","src":"7794:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7785:3:14","nodeType":"YulIdentifier","src":"7785:3:14"},"nativeSrc":"7785:14:14","nodeType":"YulFunctionCall","src":"7785:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"7770:11:14","nodeType":"YulIdentifier","src":"7770:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7636:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7704:3:14","nodeType":"YulTypedName","src":"7704:3:14","type":""},{"name":"length","nativeSrc":"7709:6:14","nodeType":"YulTypedName","src":"7709:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7720:11:14","nodeType":"YulTypedName","src":"7720:11:14","type":""}],"src":"7636:169:14"},{"body":{"nativeSrc":"7917:70:14","nodeType":"YulBlock","src":"7917:70:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7939:6:14","nodeType":"YulIdentifier","src":"7939:6:14"},{"kind":"number","nativeSrc":"7947:1:14","nodeType":"YulLiteral","src":"7947:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7935:3:14","nodeType":"YulIdentifier","src":"7935:3:14"},"nativeSrc":"7935:14:14","nodeType":"YulFunctionCall","src":"7935:14:14"},{"hexValue":"43616c6c6572206973206e6f7420612077697468647261776572","kind":"string","nativeSrc":"7951:28:14","nodeType":"YulLiteral","src":"7951:28:14","type":"","value":"Caller is not a withdrawer"}],"functionName":{"name":"mstore","nativeSrc":"7928:6:14","nodeType":"YulIdentifier","src":"7928:6:14"},"nativeSrc":"7928:52:14","nodeType":"YulFunctionCall","src":"7928:52:14"},"nativeSrc":"7928:52:14","nodeType":"YulExpressionStatement","src":"7928:52:14"}]},"name":"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","nativeSrc":"7811:176:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7909:6:14","nodeType":"YulTypedName","src":"7909:6:14","type":""}],"src":"7811:176:14"},{"body":{"nativeSrc":"8139:220:14","nodeType":"YulBlock","src":"8139:220:14","statements":[{"nativeSrc":"8149:74:14","nodeType":"YulAssignment","src":"8149:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"8215:3:14","nodeType":"YulIdentifier","src":"8215:3:14"},{"kind":"number","nativeSrc":"8220:2:14","nodeType":"YulLiteral","src":"8220:2:14","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8156:58:14","nodeType":"YulIdentifier","src":"8156:58:14"},"nativeSrc":"8156:67:14","nodeType":"YulFunctionCall","src":"8156:67:14"},"variableNames":[{"name":"pos","nativeSrc":"8149:3:14","nodeType":"YulIdentifier","src":"8149:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8321:3:14","nodeType":"YulIdentifier","src":"8321:3:14"}],"functionName":{"name":"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","nativeSrc":"8232:88:14","nodeType":"YulIdentifier","src":"8232:88:14"},"nativeSrc":"8232:93:14","nodeType":"YulFunctionCall","src":"8232:93:14"},"nativeSrc":"8232:93:14","nodeType":"YulExpressionStatement","src":"8232:93:14"},{"nativeSrc":"8334:19:14","nodeType":"YulAssignment","src":"8334:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"8345:3:14","nodeType":"YulIdentifier","src":"8345:3:14"},{"kind":"number","nativeSrc":"8350:2:14","nodeType":"YulLiteral","src":"8350:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8341:3:14","nodeType":"YulIdentifier","src":"8341:3:14"},"nativeSrc":"8341:12:14","nodeType":"YulFunctionCall","src":"8341:12:14"},"variableNames":[{"name":"end","nativeSrc":"8334:3:14","nodeType":"YulIdentifier","src":"8334:3:14"}]}]},"name":"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack","nativeSrc":"7993:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8127:3:14","nodeType":"YulTypedName","src":"8127:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8135:3:14","nodeType":"YulTypedName","src":"8135:3:14","type":""}],"src":"7993:366:14"},{"body":{"nativeSrc":"8536:248:14","nodeType":"YulBlock","src":"8536:248:14","statements":[{"nativeSrc":"8546:26:14","nodeType":"YulAssignment","src":"8546:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"8558:9:14","nodeType":"YulIdentifier","src":"8558:9:14"},{"kind":"number","nativeSrc":"8569:2:14","nodeType":"YulLiteral","src":"8569:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8554:3:14","nodeType":"YulIdentifier","src":"8554:3:14"},"nativeSrc":"8554:18:14","nodeType":"YulFunctionCall","src":"8554:18:14"},"variableNames":[{"name":"tail","nativeSrc":"8546:4:14","nodeType":"YulIdentifier","src":"8546:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8593:9:14","nodeType":"YulIdentifier","src":"8593:9:14"},{"kind":"number","nativeSrc":"8604:1:14","nodeType":"YulLiteral","src":"8604:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8589:3:14","nodeType":"YulIdentifier","src":"8589:3:14"},"nativeSrc":"8589:17:14","nodeType":"YulFunctionCall","src":"8589:17:14"},{"arguments":[{"name":"tail","nativeSrc":"8612:4:14","nodeType":"YulIdentifier","src":"8612:4:14"},{"name":"headStart","nativeSrc":"8618:9:14","nodeType":"YulIdentifier","src":"8618:9:14"}],"functionName":{"name":"sub","nativeSrc":"8608:3:14","nodeType":"YulIdentifier","src":"8608:3:14"},"nativeSrc":"8608:20:14","nodeType":"YulFunctionCall","src":"8608:20:14"}],"functionName":{"name":"mstore","nativeSrc":"8582:6:14","nodeType":"YulIdentifier","src":"8582:6:14"},"nativeSrc":"8582:47:14","nodeType":"YulFunctionCall","src":"8582:47:14"},"nativeSrc":"8582:47:14","nodeType":"YulExpressionStatement","src":"8582:47:14"},{"nativeSrc":"8638:139:14","nodeType":"YulAssignment","src":"8638:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"8772:4:14","nodeType":"YulIdentifier","src":"8772:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack","nativeSrc":"8646:124:14","nodeType":"YulIdentifier","src":"8646:124:14"},"nativeSrc":"8646:131:14","nodeType":"YulFunctionCall","src":"8646:131:14"},"variableNames":[{"name":"tail","nativeSrc":"8638:4:14","nodeType":"YulIdentifier","src":"8638:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8365:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8516:9:14","nodeType":"YulTypedName","src":"8516:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8531:4:14","nodeType":"YulTypedName","src":"8531:4:14","type":""}],"src":"8365:419:14"},{"body":{"nativeSrc":"8916:206:14","nodeType":"YulBlock","src":"8916:206:14","statements":[{"nativeSrc":"8926:26:14","nodeType":"YulAssignment","src":"8926:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"8938:9:14","nodeType":"YulIdentifier","src":"8938:9:14"},{"kind":"number","nativeSrc":"8949:2:14","nodeType":"YulLiteral","src":"8949:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8934:3:14","nodeType":"YulIdentifier","src":"8934:3:14"},"nativeSrc":"8934:18:14","nodeType":"YulFunctionCall","src":"8934:18:14"},"variableNames":[{"name":"tail","nativeSrc":"8926:4:14","nodeType":"YulIdentifier","src":"8926:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9006:6:14","nodeType":"YulIdentifier","src":"9006:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9019:9:14","nodeType":"YulIdentifier","src":"9019:9:14"},{"kind":"number","nativeSrc":"9030:1:14","nodeType":"YulLiteral","src":"9030:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9015:3:14","nodeType":"YulIdentifier","src":"9015:3:14"},"nativeSrc":"9015:17:14","nodeType":"YulFunctionCall","src":"9015:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8962:43:14","nodeType":"YulIdentifier","src":"8962:43:14"},"nativeSrc":"8962:71:14","nodeType":"YulFunctionCall","src":"8962:71:14"},"nativeSrc":"8962:71:14","nodeType":"YulExpressionStatement","src":"8962:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9087:6:14","nodeType":"YulIdentifier","src":"9087:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9100:9:14","nodeType":"YulIdentifier","src":"9100:9:14"},{"kind":"number","nativeSrc":"9111:2:14","nodeType":"YulLiteral","src":"9111:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9096:3:14","nodeType":"YulIdentifier","src":"9096:3:14"},"nativeSrc":"9096:18:14","nodeType":"YulFunctionCall","src":"9096:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9043:43:14","nodeType":"YulIdentifier","src":"9043:43:14"},"nativeSrc":"9043:72:14","nodeType":"YulFunctionCall","src":"9043:72:14"},"nativeSrc":"9043:72:14","nodeType":"YulExpressionStatement","src":"9043:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"8790:332:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8880:9:14","nodeType":"YulTypedName","src":"8880:9:14","type":""},{"name":"value1","nativeSrc":"8892:6:14","nodeType":"YulTypedName","src":"8892:6:14","type":""},{"name":"value0","nativeSrc":"8900:6:14","nodeType":"YulTypedName","src":"8900:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8911:4:14","nodeType":"YulTypedName","src":"8911:4:14","type":""}],"src":"8790:332:14"},{"body":{"nativeSrc":"9188:77:14","nodeType":"YulBlock","src":"9188:77:14","statements":[{"nativeSrc":"9198:22:14","nodeType":"YulAssignment","src":"9198:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"9213:6:14","nodeType":"YulIdentifier","src":"9213:6:14"}],"functionName":{"name":"mload","nativeSrc":"9207:5:14","nodeType":"YulIdentifier","src":"9207:5:14"},"nativeSrc":"9207:13:14","nodeType":"YulFunctionCall","src":"9207:13:14"},"variableNames":[{"name":"value","nativeSrc":"9198:5:14","nodeType":"YulIdentifier","src":"9198:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9253:5:14","nodeType":"YulIdentifier","src":"9253:5:14"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"9229:23:14","nodeType":"YulIdentifier","src":"9229:23:14"},"nativeSrc":"9229:30:14","nodeType":"YulFunctionCall","src":"9229:30:14"},"nativeSrc":"9229:30:14","nodeType":"YulExpressionStatement","src":"9229:30:14"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"9128:137:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9166:6:14","nodeType":"YulTypedName","src":"9166:6:14","type":""},{"name":"end","nativeSrc":"9174:3:14","nodeType":"YulTypedName","src":"9174:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9182:5:14","nodeType":"YulTypedName","src":"9182:5:14","type":""}],"src":"9128:137:14"},{"body":{"nativeSrc":"9345:271:14","nodeType":"YulBlock","src":"9345:271:14","statements":[{"body":{"nativeSrc":"9391:83:14","nodeType":"YulBlock","src":"9391:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9393:77:14","nodeType":"YulIdentifier","src":"9393:77:14"},"nativeSrc":"9393:79:14","nodeType":"YulFunctionCall","src":"9393:79:14"},"nativeSrc":"9393:79:14","nodeType":"YulExpressionStatement","src":"9393:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9366:7:14","nodeType":"YulIdentifier","src":"9366:7:14"},{"name":"headStart","nativeSrc":"9375:9:14","nodeType":"YulIdentifier","src":"9375:9:14"}],"functionName":{"name":"sub","nativeSrc":"9362:3:14","nodeType":"YulIdentifier","src":"9362:3:14"},"nativeSrc":"9362:23:14","nodeType":"YulFunctionCall","src":"9362:23:14"},{"kind":"number","nativeSrc":"9387:2:14","nodeType":"YulLiteral","src":"9387:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9358:3:14","nodeType":"YulIdentifier","src":"9358:3:14"},"nativeSrc":"9358:32:14","nodeType":"YulFunctionCall","src":"9358:32:14"},"nativeSrc":"9355:119:14","nodeType":"YulIf","src":"9355:119:14"},{"nativeSrc":"9484:125:14","nodeType":"YulBlock","src":"9484:125:14","statements":[{"nativeSrc":"9499:15:14","nodeType":"YulVariableDeclaration","src":"9499:15:14","value":{"kind":"number","nativeSrc":"9513:1:14","nodeType":"YulLiteral","src":"9513:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9503:6:14","nodeType":"YulTypedName","src":"9503:6:14","type":""}]},{"nativeSrc":"9528:71:14","nodeType":"YulAssignment","src":"9528:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9571:9:14","nodeType":"YulIdentifier","src":"9571:9:14"},{"name":"offset","nativeSrc":"9582:6:14","nodeType":"YulIdentifier","src":"9582:6:14"}],"functionName":{"name":"add","nativeSrc":"9567:3:14","nodeType":"YulIdentifier","src":"9567:3:14"},"nativeSrc":"9567:22:14","nodeType":"YulFunctionCall","src":"9567:22:14"},{"name":"dataEnd","nativeSrc":"9591:7:14","nodeType":"YulIdentifier","src":"9591:7:14"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"9538:28:14","nodeType":"YulIdentifier","src":"9538:28:14"},"nativeSrc":"9538:61:14","nodeType":"YulFunctionCall","src":"9538:61:14"},"variableNames":[{"name":"value0","nativeSrc":"9528:6:14","nodeType":"YulIdentifier","src":"9528:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9271:345:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9315:9:14","nodeType":"YulTypedName","src":"9315:9:14","type":""},{"name":"dataEnd","nativeSrc":"9326:7:14","nodeType":"YulTypedName","src":"9326:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9338:6:14","nodeType":"YulTypedName","src":"9338:6:14","type":""}],"src":"9271:345:14"},{"body":{"nativeSrc":"9776:288:14","nodeType":"YulBlock","src":"9776:288:14","statements":[{"nativeSrc":"9786:26:14","nodeType":"YulAssignment","src":"9786:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"9798:9:14","nodeType":"YulIdentifier","src":"9798:9:14"},{"kind":"number","nativeSrc":"9809:2:14","nodeType":"YulLiteral","src":"9809:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9794:3:14","nodeType":"YulIdentifier","src":"9794:3:14"},"nativeSrc":"9794:18:14","nodeType":"YulFunctionCall","src":"9794:18:14"},"variableNames":[{"name":"tail","nativeSrc":"9786:4:14","nodeType":"YulIdentifier","src":"9786:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9866:6:14","nodeType":"YulIdentifier","src":"9866:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9879:9:14","nodeType":"YulIdentifier","src":"9879:9:14"},{"kind":"number","nativeSrc":"9890:1:14","nodeType":"YulLiteral","src":"9890:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9875:3:14","nodeType":"YulIdentifier","src":"9875:3:14"},"nativeSrc":"9875:17:14","nodeType":"YulFunctionCall","src":"9875:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9822:43:14","nodeType":"YulIdentifier","src":"9822:43:14"},"nativeSrc":"9822:71:14","nodeType":"YulFunctionCall","src":"9822:71:14"},"nativeSrc":"9822:71:14","nodeType":"YulExpressionStatement","src":"9822:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9947:6:14","nodeType":"YulIdentifier","src":"9947:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9960:9:14","nodeType":"YulIdentifier","src":"9960:9:14"},{"kind":"number","nativeSrc":"9971:2:14","nodeType":"YulLiteral","src":"9971:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9956:3:14","nodeType":"YulIdentifier","src":"9956:3:14"},"nativeSrc":"9956:18:14","nodeType":"YulFunctionCall","src":"9956:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9903:43:14","nodeType":"YulIdentifier","src":"9903:43:14"},"nativeSrc":"9903:72:14","nodeType":"YulFunctionCall","src":"9903:72:14"},"nativeSrc":"9903:72:14","nodeType":"YulExpressionStatement","src":"9903:72:14"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10029:6:14","nodeType":"YulIdentifier","src":"10029:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"10042:9:14","nodeType":"YulIdentifier","src":"10042:9:14"},{"kind":"number","nativeSrc":"10053:2:14","nodeType":"YulLiteral","src":"10053:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10038:3:14","nodeType":"YulIdentifier","src":"10038:3:14"},"nativeSrc":"10038:18:14","nodeType":"YulFunctionCall","src":"10038:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9985:43:14","nodeType":"YulIdentifier","src":"9985:43:14"},"nativeSrc":"9985:72:14","nodeType":"YulFunctionCall","src":"9985:72:14"},"nativeSrc":"9985:72:14","nodeType":"YulExpressionStatement","src":"9985:72:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"9622:442:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9732:9:14","nodeType":"YulTypedName","src":"9732:9:14","type":""},{"name":"value2","nativeSrc":"9744:6:14","nodeType":"YulTypedName","src":"9744:6:14","type":""},{"name":"value1","nativeSrc":"9752:6:14","nodeType":"YulTypedName","src":"9752:6:14","type":""},{"name":"value0","nativeSrc":"9760:6:14","nodeType":"YulTypedName","src":"9760:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9771:4:14","nodeType":"YulTypedName","src":"9771:4:14","type":""}],"src":"9622:442:14"},{"body":{"nativeSrc":"10196:206:14","nodeType":"YulBlock","src":"10196:206:14","statements":[{"nativeSrc":"10206:26:14","nodeType":"YulAssignment","src":"10206:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"10218:9:14","nodeType":"YulIdentifier","src":"10218:9:14"},{"kind":"number","nativeSrc":"10229:2:14","nodeType":"YulLiteral","src":"10229:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10214:3:14","nodeType":"YulIdentifier","src":"10214:3:14"},"nativeSrc":"10214:18:14","nodeType":"YulFunctionCall","src":"10214:18:14"},"variableNames":[{"name":"tail","nativeSrc":"10206:4:14","nodeType":"YulIdentifier","src":"10206:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10286:6:14","nodeType":"YulIdentifier","src":"10286:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"10299:9:14","nodeType":"YulIdentifier","src":"10299:9:14"},{"kind":"number","nativeSrc":"10310:1:14","nodeType":"YulLiteral","src":"10310:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10295:3:14","nodeType":"YulIdentifier","src":"10295:3:14"},"nativeSrc":"10295:17:14","nodeType":"YulFunctionCall","src":"10295:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10242:43:14","nodeType":"YulIdentifier","src":"10242:43:14"},"nativeSrc":"10242:71:14","nodeType":"YulFunctionCall","src":"10242:71:14"},"nativeSrc":"10242:71:14","nodeType":"YulExpressionStatement","src":"10242:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10367:6:14","nodeType":"YulIdentifier","src":"10367:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"10380:9:14","nodeType":"YulIdentifier","src":"10380:9:14"},{"kind":"number","nativeSrc":"10391:2:14","nodeType":"YulLiteral","src":"10391:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10376:3:14","nodeType":"YulIdentifier","src":"10376:3:14"},"nativeSrc":"10376:18:14","nodeType":"YulFunctionCall","src":"10376:18:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10323:43:14","nodeType":"YulIdentifier","src":"10323:43:14"},"nativeSrc":"10323:72:14","nodeType":"YulFunctionCall","src":"10323:72:14"},"nativeSrc":"10323:72:14","nodeType":"YulExpressionStatement","src":"10323:72:14"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"10070:332:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10160:9:14","nodeType":"YulTypedName","src":"10160:9:14","type":""},{"name":"value1","nativeSrc":"10172:6:14","nodeType":"YulTypedName","src":"10172:6:14","type":""},{"name":"value0","nativeSrc":"10180:6:14","nodeType":"YulTypedName","src":"10180:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10191:4:14","nodeType":"YulTypedName","src":"10191:4:14","type":""}],"src":"10070:332:14"},{"body":{"nativeSrc":"10436:152:14","nodeType":"YulBlock","src":"10436:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10453:1:14","nodeType":"YulLiteral","src":"10453:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10456:77:14","nodeType":"YulLiteral","src":"10456:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10446:6:14","nodeType":"YulIdentifier","src":"10446:6:14"},"nativeSrc":"10446:88:14","nodeType":"YulFunctionCall","src":"10446:88:14"},"nativeSrc":"10446:88:14","nodeType":"YulExpressionStatement","src":"10446:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10550:1:14","nodeType":"YulLiteral","src":"10550:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"10553:4:14","nodeType":"YulLiteral","src":"10553:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"10543:6:14","nodeType":"YulIdentifier","src":"10543:6:14"},"nativeSrc":"10543:15:14","nodeType":"YulFunctionCall","src":"10543:15:14"},"nativeSrc":"10543:15:14","nodeType":"YulExpressionStatement","src":"10543:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10574:1:14","nodeType":"YulLiteral","src":"10574:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10577:4:14","nodeType":"YulLiteral","src":"10577:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10567:6:14","nodeType":"YulIdentifier","src":"10567:6:14"},"nativeSrc":"10567:15:14","nodeType":"YulFunctionCall","src":"10567:15:14"},"nativeSrc":"10567:15:14","nodeType":"YulExpressionStatement","src":"10567:15:14"}]},"name":"panic_error_0x32","nativeSrc":"10408:180:14","nodeType":"YulFunctionDefinition","src":"10408:180:14"},{"body":{"nativeSrc":"10622:152:14","nodeType":"YulBlock","src":"10622:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10639:1:14","nodeType":"YulLiteral","src":"10639:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10642:77:14","nodeType":"YulLiteral","src":"10642:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10632:6:14","nodeType":"YulIdentifier","src":"10632:6:14"},"nativeSrc":"10632:88:14","nodeType":"YulFunctionCall","src":"10632:88:14"},"nativeSrc":"10632:88:14","nodeType":"YulExpressionStatement","src":"10632:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10736:1:14","nodeType":"YulLiteral","src":"10736:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"10739:4:14","nodeType":"YulLiteral","src":"10739:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10729:6:14","nodeType":"YulIdentifier","src":"10729:6:14"},"nativeSrc":"10729:15:14","nodeType":"YulFunctionCall","src":"10729:15:14"},"nativeSrc":"10729:15:14","nodeType":"YulExpressionStatement","src":"10729:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10760:1:14","nodeType":"YulLiteral","src":"10760:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10763:4:14","nodeType":"YulLiteral","src":"10763:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10753:6:14","nodeType":"YulIdentifier","src":"10753:6:14"},"nativeSrc":"10753:15:14","nodeType":"YulFunctionCall","src":"10753:15:14"},"nativeSrc":"10753:15:14","nodeType":"YulExpressionStatement","src":"10753:15:14"}]},"name":"panic_error_0x11","nativeSrc":"10594:180:14","nodeType":"YulFunctionDefinition","src":"10594:180:14"},{"body":{"nativeSrc":"10825:149:14","nodeType":"YulBlock","src":"10825:149:14","statements":[{"nativeSrc":"10835:25:14","nodeType":"YulAssignment","src":"10835:25:14","value":{"arguments":[{"name":"x","nativeSrc":"10858:1:14","nodeType":"YulIdentifier","src":"10858:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10840:17:14","nodeType":"YulIdentifier","src":"10840:17:14"},"nativeSrc":"10840:20:14","nodeType":"YulFunctionCall","src":"10840:20:14"},"variableNames":[{"name":"x","nativeSrc":"10835:1:14","nodeType":"YulIdentifier","src":"10835:1:14"}]},{"nativeSrc":"10869:25:14","nodeType":"YulAssignment","src":"10869:25:14","value":{"arguments":[{"name":"y","nativeSrc":"10892:1:14","nodeType":"YulIdentifier","src":"10892:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10874:17:14","nodeType":"YulIdentifier","src":"10874:17:14"},"nativeSrc":"10874:20:14","nodeType":"YulFunctionCall","src":"10874:20:14"},"variableNames":[{"name":"y","nativeSrc":"10869:1:14","nodeType":"YulIdentifier","src":"10869:1:14"}]},{"nativeSrc":"10903:17:14","nodeType":"YulAssignment","src":"10903:17:14","value":{"arguments":[{"name":"x","nativeSrc":"10915:1:14","nodeType":"YulIdentifier","src":"10915:1:14"},{"name":"y","nativeSrc":"10918:1:14","nodeType":"YulIdentifier","src":"10918:1:14"}],"functionName":{"name":"sub","nativeSrc":"10911:3:14","nodeType":"YulIdentifier","src":"10911:3:14"},"nativeSrc":"10911:9:14","nodeType":"YulFunctionCall","src":"10911:9:14"},"variableNames":[{"name":"diff","nativeSrc":"10903:4:14","nodeType":"YulIdentifier","src":"10903:4:14"}]},{"body":{"nativeSrc":"10945:22:14","nodeType":"YulBlock","src":"10945:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10947:16:14","nodeType":"YulIdentifier","src":"10947:16:14"},"nativeSrc":"10947:18:14","nodeType":"YulFunctionCall","src":"10947:18:14"},"nativeSrc":"10947:18:14","nodeType":"YulExpressionStatement","src":"10947:18:14"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"10936:4:14","nodeType":"YulIdentifier","src":"10936:4:14"},{"name":"x","nativeSrc":"10942:1:14","nodeType":"YulIdentifier","src":"10942:1:14"}],"functionName":{"name":"gt","nativeSrc":"10933:2:14","nodeType":"YulIdentifier","src":"10933:2:14"},"nativeSrc":"10933:11:14","nodeType":"YulFunctionCall","src":"10933:11:14"},"nativeSrc":"10930:37:14","nodeType":"YulIf","src":"10930:37:14"}]},"name":"checked_sub_t_uint256","nativeSrc":"10780:194:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10811:1:14","nodeType":"YulTypedName","src":"10811:1:14","type":""},{"name":"y","nativeSrc":"10814:1:14","nodeType":"YulTypedName","src":"10814:1:14","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"10820:4:14","nodeType":"YulTypedName","src":"10820:4:14","type":""}],"src":"10780:194:14"},{"body":{"nativeSrc":"11008:152:14","nodeType":"YulBlock","src":"11008:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11025:1:14","nodeType":"YulLiteral","src":"11025:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"11028:77:14","nodeType":"YulLiteral","src":"11028:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11018:6:14","nodeType":"YulIdentifier","src":"11018:6:14"},"nativeSrc":"11018:88:14","nodeType":"YulFunctionCall","src":"11018:88:14"},"nativeSrc":"11018:88:14","nodeType":"YulExpressionStatement","src":"11018:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11122:1:14","nodeType":"YulLiteral","src":"11122:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"11125:4:14","nodeType":"YulLiteral","src":"11125:4:14","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"11115:6:14","nodeType":"YulIdentifier","src":"11115:6:14"},"nativeSrc":"11115:15:14","nodeType":"YulFunctionCall","src":"11115:15:14"},"nativeSrc":"11115:15:14","nodeType":"YulExpressionStatement","src":"11115:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11146:1:14","nodeType":"YulLiteral","src":"11146:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"11149:4:14","nodeType":"YulLiteral","src":"11149:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11139:6:14","nodeType":"YulIdentifier","src":"11139:6:14"},"nativeSrc":"11139:15:14","nodeType":"YulFunctionCall","src":"11139:15:14"},"nativeSrc":"11139:15:14","nodeType":"YulExpressionStatement","src":"11139:15:14"}]},"name":"panic_error_0x31","nativeSrc":"10980:180:14","nodeType":"YulFunctionDefinition","src":"10980:180:14"},{"body":{"nativeSrc":"11224:40:14","nodeType":"YulBlock","src":"11224:40:14","statements":[{"nativeSrc":"11235:22:14","nodeType":"YulAssignment","src":"11235:22:14","value":{"arguments":[{"name":"value","nativeSrc":"11251:5:14","nodeType":"YulIdentifier","src":"11251:5:14"}],"functionName":{"name":"mload","nativeSrc":"11245:5:14","nodeType":"YulIdentifier","src":"11245:5:14"},"nativeSrc":"11245:12:14","nodeType":"YulFunctionCall","src":"11245:12:14"},"variableNames":[{"name":"length","nativeSrc":"11235:6:14","nodeType":"YulIdentifier","src":"11235:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11166:98:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11207:5:14","nodeType":"YulTypedName","src":"11207:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11217:6:14","nodeType":"YulTypedName","src":"11217:6:14","type":""}],"src":"11166:98:14"},{"body":{"nativeSrc":"11383:34:14","nodeType":"YulBlock","src":"11383:34:14","statements":[{"nativeSrc":"11393:18:14","nodeType":"YulAssignment","src":"11393:18:14","value":{"name":"pos","nativeSrc":"11408:3:14","nodeType":"YulIdentifier","src":"11408:3:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"11393:11:14","nodeType":"YulIdentifier","src":"11393:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11270:147:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11355:3:14","nodeType":"YulTypedName","src":"11355:3:14","type":""},{"name":"length","nativeSrc":"11360:6:14","nodeType":"YulTypedName","src":"11360:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11371:11:14","nodeType":"YulTypedName","src":"11371:11:14","type":""}],"src":"11270:147:14"},{"body":{"nativeSrc":"11485:184:14","nodeType":"YulBlock","src":"11485:184:14","statements":[{"nativeSrc":"11495:10:14","nodeType":"YulVariableDeclaration","src":"11495:10:14","value":{"kind":"number","nativeSrc":"11504:1:14","nodeType":"YulLiteral","src":"11504:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11499:1:14","nodeType":"YulTypedName","src":"11499:1:14","type":""}]},{"body":{"nativeSrc":"11564:63:14","nodeType":"YulBlock","src":"11564:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11589:3:14","nodeType":"YulIdentifier","src":"11589:3:14"},{"name":"i","nativeSrc":"11594:1:14","nodeType":"YulIdentifier","src":"11594:1:14"}],"functionName":{"name":"add","nativeSrc":"11585:3:14","nodeType":"YulIdentifier","src":"11585:3:14"},"nativeSrc":"11585:11:14","nodeType":"YulFunctionCall","src":"11585:11:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11608:3:14","nodeType":"YulIdentifier","src":"11608:3:14"},{"name":"i","nativeSrc":"11613:1:14","nodeType":"YulIdentifier","src":"11613:1:14"}],"functionName":{"name":"add","nativeSrc":"11604:3:14","nodeType":"YulIdentifier","src":"11604:3:14"},"nativeSrc":"11604:11:14","nodeType":"YulFunctionCall","src":"11604:11:14"}],"functionName":{"name":"mload","nativeSrc":"11598:5:14","nodeType":"YulIdentifier","src":"11598:5:14"},"nativeSrc":"11598:18:14","nodeType":"YulFunctionCall","src":"11598:18:14"}],"functionName":{"name":"mstore","nativeSrc":"11578:6:14","nodeType":"YulIdentifier","src":"11578:6:14"},"nativeSrc":"11578:39:14","nodeType":"YulFunctionCall","src":"11578:39:14"},"nativeSrc":"11578:39:14","nodeType":"YulExpressionStatement","src":"11578:39:14"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11525:1:14","nodeType":"YulIdentifier","src":"11525:1:14"},{"name":"length","nativeSrc":"11528:6:14","nodeType":"YulIdentifier","src":"11528:6:14"}],"functionName":{"name":"lt","nativeSrc":"11522:2:14","nodeType":"YulIdentifier","src":"11522:2:14"},"nativeSrc":"11522:13:14","nodeType":"YulFunctionCall","src":"11522:13:14"},"nativeSrc":"11514:113:14","nodeType":"YulForLoop","post":{"nativeSrc":"11536:19:14","nodeType":"YulBlock","src":"11536:19:14","statements":[{"nativeSrc":"11538:15:14","nodeType":"YulAssignment","src":"11538:15:14","value":{"arguments":[{"name":"i","nativeSrc":"11547:1:14","nodeType":"YulIdentifier","src":"11547:1:14"},{"kind":"number","nativeSrc":"11550:2:14","nodeType":"YulLiteral","src":"11550:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11543:3:14","nodeType":"YulIdentifier","src":"11543:3:14"},"nativeSrc":"11543:10:14","nodeType":"YulFunctionCall","src":"11543:10:14"},"variableNames":[{"name":"i","nativeSrc":"11538:1:14","nodeType":"YulIdentifier","src":"11538:1:14"}]}]},"pre":{"nativeSrc":"11518:3:14","nodeType":"YulBlock","src":"11518:3:14","statements":[]},"src":"11514:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11647:3:14","nodeType":"YulIdentifier","src":"11647:3:14"},{"name":"length","nativeSrc":"11652:6:14","nodeType":"YulIdentifier","src":"11652:6:14"}],"functionName":{"name":"add","nativeSrc":"11643:3:14","nodeType":"YulIdentifier","src":"11643:3:14"},"nativeSrc":"11643:16:14","nodeType":"YulFunctionCall","src":"11643:16:14"},{"kind":"number","nativeSrc":"11661:1:14","nodeType":"YulLiteral","src":"11661:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11636:6:14","nodeType":"YulIdentifier","src":"11636:6:14"},"nativeSrc":"11636:27:14","nodeType":"YulFunctionCall","src":"11636:27:14"},"nativeSrc":"11636:27:14","nodeType":"YulExpressionStatement","src":"11636:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11423:246:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11467:3:14","nodeType":"YulTypedName","src":"11467:3:14","type":""},{"name":"dst","nativeSrc":"11472:3:14","nodeType":"YulTypedName","src":"11472:3:14","type":""},{"name":"length","nativeSrc":"11477:6:14","nodeType":"YulTypedName","src":"11477:6:14","type":""}],"src":"11423:246:14"},{"body":{"nativeSrc":"11783:278:14","nodeType":"YulBlock","src":"11783:278:14","statements":[{"nativeSrc":"11793:52:14","nodeType":"YulVariableDeclaration","src":"11793:52:14","value":{"arguments":[{"name":"value","nativeSrc":"11839:5:14","nodeType":"YulIdentifier","src":"11839:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11807:31:14","nodeType":"YulIdentifier","src":"11807:31:14"},"nativeSrc":"11807:38:14","nodeType":"YulFunctionCall","src":"11807:38:14"},"variables":[{"name":"length","nativeSrc":"11797:6:14","nodeType":"YulTypedName","src":"11797:6:14","type":""}]},{"nativeSrc":"11854:95:14","nodeType":"YulAssignment","src":"11854:95:14","value":{"arguments":[{"name":"pos","nativeSrc":"11937:3:14","nodeType":"YulIdentifier","src":"11937:3:14"},{"name":"length","nativeSrc":"11942:6:14","nodeType":"YulIdentifier","src":"11942:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11861:75:14","nodeType":"YulIdentifier","src":"11861:75:14"},"nativeSrc":"11861:88:14","nodeType":"YulFunctionCall","src":"11861:88:14"},"variableNames":[{"name":"pos","nativeSrc":"11854:3:14","nodeType":"YulIdentifier","src":"11854:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11997:5:14","nodeType":"YulIdentifier","src":"11997:5:14"},{"kind":"number","nativeSrc":"12004:4:14","nodeType":"YulLiteral","src":"12004:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11993:3:14","nodeType":"YulIdentifier","src":"11993:3:14"},"nativeSrc":"11993:16:14","nodeType":"YulFunctionCall","src":"11993:16:14"},{"name":"pos","nativeSrc":"12011:3:14","nodeType":"YulIdentifier","src":"12011:3:14"},{"name":"length","nativeSrc":"12016:6:14","nodeType":"YulIdentifier","src":"12016:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11958:34:14","nodeType":"YulIdentifier","src":"11958:34:14"},"nativeSrc":"11958:65:14","nodeType":"YulFunctionCall","src":"11958:65:14"},"nativeSrc":"11958:65:14","nodeType":"YulExpressionStatement","src":"11958:65:14"},{"nativeSrc":"12032:23:14","nodeType":"YulAssignment","src":"12032:23:14","value":{"arguments":[{"name":"pos","nativeSrc":"12043:3:14","nodeType":"YulIdentifier","src":"12043:3:14"},{"name":"length","nativeSrc":"12048:6:14","nodeType":"YulIdentifier","src":"12048:6:14"}],"functionName":{"name":"add","nativeSrc":"12039:3:14","nodeType":"YulIdentifier","src":"12039:3:14"},"nativeSrc":"12039:16:14","nodeType":"YulFunctionCall","src":"12039:16:14"},"variableNames":[{"name":"end","nativeSrc":"12032:3:14","nodeType":"YulIdentifier","src":"12032:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11675:386:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11764:5:14","nodeType":"YulTypedName","src":"11764:5:14","type":""},{"name":"pos","nativeSrc":"11771:3:14","nodeType":"YulTypedName","src":"11771:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11779:3:14","nodeType":"YulTypedName","src":"11779:3:14","type":""}],"src":"11675:386:14"},{"body":{"nativeSrc":"12201:137:14","nodeType":"YulBlock","src":"12201:137:14","statements":[{"nativeSrc":"12212:100:14","nodeType":"YulAssignment","src":"12212:100:14","value":{"arguments":[{"name":"value0","nativeSrc":"12299:6:14","nodeType":"YulIdentifier","src":"12299:6:14"},{"name":"pos","nativeSrc":"12308:3:14","nodeType":"YulIdentifier","src":"12308:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12219:79:14","nodeType":"YulIdentifier","src":"12219:79:14"},"nativeSrc":"12219:93:14","nodeType":"YulFunctionCall","src":"12219:93:14"},"variableNames":[{"name":"pos","nativeSrc":"12212:3:14","nodeType":"YulIdentifier","src":"12212:3:14"}]},{"nativeSrc":"12322:10:14","nodeType":"YulAssignment","src":"12322:10:14","value":{"name":"pos","nativeSrc":"12329:3:14","nodeType":"YulIdentifier","src":"12329:3:14"},"variableNames":[{"name":"end","nativeSrc":"12322:3:14","nodeType":"YulIdentifier","src":"12322:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"12067:271:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12180:3:14","nodeType":"YulTypedName","src":"12180:3:14","type":""},{"name":"value0","nativeSrc":"12186:6:14","nodeType":"YulTypedName","src":"12186:6:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12197:3:14","nodeType":"YulTypedName","src":"12197:3:14","type":""}],"src":"12067:271:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$772(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$772(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$772(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$772(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$772(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$772(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$772(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a withdrawer\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806391d14854116100ad578063d547741f11610071578063d547741f1461032f578063df74e0281461034b578063f2fde38b14610367578063f3fef3a314610383578063f516440c1461039f5761012c565b806391d1485414610277578063a217fddf146102a7578063b5b68afe146102c5578063b6b55f25146102e3578063ca15c873146102ff5761012c565b8063715018a6116100f4578063715018a6146101e5578063827a560b146101ef57806385f438c11461020b5780638da5cb5b146102295780639010d07c146102475761012c565b806301ffc9a714610131578063144fa6d714610161578063248a9ca31461017d5780632f2ff15d146101ad57806336568abe146101c9575b600080fd5b61014b60048036038101906101469190611393565b6103bd565b60405161015891906113db565b60405180910390f35b61017b60048036038101906101769190611466565b610437565b005b610197600480360381019061019291906114c9565b610483565b6040516101a49190611505565b60405180910390f35b6101c760048036038101906101c2919061154c565b6104a3565b005b6101e360048036038101906101de919061154c565b6104c5565b005b6101ed610540565b005b610209600480360381019061020491906115b8565b610554565b005b610213610579565b6040516102209190611505565b60405180910390f35b61023161059d565b60405161023e91906115f4565b60405180910390f35b610261600480360381019061025c9190611645565b6105c6565b60405161026e91906115f4565b60405180910390f35b610291600480360381019061028c919061154c565b6105f5565b60405161029e91906113db565b60405180910390f35b6102af610660565b6040516102bc9190611505565b60405180910390f35b6102cd610667565b6040516102da91906113db565b60405180910390f35b6102fd60048036038101906102f89190611685565b61067a565b005b610319600480360381019061031491906114c9565b6106ab565b60405161032691906116c1565b60405180910390f35b6103496004803603810190610344919061154c565b6106cf565b005b61036560048036038101906103609190611685565b6106f1565b005b610381600480360381019061037c91906116dc565b610703565b005b61039d60048036038101906103989190611709565b610789565b005b6103a76108e2565b6040516103b491906116c1565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610430575061042f826108e8565b5b9050919050565b61043f610962565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060016000838152602001908152602001600020600101549050919050565b6104ac82610483565b6104b5816109e9565b6104bf83836109fd565b50505050565b6104cd610a43565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610531576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053b8282610a4b565b505050565b610548610962565b6105526000610a91565b565b61055c610962565b80600560006101000a81548160ff02191690831515021790555050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105ed8260026000868152602001908152602001600020610b5590919063ffffffff16565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600560009054906101000a900460ff1681565b6106a8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610b6f565b50565b60006106c860026000848152602001908152602001600020610bf1565b9050919050565b6106d882610483565b6106e1816109e9565b6106eb8383610a4b565b50505050565b6106f9610962565b8060048190555050565b61070b610962565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077d5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161077491906115f4565b60405180910390fd5b61078681610a91565b50565b610791610a43565b73ffffffffffffffffffffffffffffffffffffffff166107af61059d565b73ffffffffffffffffffffffffffffffffffffffff1614806107fe57506107fd7f574954484452415745525f524f4c4500000000000000000000000000000000006107f8610a43565b6105f5565b5b61083d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610834906117a6565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161089a9291906117c6565b6020604051808303816000875af11580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611804565b505050565b60045481565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061095b575061095a82610c06565b5b9050919050565b61096a610a43565b73ffffffffffffffffffffffffffffffffffffffff1661098861059d565b73ffffffffffffffffffffffffffffffffffffffff16146109e7576109ab610a43565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109de91906115f4565b60405180910390fd5b565b6109fa816109f5610a43565b610c70565b50565b600080610a0a8484610cc1565b90508015610a3957610a378360026000878152602001908152602001600020610db290919063ffffffff16565b505b8091505092915050565b600033905090565b600080610a588484610de2565b90508015610a8757610a858360026000878152602001908152602001600020610ed590919063ffffffff16565b505b8091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610b648360000183610f05565b60001c905092915050565b610beb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610ba493929190611831565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f30565b50505050565b6000610bff82600001610fc7565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c7a82826105f5565b610cbd5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610cb4929190611868565b60405180910390fd5b5050565b6000610ccd83836105f5565b610da757600180600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d44610a43565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610dac565b600090505b92915050565b6000610dda836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610fd8565b905092915050565b6000610dee83836105f5565b15610eca5760006001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e67610a43565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610ecf565b600090505b92915050565b6000610efd836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611048565b905092915050565b6000826000018281548110610f1d57610f1c611891565b5b9060005260206000200154905092915050565b6000610f5b828473ffffffffffffffffffffffffffffffffffffffff1661115c90919063ffffffff16565b90506000815114158015610f80575080806020019051810190610f7e9190611804565b155b15610fc257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fb991906115f4565b60405180910390fd5b505050565b600081600001805490509050919050565b6000610fe48383611172565b61103d578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611042565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461115057600060018261107a91906118ef565b905060006001866000018054905061109291906118ef565b90508082146111015760008660000182815481106110b3576110b2611891565b5b90600052602060002001549050808760000184815481106110d7576110d6611891565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061111557611114611923565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611156565b60009150505b92915050565b606061116a83836000611195565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6060814710156111dc57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016111d391906115f4565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161120591906119c3565b60006040518083038185875af1925050503d8060008114611242576040519150601f19603f3d011682016040523d82523d6000602084013e611247565b606091505b5091509150611257868383611262565b925050509392505050565b60608261127757611272826112f1565b6112e9565b6000825114801561129f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156112e157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016112d891906115f4565b60405180910390fd5b8190506112ea565b5b9392505050565b6000815111156113045780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113708161133b565b811461137b57600080fd5b50565b60008135905061138d81611367565b92915050565b6000602082840312156113a9576113a8611336565b5b60006113b78482850161137e565b91505092915050565b60008115159050919050565b6113d5816113c0565b82525050565b60006020820190506113f060008301846113cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611421826113f6565b9050919050565b600061143382611416565b9050919050565b61144381611428565b811461144e57600080fd5b50565b6000813590506114608161143a565b92915050565b60006020828403121561147c5761147b611336565b5b600061148a84828501611451565b91505092915050565b6000819050919050565b6114a681611493565b81146114b157600080fd5b50565b6000813590506114c38161149d565b92915050565b6000602082840312156114df576114de611336565b5b60006114ed848285016114b4565b91505092915050565b6114ff81611493565b82525050565b600060208201905061151a60008301846114f6565b92915050565b61152981611416565b811461153457600080fd5b50565b60008135905061154681611520565b92915050565b6000806040838503121561156357611562611336565b5b6000611571858286016114b4565b925050602061158285828601611537565b9150509250929050565b611595816113c0565b81146115a057600080fd5b50565b6000813590506115b28161158c565b92915050565b6000602082840312156115ce576115cd611336565b5b60006115dc848285016115a3565b91505092915050565b6115ee81611416565b82525050565b600060208201905061160960008301846115e5565b92915050565b6000819050919050565b6116228161160f565b811461162d57600080fd5b50565b60008135905061163f81611619565b92915050565b6000806040838503121561165c5761165b611336565b5b600061166a858286016114b4565b925050602061167b85828601611630565b9150509250929050565b60006020828403121561169b5761169a611336565b5b60006116a984828501611630565b91505092915050565b6116bb8161160f565b82525050565b60006020820190506116d660008301846116b2565b92915050565b6000602082840312156116f2576116f1611336565b5b600061170084828501611537565b91505092915050565b600080604083850312156117205761171f611336565b5b600061172e85828601611537565b925050602061173f85828601611630565b9150509250929050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420612077697468647261776572000000000000600082015250565b6000611790601a83611749565b915061179b8261175a565b602082019050919050565b600060208201905081810360008301526117bf81611783565b9050919050565b60006040820190506117db60008301856115e5565b6117e860208301846116b2565b9392505050565b6000815190506117fe8161158c565b92915050565b60006020828403121561181a57611819611336565b5b6000611828848285016117ef565b91505092915050565b600060608201905061184660008301866115e5565b61185360208301856115e5565b61186060408301846116b2565b949350505050565b600060408201905061187d60008301856115e5565b61188a60208301846114f6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118fa8261160f565b91506119058361160f565b925082820390508181111561191d5761191c6118c0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561198657808201518184015260208101905061196b565b60008484015250505050565b600061199d82611952565b6119a7818561195d565b93506119b7818560208601611968565b80840191505092915050565b60006119cf8284611992565b91508190509291505056fea26469706673582212204b5b1bae369780cb1612dcd8a510d28ee85bff4fca1cb07ba25c7bd4d14c67ca64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDF74E028 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xF516440C EQ PUSH2 0x39F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xB5B68AFE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2FF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x827A560B EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x85F438C1 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x247 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x430 JUMPI POP PUSH2 0x42F DUP3 PUSH2 0x8E8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43F PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AC DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x4B5 DUP2 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x4BF DUP4 DUP4 PUSH2 0x9FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4CD PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53B DUP3 DUP3 PUSH2 0xA4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x552 PUSH1 0x0 PUSH2 0xA91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x55C PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xB55 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A8 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xB6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D8 DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x6E1 DUP2 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0xA4B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6F9 PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x70B PUSH2 0x962 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x786 DUP2 PUSH2 0xA91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x791 PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AF PUSH2 0x59D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7FE JUMPI POP PUSH2 0x7FD PUSH32 0x574954484452415745525F524F4C450000000000000000000000000000000000 PUSH2 0x7F8 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST JUMPDEST PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP3 SWAP2 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x95B JUMPI POP PUSH2 0x95A DUP3 PUSH2 0xC06 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96A PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x988 PUSH2 0x59D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E7 JUMPI PUSH2 0x9AB PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x9F5 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0xC70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0A DUP5 DUP5 PUSH2 0xCC1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA39 JUMPI PUSH2 0xA37 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xDB2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA58 DUP5 DUP5 PUSH2 0xDE2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA85 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xED5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBEB DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBA4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF30 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF DUP3 PUSH1 0x0 ADD PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP3 DUP3 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0xCBD JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB4 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCD DUP4 DUP4 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0xDA7 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD44 PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDA DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEE DUP4 DUP4 PUSH2 0x5F5 JUMP JUMPDEST ISZERO PUSH2 0xECA JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE67 PUSH2 0xA43 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFD DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1048 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x115C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xF80 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFC2 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE4 DUP4 DUP4 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x103D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1150 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1101 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x116A DUP4 DUP4 PUSH1 0x0 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11DC JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1205 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1242 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1257 DUP7 DUP4 DUP4 PUSH2 0x1262 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1277 JUMPI PUSH2 0x1272 DUP3 PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x129F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x12E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x12EA JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1304 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1370 DUP2 PUSH2 0x133B JUMP JUMPDEST DUP2 EQ PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138D DUP2 PUSH2 0x1367 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x13A8 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B7 DUP5 DUP3 DUP6 ADD PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D5 DUP2 PUSH2 0x13C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1421 DUP3 PUSH2 0x13F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1433 DUP3 PUSH2 0x1416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1443 DUP2 PUSH2 0x1428 JUMP JUMPDEST DUP2 EQ PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1460 DUP2 PUSH2 0x143A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147B PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A6 DUP2 PUSH2 0x1493 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C3 DUP2 PUSH2 0x149D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH2 0x14DE PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14ED DUP5 DUP3 DUP6 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FF DUP2 PUSH2 0x1493 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP2 EQ PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1546 DUP2 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1571 DUP6 DUP3 DUP7 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1582 DUP6 DUP3 DUP7 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1595 DUP2 PUSH2 0x13C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B2 DUP2 PUSH2 0x158C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DC DUP5 DUP3 DUP6 ADD PUSH2 0x15A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EE DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1609 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1622 DUP2 PUSH2 0x160F JUMP JUMPDEST DUP2 EQ PUSH2 0x162D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x163F DUP2 PUSH2 0x1619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166A DUP6 DUP3 DUP7 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167B DUP6 DUP3 DUP7 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A9 DUP5 DUP3 DUP6 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16BB DUP2 PUSH2 0x160F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1700 DUP5 DUP3 DUP6 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x171F PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172E DUP6 DUP3 DUP7 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173F DUP6 DUP3 DUP7 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612077697468647261776572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1790 PUSH1 0x1A DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH2 0x179B DUP3 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17BF DUP2 PUSH2 0x1783 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17DB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x17E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17FE DUP2 PUSH2 0x158C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x1336 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1828 DUP5 DUP3 DUP6 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1846 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x1853 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x1860 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x187D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x188A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18FA DUP3 PUSH2 0x160F JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP4 PUSH2 0x160F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x18C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1986 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP3 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x19A7 DUP2 DUP6 PUSH2 0x195D JUMP JUMPDEST SWAP4 POP PUSH2 0x19B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1968 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CF DUP3 DUP5 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B JUMPDEST SHL 0xAE CALLDATASIZE SWAP8 DUP1 0xCB AND SLT 0xDC 0xD8 0xA5 LT 0xD2 DUP15 0xE8 JUMPDEST SELFDESTRUCT 0x4F 0xCA SHR 0xB0 PUSH28 0xA25C7BD4D14C67CA64736F6C63430008180033000000000000000000 ","sourceMap":"379:1187:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:212:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;808:83:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:2;;;:::i;:::-;;1023:105:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;590:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1526:142:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;557:26:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1836:131:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;899:116:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1136:119:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;518:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:212:3;814:4;852:42;837:57;;;:11;:57;;;;:97;;;;898:36;922:11;898:23;:36::i;:::-;837:97;830:104;;729:212;;;:::o;808:83:13:-;1531:13:2;:11;:13::i;:::-;877:6:13::1;869:5;;:14;;;;;;;;;;;;;;;;;;808:83:::0;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1023:105:13:-;1531:13:2;:11;:13::i;:::-;1111:9:13::1;1094:14;;:26;;;;;;;;;;;;;;;;;;1023:105:::0;:::o;590:70::-;632:28;590:70;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1526:142:3:-;1607:7;1633:28;1655:5;1633:12;:18;1646:4;1633:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1626:35;;1526:142;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;557:26:13:-;;;;;;;;;;;;;:::o;1263:129::-;1316:68;1343:5;;;;;;;;;;;1350:10;1370:4;1377:6;1316:26;:68::i;:::-;1263:129;:::o;1836:131:3:-;1907:7;1933:27;:12;:18;1946:4;1933:18;;;;;;;;;;;:25;:27::i;:::-;1926:34;;1836:131;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;899:116:13:-;1531:13:2;:11;:13::i;:::-;997:10:13::1;977:17;:30;;;;899:116:::0;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1136:119:13:-;1456:12;:10;:12::i;:::-;1445:23;;:7;:5;:7::i;:::-;:23;;;:67;;;;1472:40;;1499:12;:10;:12::i;:::-;1472:7;:40::i;:::-;1445:67;1437:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1219:5:::1;;;;;;;;;;;:14;;;1234:3;1239:7;1219:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1136:119:::0;;:::o;518:32::-;;;;:::o;2565:202:0:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;2069:257:3:-;2155:4;2171:12;2186:31;2203:4;2209:7;2186:16;:31::i;:::-;2171:46;;2231:7;2227:69;;;2254:31;2277:7;2254:12;:18;2267:4;2254:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2227:69;2312:7;2305:14;;;2069:257;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;2429:262:3:-;2516:4;2532:12;2547:32;2565:4;2571:7;2547:17;:32::i;:::-;2532:47;;2593:7;2589:72;;;2616:34;2642:7;2616:12;:18;2629:4;2616:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2589:72;2677:7;2670:14;;;2429:262;;;;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9574:156:12:-;9648:7;9698:22;9702:3;:10;;9714:5;9698:3;:22::i;:::-;9690:31;;9667:56;;9574:156;;;;:::o;1702:188:7:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;9117:115:12:-;9180:7;9206:19;9214:3;:10;;9206:7;:19::i;:::-;9199:26;;9117:115;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;8316:150:12:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;8634:156:12:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;4923:118::-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;;5009:25;;4923:118;;;;:::o;4059:629:7:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;4474:107:12:-;4530:7;4556:3;:11;;:18;;;;4549:25;;4474:107;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;2815:1368::-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;2705:151:8:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;4264:129:12:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;3180:392:8:-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:14;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:110::-;1803:7;1832:24;1850:5;1832:24;:::i;:::-;1821:35;;1752:110;;;:::o;1868:150::-;1955:38;1987:5;1955:38;:::i;:::-;1948:5;1945:49;1935:77;;2008:1;2005;1998:12;1935:77;1868:150;:::o;2024:167::-;2084:5;2122:6;2109:20;2100:29;;2138:47;2179:5;2138:47;:::i;:::-;2024:167;;;;:::o;2197:357::-;2270:6;2319:2;2307:9;2298:7;2294:23;2290:32;2287:119;;;2325:79;;:::i;:::-;2287:119;2445:1;2470:67;2529:7;2520:6;2509:9;2505:22;2470:67;:::i;:::-;2460:77;;2416:131;2197:357;;;;:::o;2560:77::-;2597:7;2626:5;2615:16;;2560:77;;;:::o;2643:122::-;2716:24;2734:5;2716:24;:::i;:::-;2709:5;2706:35;2696:63;;2755:1;2752;2745:12;2696:63;2643:122;:::o;2771:139::-;2817:5;2855:6;2842:20;2833:29;;2871:33;2898:5;2871:33;:::i;:::-;2771:139;;;;:::o;2916:329::-;2975:6;3024:2;3012:9;3003:7;2999:23;2995:32;2992:119;;;3030:79;;:::i;:::-;2992:119;3150:1;3175:53;3220:7;3211:6;3200:9;3196:22;3175:53;:::i;:::-;3165:63;;3121:117;2916:329;;;;:::o;3251:118::-;3338:24;3356:5;3338:24;:::i;:::-;3333:3;3326:37;3251:118;;:::o;3375:222::-;3468:4;3506:2;3495:9;3491:18;3483:26;;3519:71;3587:1;3576:9;3572:17;3563:6;3519:71;:::i;:::-;3375:222;;;;:::o;3603:122::-;3676:24;3694:5;3676:24;:::i;:::-;3669:5;3666:35;3656:63;;3715:1;3712;3705:12;3656:63;3603:122;:::o;3731:139::-;3777:5;3815:6;3802:20;3793:29;;3831:33;3858:5;3831:33;:::i;:::-;3731:139;;;;:::o;3876:474::-;3944:6;3952;4001:2;3989:9;3980:7;3976:23;3972:32;3969:119;;;4007:79;;:::i;:::-;3969:119;4127:1;4152:53;4197:7;4188:6;4177:9;4173:22;4152:53;:::i;:::-;4142:63;;4098:117;4254:2;4280:53;4325:7;4316:6;4305:9;4301:22;4280:53;:::i;:::-;4270:63;;4225:118;3876:474;;;;;:::o;4356:116::-;4426:21;4441:5;4426:21;:::i;:::-;4419:5;4416:32;4406:60;;4462:1;4459;4452:12;4406:60;4356:116;:::o;4478:133::-;4521:5;4559:6;4546:20;4537:29;;4575:30;4599:5;4575:30;:::i;:::-;4478:133;;;;:::o;4617:323::-;4673:6;4722:2;4710:9;4701:7;4697:23;4693:32;4690:119;;;4728:79;;:::i;:::-;4690:119;4848:1;4873:50;4915:7;4906:6;4895:9;4891:22;4873:50;:::i;:::-;4863:60;;4819:114;4617:323;;;;:::o;4946:118::-;5033:24;5051:5;5033:24;:::i;:::-;5028:3;5021:37;4946:118;;:::o;5070:222::-;5163:4;5201:2;5190:9;5186:18;5178:26;;5214:71;5282:1;5271:9;5267:17;5258:6;5214:71;:::i;:::-;5070:222;;;;:::o;5298:77::-;5335:7;5364:5;5353:16;;5298:77;;;:::o;5381:122::-;5454:24;5472:5;5454:24;:::i;:::-;5447:5;5444:35;5434:63;;5493:1;5490;5483:12;5434:63;5381:122;:::o;5509:139::-;5555:5;5593:6;5580:20;5571:29;;5609:33;5636:5;5609:33;:::i;:::-;5509:139;;;;:::o;5654:474::-;5722:6;5730;5779:2;5767:9;5758:7;5754:23;5750:32;5747:119;;;5785:79;;:::i;:::-;5747:119;5905:1;5930:53;5975:7;5966:6;5955:9;5951:22;5930:53;:::i;:::-;5920:63;;5876:117;6032:2;6058:53;6103:7;6094:6;6083:9;6079:22;6058:53;:::i;:::-;6048:63;;6003:118;5654:474;;;;;:::o;6134:329::-;6193:6;6242:2;6230:9;6221:7;6217:23;6213:32;6210:119;;;6248:79;;:::i;:::-;6210:119;6368:1;6393:53;6438:7;6429:6;6418:9;6414:22;6393:53;:::i;:::-;6383:63;;6339:117;6134:329;;;;:::o;6469:118::-;6556:24;6574:5;6556:24;:::i;:::-;6551:3;6544:37;6469:118;;:::o;6593:222::-;6686:4;6724:2;6713:9;6709:18;6701:26;;6737:71;6805:1;6794:9;6790:17;6781:6;6737:71;:::i;:::-;6593:222;;;;:::o;6821:329::-;6880:6;6929:2;6917:9;6908:7;6904:23;6900:32;6897:119;;;6935:79;;:::i;:::-;6897:119;7055:1;7080:53;7125:7;7116:6;7105:9;7101:22;7080:53;:::i;:::-;7070:63;;7026:117;6821:329;;;;:::o;7156:474::-;7224:6;7232;7281:2;7269:9;7260:7;7256:23;7252:32;7249:119;;;7287:79;;:::i;:::-;7249:119;7407:1;7432:53;7477:7;7468:6;7457:9;7453:22;7432:53;:::i;:::-;7422:63;;7378:117;7534:2;7560:53;7605:7;7596:6;7585:9;7581:22;7560:53;:::i;:::-;7550:63;;7505:118;7156:474;;;;;:::o;7636:169::-;7720:11;7754:6;7749:3;7742:19;7794:4;7789:3;7785:14;7770:29;;7636:169;;;;:::o;7811:176::-;7951:28;7947:1;7939:6;7935:14;7928:52;7811:176;:::o;7993:366::-;8135:3;8156:67;8220:2;8215:3;8156:67;:::i;:::-;8149:74;;8232:93;8321:3;8232:93;:::i;:::-;8350:2;8345:3;8341:12;8334:19;;7993:366;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8365:419;;;:::o;8790:332::-;8911:4;8949:2;8938:9;8934:18;8926:26;;8962:71;9030:1;9019:9;9015:17;9006:6;8962:71;:::i;:::-;9043:72;9111:2;9100:9;9096:18;9087:6;9043:72;:::i;:::-;8790:332;;;;;:::o;9128:137::-;9182:5;9213:6;9207:13;9198:22;;9229:30;9253:5;9229:30;:::i;:::-;9128:137;;;;:::o;9271:345::-;9338:6;9387:2;9375:9;9366:7;9362:23;9358:32;9355:119;;;9393:79;;:::i;:::-;9355:119;9513:1;9538:61;9591:7;9582:6;9571:9;9567:22;9538:61;:::i;:::-;9528:71;;9484:125;9271:345;;;;:::o;9622:442::-;9771:4;9809:2;9798:9;9794:18;9786:26;;9822:71;9890:1;9879:9;9875:17;9866:6;9822:71;:::i;:::-;9903:72;9971:2;9960:9;9956:18;9947:6;9903:72;:::i;:::-;9985;10053:2;10042:9;10038:18;10029:6;9985:72;:::i;:::-;9622:442;;;;;;:::o;10070:332::-;10191:4;10229:2;10218:9;10214:18;10206:26;;10242:71;10310:1;10299:9;10295:17;10286:6;10242:71;:::i;:::-;10323:72;10391:2;10380:9;10376:18;10367:6;10323:72;:::i;:::-;10070:332;;;;;:::o;10408:180::-;10456:77;10453:1;10446:88;10553:4;10550:1;10543:15;10577:4;10574:1;10567:15;10594:180;10642:77;10639:1;10632:88;10739:4;10736:1;10729:15;10763:4;10760:1;10753:15;10780:194;10820:4;10840:20;10858:1;10840:20;:::i;:::-;10835:25;;10874:20;10892:1;10874:20;:::i;:::-;10869:25;;10918:1;10915;10911:9;10903:17;;10942:1;10936:4;10933:11;10930:37;;;10947:18;;:::i;:::-;10930:37;10780:194;;;;:::o;10980:180::-;11028:77;11025:1;11018:88;11125:4;11122:1;11115:15;11149:4;11146:1;11139:15;11166:98;11217:6;11251:5;11245:12;11235:22;;11166:98;;;:::o;11270:147::-;11371:11;11408:3;11393:18;;11270:147;;;;:::o;11423:246::-;11504:1;11514:113;11528:6;11525:1;11522:13;11514:113;;;11613:1;11608:3;11604:11;11598:18;11594:1;11589:3;11585:11;11578:39;11550:2;11547:1;11543:10;11538:15;;11514:113;;;11661:1;11652:6;11647:3;11643:16;11636:27;11485:184;11423:246;;;:::o;11675:386::-;11779:3;11807:38;11839:5;11807:38;:::i;:::-;11861:88;11942:6;11937:3;11861:88;:::i;:::-;11854:95;;11958:65;12016:6;12011:3;12004:4;11997:5;11993:16;11958:65;:::i;:::-;12048:6;12043:3;12039:16;12032:23;;11783:278;11675:386;;;;:::o;12067:271::-;12197:3;12219:93;12308:3;12299:6;12219:93;:::i;:::-;12212:100;;12329:3;12322:10;;12067:271;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","WITHDRAWER_ROLE()":"85f438c1","deposit(uint256)":"b6b55f25","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","maxWithdrawAmount()":"f516440c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setMaxWithdrawAmount(uint256)":"df74e028","setToken(address)":"144fa6d7","setWithdrawEnable(bool)":"827a560b","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","withdraw(address,uint256)":"f3fef3a3","withdrawEnable()":"b5b68afe"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amout\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWithdrawAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnable\",\"type\":\"bool\"}],\"name\":\"setWithdrawEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb1c906fcd870fc8dfedb63bfb1bc58b4d2a7469bc13cc44d996fda430693850a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd98c7779af61b220166cf952a05f6aca82ec859744d407d29043f8100adfb9c\",\"dweb:/ipfs/Qmd6ftRk6cJgdooybM6F1X26R4SSUeNksv6Gni2NwEnKDw\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0xa83e266ae8a703144f39b90ad4a7c3b0519162626d2a8a7359d4f21fc60e3617\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6f8efdae785f6522aefcb70769d216480854dc92150766966dde9756d7b53b23\",\"dweb:/ipfs/QmfD9sEm7m8twKoDJJbUXE7XW2eGdUoPfiPCwEEiybaynA\"]}},\"version\":1}"}}}}}